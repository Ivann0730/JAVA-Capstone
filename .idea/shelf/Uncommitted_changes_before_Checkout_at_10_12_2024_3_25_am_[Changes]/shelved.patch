Index: ReadMe.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nDannyGerman: The Bugged World is an engaging 2D pixel-art RPG developed in Java. The game immerses players\r\nin a journey that begins in a  mysterious forest. As the protagonist, the player explores a beautifully crafted\r\npixelated world, filled with diverse environments, challenging enemies, and hidden treasures.\r\n\r\nThe adventure starts with the player navigating the dense forest, learning basic survival mechanics, and battling small\r\nmobs like slimes. The forest serves as a tutorial zone, introducing combat and, etc. As players progress,\r\nthey unlock access to new areas, each increasing in difficulty and complexity.\r\n\r\nEventually, the journey leads to the Dungeon the final and most exciting  location. The dungeon is filled with\r\npowerful mobs, challenging puzzles, and rare items waiting to be discovered. Players must strategically use the weapons,\r\narmor, and potions they've collected throughout the game to overcome the dungeon’s dangers and reach their ultimate\r\ngoal.\r\n\r\nWhy and How\r\n\r\nWe are a group of four students who loves playing RPG games. We’ve always enjoyed pixel-art games like Soul Knight\r\nbecause of their exciting action, colorful designs, and fun gameplay. This was the bases of our game.\r\nBut instead of creating something as complex as Soul Knight, we decided to keep things simple—something easier\r\nfor a small team like ours to make but still fun and enjoyable.\r\n\r\nThat’s how DannyGerman: The Bugged World. It’s our version of a 2D pixel RPG with exploration,\r\nbattles, and a great story. We used the skills we’ve been learning as students to make it. Our goal was to create a\r\ngame that’s easy to play, feels nostalgic, and is fun for everyone who loves pixel RPGs as much as we do.
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ReadMe.txt b/ReadMe.txt
--- a/ReadMe.txt	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
+++ b/ReadMe.txt	(date 1733771553690)
@@ -12,6 +12,14 @@
 armor, and potions they've collected throughout the game to overcome the dungeon’s dangers and reach their ultimate
 goal.
 
+DannyGerman: The Bugged world (Road Map)
+1. Create Monsters
+2. Create Battle System
+3. Create NPCS
+4. Create inventory
+5. Create events
+6. Complete the game
+
 Why and How
 
 We are a group of four students who loves playing RPG games. We’ve always enjoyed pixel-art games like Soul Knight
@@ -21,4 +29,46 @@
 
 That’s how DannyGerman: The Bugged World. It’s our version of a 2D pixel RPG with exploration,
 battles, and a great story. We used the skills we’ve been learning as students to make it. Our goal was to create a
-game that’s easy to play, feels nostalgic, and is fun for everyone who loves pixel RPGs as much as we do.
\ No newline at end of file
+game that’s easy to play, feels nostalgic, and is fun for everyone who loves pixel RPGs as much as we do.
+
+Story Line
+The game begins with the protagonist, Dannygerman, awakening in the middle of a mysterious and glitch-riddled forest. The vibrant world around him seems
+off—trees flicker between reality and code, and the air hums with an odd digital energy. By his side is his quirky and loyal companion,
+Radley the Radish Together, they must uncover the secrets of this broken world.
+
+Act 1: Meeting the Stranger
+As Dannygerman and Radley explore the forest, they encounter a hooded man known only as The Guide, who seems to understand the strange
+glitches plaguing the land. The Guide offers cryptic advice and teaches them the art of farming slime, Green slimes provide basic resources,
+blue slimes yield incredible defense, while red slimes hold the key to fast speed.
+Act 2: Leveling Up
+
+Under The Guide’s mentorship, Dannygerman and Radley establish a small base in the forest, honing their farming skills.
+As they gather resources and defeat slimes, they unlock powerful new abilities and upgrade their gear.
+The forest gradually reveals hidden areas with treasures, puzzles, and even more challenging slime variants.
+
+Act 3: The Call to the Dungeon
+Once they’ve reached a certain level of strength, The Guide reveals the existence of a massive dungeon,
+said to be the heart of the world's corruption. It’s here that the true danger lies. The dungeon is filled with mobs of glitched creatures,
+each more dangerous and bizarre than the last.
+
+Act 4: Confronting the Dungeon
+Inside the dungeon, Dannygerman faces off against mobs like Spiders, Orcs,
+and ETC. Each floor presents increasing difficulty, environmental hazards,
+and mind-bending puzzles that exploit the "bugged" nature of the world.
+At the end of each dungeon level, bosses guard the way forward, such as:
+
+(TO BE ADDED): to be added
+(TO BE ADDED): to be added
+(TO BE ADDED): to be added
+
+
+
+Act 5: The Truth Behind the Bugged World
+As Dannygerman ventures deeper into the dungeon, fragmented memories and
+glitchy echoes reveal the chilling truth. The bugged world was not a mere accident
+but a carefully orchestrated trap by Radley the Radish—his seemingly loyal companion all along.
+
+Final Act: The Battle for Freedom
+The final boss, Radley the Radish, awaits at the core of the dungeon. It’s an epic battle requiring all the skills,
+gear, and knowledge gained throughout the journey. With the help of Radley and the lessons from The Guide,
+Dannygerman must defeat Radley the Radish and restore balance to the simulation.
\ No newline at end of file
Index: src/monster/MON_Cock.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package monster;\r\n\r\nimport DannyGermanSimulator.GamePanel;\r\nimport Entity.Entity;\r\nimport object.*;\r\n\r\nimport java.util.Random;\r\n\r\npublic class MON_Cock  extends Entity {\r\n    public MON_Cock(GamePanel gp) {\r\n        super(gp);\r\n\r\n        type = type_monster;\r\n        name = \"Eye Bat\";\r\n        defaultSpeed = 3;\r\n        speed = defaultSpeed;\r\n        maxLife = 10;\r\n        life = maxLife;\r\n        attack  = 5;\r\n        defence = 2;\r\n        exp = 5;\r\n        projectile = new OBJ_Fireball(gp);\r\n\r\n        solidArea.x = 34;\r\n        solidArea.y = 48;\r\n        solidArea.width = 44;\r\n        solidArea.height = 48;\r\n        solidAreaDefaultX = solidArea.x;\r\n        solidAreaDefaultY = solidArea.y;\r\n\r\n        getImage();\r\n    }\r\n    public void getImage(){\r\n        up1 = setUp(\"/monster/cockwalkup1\",gp.tileSize,gp.tileSize);\r\n        up2 = setUp(\"/monster/cockwalkup2\",gp.tileSize,gp.tileSize);\r\n        down1 = setUp(\"/monster/cockwalkdown1\",gp.tileSize,gp.tileSize);\r\n        down2 = setUp(\"/monster/cockwalkdown2\",gp.tileSize,gp.tileSize);\r\n        left1 = setUp(\"/monster/cockwalkleft1\",gp.tileSize,gp.tileSize);\r\n        left2 = setUp(\"/monster/cockwalkleft2\",gp.tileSize,gp.tileSize);\r\n        right1 = setUp(\"/monster/cockwalkright1\",gp.tileSize,gp.tileSize);\r\n        right2 = setUp(\"/monster/cockwalkright2\",gp.tileSize,gp.tileSize);\r\n    }\r\n\r\n    public void setAction(){\r\n        if(onPath){\r\n            //CHECK IF IT STOPS CHASING\r\n            checkStopChasingOrNot(gp.player, 10, 100);\r\n            //follow player or search direction to go\r\n            searchPath(getGoalCol(gp.player), getGoalRow(gp.player));\r\n            //Check if it shoots a projectile\r\n            checkShootOrNot(200, 30);\r\n        } else{\r\n            //check if starts chasing\r\n            checkStartChasingOrNot(gp.player,5,100);\r\n            // get a random direction\r\n            getRandomDirection();\r\n        }\r\n    }\r\n    public void damageReaction() {\r\n\r\n        //RUNS AWAY FOR NOW (PASSIVE BEHAVIOR)\r\n        actionLockCounter = 0;\r\n//        direction = gp.player.direction;\r\n        //new agro behavior\r\n        onPath = true;\r\n    }\r\n    public void checkDrop(){\r\n        //CAST A DIE\r\n        int i = new Random().nextInt(100)+1;\r\n\r\n        //SET THE MONSTER DROP\r\n        //SET THE MONSTER DROP\r\n        if(i < 25){\r\n            dropItem(new OBJ_Gem(gp));\r\n        }\r\n        if(i >= 25 && i < 50){\r\n            dropItem(new OBJ_Coin(gp));\r\n            dropItem(new OBJ_Coin(gp));\r\n        }\r\n        if(i >= 50 && i < 75){\r\n            dropItem(new OBJ_Heart(gp));\r\n        }\r\n        if(i >= 75 && i < 100){\r\n            dropItem(new OBJ_Mana(gp));\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/monster/MON_Cock.java b/src/monster/MON_Cock.java
--- a/src/monster/MON_Cock.java	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
+++ b/src/monster/MON_Cock.java	(date 1733762985125)
@@ -18,7 +18,7 @@
         life = maxLife;
         attack  = 5;
         defence = 2;
-        exp = 5;
+        exp = 8;
         projectile = new OBJ_Fireball(gp);
 
         solidArea.x = 34;
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM__Changes_.xml	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
+++ /dev/null	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM_[Changes]" date="1733064959659" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/1/2024 10:54 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM_[Changes]1/shelved.patch	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
+++ /dev/null	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
@@ -1,561 +0,0 @@
-Index: src/DannyGermanSimulator/AssetSetter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport Entity.NPC_radish;\r\nimport monster.MON_Bat;\r\nimport object.*;\r\nimport tile_interactive.IT_DryTree;\r\n\r\npublic class AssetSetter {\r\n    GamePanel gp;\r\n\r\n    public AssetSetter(GamePanel gp){\r\n        this.gp = gp;\r\n    }\r\n    public void setObject(){\r\n        int mapNum = 0;\r\n        int i = 0;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 26;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 36;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 7;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 28;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 7;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 41;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 39;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 5;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 40;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 16;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Axe(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 33;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 35;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Shield_Blue(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 36;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 13;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Potion_Red(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 35;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 13;\r\n\r\n    }\r\n    public void setNPC(){\r\n        int mapNum = 0;\r\n        int i = 0;\r\n        gp.npc[mapNum][i] = new NPC_radish(gp);\r\n        gp.npc[mapNum][i].worldX = gp.tileSize * 20;\r\n        gp.npc[mapNum][i].worldY = gp.tileSize * 20;\r\n        i++;\r\n\r\n\r\n        mapNum = 1;\r\n        gp.npc[mapNum][i] = new NPC_radish(gp);\r\n        gp.npc[mapNum][i].worldX = gp.tileSize * 12;\r\n        gp.npc[mapNum][i].worldY = gp.tileSize * 7;\r\n        i++;\r\n    }\r\n    public void setMonster(){\r\n        int mapNum = 0;\r\n        int i = 0;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 36;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 13;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 39;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 12;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 27;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 13;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 35;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 12;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 28;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 15;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 42;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 12;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 39;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 10;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 30;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 12;\r\n        i++;\r\n    }\r\n    public void setInteractiveTile() {\r\n        int mapNum = 0;\r\n        int i = 0;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,18,17); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,19,17); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,20,17); i++;\r\n\r\n\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,5,26); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,6,26); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,7,26); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,8,26); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,5,29); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,6,29); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,7,29); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,8,29); i++;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/AssetSetter.java b/src/DannyGermanSimulator/AssetSetter.java
---- a/src/DannyGermanSimulator/AssetSetter.java	(revision b70e3329ce496f1334d515590b6893c78faa1319)
-+++ b/src/DannyGermanSimulator/AssetSetter.java	(date 1732987726977)
-@@ -1,5 +1,6 @@
- package DannyGermanSimulator;
- 
-+import Entity.NPC_Merchant;
- import Entity.NPC_radish;
- import monster.MON_Bat;
- import object.*;
-@@ -57,7 +58,8 @@
- 
- 
-         mapNum = 1;
--        gp.npc[mapNum][i] = new NPC_radish(gp);
-+        i = 0;
-+        gp.npc[mapNum][i] = new NPC_Merchant(gp);
-         gp.npc[mapNum][i].worldX = gp.tileSize * 12;
-         gp.npc[mapNum][i].worldY = gp.tileSize * 7;
-         i++;
-Index: src/DannyGermanSimulator/UI.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport Entity.Entity;\r\nimport object.OBJ_Heart;\r\nimport object.OBJ_Mana;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.text.DecimalFormat;\r\nimport java.util.ArrayList;\r\n\r\npublic class UI {\r\n    GamePanel gp;\r\n    Graphics2D g2;\r\n    Font oldSchool;\r\n    BufferedImage heart_full, heart_half, heart_blank, crystal_full, crystal_blank;\r\n    public boolean messageOn = false;\r\n    ArrayList<String> message = new ArrayList<>();\r\n    ArrayList<Integer> messageCounter = new ArrayList<>();\r\n    public boolean playerDead = false;\r\n    public String currentDialogue = \"\";\r\n    double playTime;\r\n    public int commandNum = 0;\r\n    public int titleScreenState = 0;\r\n    DecimalFormat dFormat = new DecimalFormat(\"0.00\");\r\n    public int slotCol = 0, slotRow = 0;\r\n    int subState = 0;\r\n\r\n    public UI(GamePanel gp){\r\n        this.gp = gp;\r\n\r\n        try {\r\n            InputStream is = getClass().getResourceAsStream(\"/Font/OldSchoolAdventures-42j9.ttf\");\r\n            oldSchool = Font.createFont(Font.TRUETYPE_FONT, is);\r\n        } catch (FontFormatException | IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        //CREATE HUD OBJECTS\r\n        Entity heart = new OBJ_Heart(gp);\r\n        heart_full = heart.image;\r\n        heart_half = heart.image2;\r\n        heart_blank = heart.image3;\r\n        Entity crystal = new OBJ_Mana(gp);\r\n        crystal_full = crystal.image;\r\n        crystal_blank = crystal.image2;\r\n    }\r\n    public void addMessage(String text){\r\n        message.add(text);\r\n        messageCounter.add(0);\r\n    }\r\n    public void draw(Graphics2D g2){\r\n        this.g2 = g2;\r\n\r\n        g2.setFont(oldSchool);\r\n        //for anti-alias font\r\n//        g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\r\n        g2.setColor(Color.white);\r\n        //TITLE STATE\r\n        if(gp.gameState == gp.titleState){\r\n            drawTitleScreen();\r\n        }\r\n        //PLAY STATE\r\n        if(gp.gameState == gp.playState){\r\n            //do pLay state stuff\r\n            drawPlayerLife();\r\n            drawMessage();\r\n        }\r\n        //PAUSE STATE\r\n        if(gp.gameState == gp.pauseState){\r\n            drawPausedScreen();\r\n            drawPlayerLife();\r\n        }\r\n        //DIALOGUE STATE\r\n        if(gp.gameState == gp.dialogueState){\r\n            drawPlayerLife();\r\n            drawDialogueScreen();\r\n        }\r\n        //CHARACTER STATE\r\n        if(gp.gameState == gp.characterState){\r\n            drawCharacterScreen();\r\n            drawInventory();\r\n        }\r\n        //OPTION STATE\r\n        if(gp.gameState == gp.optionState){\r\n            drawOptionScreen();\r\n        }\r\n        //GAME OVER STATE\r\n        if(gp.gameState == gp.gameOverState){\r\n            drawGameOverScreen();\r\n        }\r\n    }\r\n    public void drawPlayerLife(){\r\n//        gp.player.life = 3;\r\n        int x = gp.tileSize/2;\r\n        int y = gp.tileSize/2;\r\n        int i = 0;\r\n        //draw max heart\r\n        while(i < gp.player.maxLife/2){\r\n            g2.drawImage(heart_blank, x, y, null);\r\n            i++;\r\n            x += gp.tileSize;\r\n        }\r\n        //reset\r\n        x = gp.tileSize/2;\r\n        y = gp.tileSize/2;\r\n        i = 0;\r\n        //draw current heart\r\n        while(i < gp.player.life){\r\n            g2.drawImage(heart_half, x, y, null);\r\n            i++;\r\n            if(i < gp.player.life){\r\n                g2.drawImage(heart_full, x, y, null);\r\n            }\r\n            i++;\r\n            x += gp.tileSize;\r\n        }\r\n\r\n        //draw Max Mana\r\n        x = gp.tileSize/2;\r\n        y = gp.tileSize+64;\r\n        i = 0;\r\n        while(i < gp.player.maxMana){\r\n            g2.drawImage(crystal_blank, x, y, null);\r\n            i++;\r\n            x += gp.tileSize-32;\r\n        }\r\n\r\n        //draw mana\r\n        x = gp.tileSize/2;\r\n        y = gp.tileSize+64;\r\n        i = 0;\r\n        while(i < gp.player.mana){\r\n            g2.drawImage(crystal_full, x, y, null);\r\n            i++;\r\n            x += gp.tileSize-32;\r\n        }\r\n    }\r\n    public void drawMessage(){\r\n\r\n        int messageX = gp.tileSize, messageY = gp.tileSize * 4;\r\n        g2.setFont(g2.getFont().deriveFont(Font.BOLD,32));\r\n\r\n        for(int i = 0; i < message.size(); i++){\r\n            if(message.get(i)!=null){\r\n                g2.setColor(Color.black);\r\n                g2.drawString(message.get(i),messageX+2, messageY+2);\r\n                g2.setColor(Color.white);\r\n                g2.drawString(message.get(i),messageX, messageY);\r\n                //this is just counter++  but since arraylist we cant do it like that\r\n                int counter = messageCounter.get(i) + 1;\r\n                messageCounter.set(i,counter);\r\n                messageY += 50;\r\n\r\n                if(messageCounter.get(i) > 180){\r\n                    message.remove(i);\r\n                    messageCounter.remove(i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void drawTitleScreen(){\r\n        if(titleScreenState == 0){\r\n            g2.setColor(new Color(165,42,42));\r\n            g2.fillRect(0,0, gp.screenWidth, gp.screenHeight);\r\n            //TITLE NAME\r\n            g2.setFont(g2.getFont().deriveFont(Font.BOLD, 76F));\r\n            String text = \"DANNYGERMAN SIMULATOR\";\r\n            int x = getXForCenteredText(text);\r\n            int y = gp.tileSize*2;\r\n            //SHADOW FOR TEXT\r\n            g2.setColor(Color.black);\r\n            g2.drawString(text, x+5, y+5);\r\n            //MAIN COLOR TEXT\r\n            g2.setColor(Color.white);\r\n            g2.drawString(text, x, y);\r\n            //IMAGE\r\n            x = gp.screenWidth/2 - (gp.tileSize*2)/2;\r\n            y += gp.tileSize;\r\n            g2.drawImage(gp.player.idle, x, y, gp.tileSize*2, gp.tileSize*2, null);\r\n            //MENU\r\n            g2.setFont(g2.getFont().deriveFont(Font.BOLD, 38F));\r\n\r\n            text = \"NEW GAME\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize*3;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 0){\r\n                g2.drawString(\">\", x - gp.tileSize, y);\r\n            }\r\n            text = \"LOAD GAME\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 1){\r\n                g2.drawString(\">\", x - gp.tileSize, y);\r\n            }\r\n            text = \"QUIT GAME\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 2){\r\n                g2.drawString(\">\", x - gp.tileSize, y);\r\n            }\r\n        }\r\n        else if(titleScreenState == 1){\r\n            //Class Selection Screen\r\n            g2.setColor(new Color(0,0,0));\r\n            g2.fillRect(0,0, gp.screenWidth, gp.screenHeight);\r\n\r\n            g2.setColor(Color.white);\r\n            g2.setFont(g2.getFont().deriveFont(32F));\r\n\r\n            String text = \"Select Your Class\";\r\n            int x = getXForCenteredText(text);\r\n            int y = gp.tileSize*3;\r\n            g2.drawString(text, x, y);\r\n\r\n            text = \"Assasin\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 0){\r\n                g2.drawString(\">\", x- gp.tileSize,y);\r\n            }\r\n            text = \"Mage\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 1){\r\n                g2.drawString(\">\", x- gp.tileSize,y);\r\n            }\r\n            text = \"Tank\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 2){\r\n                g2.drawString(\">\", x- gp.tileSize,y);\r\n            }\r\n            text = \"Cancel\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize*2;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 3){\r\n                g2.drawString(\">\", x- gp.tileSize,y);\r\n            }\r\n        }\r\n    }\r\n    public void drawPausedScreen(){\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN,80F));\r\n        String text = \"PAUSED\";\r\n        int x = getXForCenteredText(text);\r\n        int y = gp.screenHeight/2;\r\n        g2.drawString(text, x, y);\r\n    }\r\n    public void drawDialogueScreen(){\r\n        //WINDOW\r\n        int x = gp.tileSize * 2;\r\n        int y = gp.tileSize/2;\r\n        int width = gp.screenWidth - (gp.tileSize * 4);\r\n        int height = gp.tileSize * 4;\r\n        drawSubWindow(x,y,width,height);\r\n\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 40F));\r\n        x += gp.tileSize;\r\n        y += gp.tileSize;\r\n\r\n        for(String line : currentDialogue.split(\"\\n\")){\r\n            g2.drawString(line,x-32,y-32);\r\n            y+=48;\r\n        }\r\n    }\r\n    public void drawCharacterScreen(){\r\n        //CREATE A FRAME\r\n        final int frameX = gp.tileSize *2, frameY = gp.tileSize, frameWidth = gp.tileSize * 5, frameHeight = gp.tileSize * 7;\r\n        drawSubWindow(frameX, frameY, frameWidth,frameHeight);\r\n\r\n        //TEXT\r\n        g2.setColor(Color.white);\r\n        g2.setFont(g2.getFont().deriveFont(32F));\r\n        int textX = frameX + 32;\r\n        int textY = frameY + gp.tileSize/2;\r\n        final int lineHeight = 48;\r\n\r\n        //NAMES\r\n        g2.drawString(\"Level\",textX, textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Life\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Mana\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Strength\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Dexterity\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Attack\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Defense\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"EXP\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"To Next Level\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Coin\",textX,textY);\r\n        textY += lineHeight + 40;\r\n        g2.drawString(\"Weapon\",textX,textY);\r\n        textY += lineHeight + 70;\r\n        g2.drawString(\"Shield\",textX,textY);\r\n        textY += lineHeight;\r\n\r\n        // VALUES\r\n        int tailX = (frameX + frameWidth) - 30;\r\n        // RESET textY\r\n        textY = frameY + gp.tileSize/2;\r\n        String value;\r\n\r\n        value = String.valueOf(gp.player.level);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.life + \"/\" + gp.player.maxLife);\r\n        textX = getAlignToRightText(value,tailX) - 24;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.mana + \"/\" + gp.player.maxMana);\r\n        textX = getAlignToRightText(value,tailX) - 24;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.strength);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.dexterity);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.attack);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.defence);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.exp);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.nextLevelExp);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.coins);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        g2.drawImage(gp.player.currentWeapon.down1, tailX - gp.tileSize-32, textY - 30, null);\r\n        textY += gp.tileSize;\r\n        g2.drawImage(gp.player.currentShield.down1, tailX - gp.tileSize-32, textY - 30, null);\r\n    }\r\n    public void drawInventory(){\r\n        //FRAME\r\n        int frameX = gp.tileSize * 12, frameY = gp.tileSize, frameWidth = gp.tileSize * 6, frameHeight = gp.tileSize * 5;\r\n        drawSubWindow(frameX, frameY, frameWidth, frameHeight);\r\n\r\n        //SLOTS\r\n        final int slotXStart = frameX + 20, slotYStart = frameY + 20;\r\n        int slotX = slotXStart + 32, slotY = slotYStart + 32, slotSize = gp.tileSize+3;\r\n\r\n        //DRAW PLAYER ITEMS\r\n        for(int i = 0; i < gp.player.inventory.size(); i++){\r\n            //EQUIP CURSOR\r\n            if(gp.player.inventory.get(i) == gp.player.currentWeapon || gp.player.inventory.get(i) == gp.player.currentShield){\r\n                g2.setColor(new Color(240,190,90));\r\n                g2.fillRoundRect(slotX, slotY, gp.tileSize, gp.tileSize, 10, 10);\r\n            }\r\n            g2.drawImage(gp.player.inventory.get(i).down1,slotX,slotY,null);\r\n            slotX += slotSize;\r\n            if(i == 4 || i == 9 || i == 11){\r\n                slotX = slotXStart + 32;\r\n                slotY += slotSize;\r\n            }\r\n        }\r\n\r\n        //CURSOR\r\n        int cursorX = slotXStart + (slotSize * slotCol) + 32, cursorY = slotYStart + (slotSize * slotRow) + 32, cursorWidth = gp.tileSize, cursorHeight = gp.tileSize;\r\n        g2.setColor(Color.white);\r\n        g2.setStroke(new BasicStroke(5));\r\n        g2.drawRoundRect(cursorX,cursorY,cursorWidth,cursorHeight, 10,10);\r\n\r\n        //DESCRIPTION FRAME\r\n        int dFrameX = frameX, dFrameY = frameY + frameHeight, dFrameWidth = frameWidth, dFrameHeight = gp.tileSize*2 ;\r\n\r\n\r\n        //draw description text\r\n        int textX = dFrameX + 32, textY = dFrameY + 64;\r\n        g2.setFont(g2.getFont().deriveFont(28F));\r\n\r\n        int itemIndex = getItemIndexOnSlot();\r\n        if(itemIndex < gp.player.inventory.size()){\r\n            drawSubWindow(dFrameX,dFrameY,dFrameWidth,dFrameHeight);\r\n            for(String line : gp.player.inventory.get(itemIndex).description.split(\"\\n\")){\r\n                g2.drawString(line,textX,textY);\r\n                textY += 64;\r\n            }\r\n        }\r\n    }\r\n    public void drawGameOverScreen(){\r\n        g2.setColor(new Color(0,0,0,150));\r\n        g2.fillRect(0,0,gp.screenWidth, gp.screenHeight);\r\n\r\n        int x;\r\n        int y;\r\n        String text;\r\n        g2.setFont(g2.getFont().deriveFont(Font.BOLD, 110F));\r\n        text = \"You Died\";\r\n        //SHADOW\r\n        g2.setColor(Color.black);\r\n        x = getXForCenteredText(text);\r\n        y = gp.tileSize * 6;\r\n        g2.drawString(text,x,y);\r\n        //MAIN\r\n        g2.setColor(Color.red);\r\n        g2.drawString(text,x-4, y-4);\r\n        //RETRY\r\n        g2.setFont(g2.getFont().deriveFont(50F));\r\n        text = \"Retry\";\r\n        x = getXForCenteredText(text);\r\n        y += gp.tileSize * 3;\r\n        g2.drawString(text,x,y);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\",x-96,y);\r\n        }\r\n        //EXIT\r\n        text = \"Quit\";\r\n        x = getXForCenteredText(text);\r\n        y += gp.tileSize;\r\n        g2.drawString(text,x,y);\r\n        if(commandNum == 1){\r\n            g2.drawString(\">\",x-96,y);\r\n        }\r\n    }\r\n    public void drawOptionScreen(){\r\n        g2.setColor(Color.white);\r\n        g2.setFont(g2.getFont().deriveFont(32F));\r\n\r\n        //SUB WINDOW\r\n        int frameX = gp.tileSize *6, frameY = gp.tileSize, frameWidth = gp.tileSize * 8, frameHeight = gp.tileSize * 10;\r\n        drawSubWindow(frameX, frameY,frameWidth,frameHeight);\r\n\r\n        switch(subState){\r\n            case 0: options_top(frameX,frameY);break;\r\n            case 1: options_fullScreenNotification(frameX,frameY); break;\r\n            case 2: options_control(frameX,frameY);break;\r\n            case 3: options_endGameConfirmation(frameX,frameY);break;\r\n        }\r\n\r\n        gp.keyH.enterPressed = false;\r\n    }\r\n    public void options_top(int frameX, int frameY){\r\n        int textX, textY;\r\n\r\n        //TITLE\r\n        String text = \"Options\";\r\n        textX = getXForCenteredText(text);\r\n        textY = frameY + gp.tileSize;\r\n        g2.drawString(text, textX,textY);\r\n\r\n        //FULL SCREEN ON/OFF\r\n        textX = frameX + gp.tileSize;\r\n        textY +=gp.tileSize*2;\r\n        g2.drawString(\"Full Screen\",textX,textY);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\", textX-50,textY);\r\n            if(gp.keyH.enterPressed){\r\n                if(!gp.fullScreenOn){\r\n                    gp.fullScreenOn = true;\r\n                }\r\n                else if(gp.fullScreenOn){\r\n                    gp.fullScreenOn = false;\r\n                }\r\n                subState = 1;\r\n            }\r\n        }\r\n\r\n        //MUSIC\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"Music\",textX,textY);\r\n        if(commandNum == 1){\r\n            g2.drawString(\">\", textX-50,textY);\r\n        }\r\n\r\n        //SE\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"SE\",textX,textY);\r\n        if(commandNum == 2){\r\n            g2.drawString(\">\", textX-50,textY);\r\n        }\r\n\r\n        //CONTROL\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"Control\",textX,textY);\r\n        if(commandNum == 3){\r\n            g2.drawString(\">\", textX-50,textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 2;\r\n                commandNum = 0;\r\n            }\r\n        }\r\n\r\n        //END GAME\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"End Game\",textX,textY);\r\n        if(commandNum == 4){\r\n            g2.drawString(\">\", textX-50,textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 3;\r\n                commandNum = 0;\r\n            }\r\n        }\r\n\r\n        //BACK\r\n        textY += gp.tileSize*2;\r\n        g2.drawString(\"Back\",textX,textY);\r\n        if(commandNum == 5){\r\n            g2.drawString(\">\", textX-50,textY);\r\n            if(gp.keyH.enterPressed){\r\n                gp.gameState = gp.playState;\r\n                commandNum = 0;\r\n            }\r\n        }\r\n\r\n        //FULL SCREEN CHECK BOX\r\n        textX = (int) (frameX + gp.tileSize*4.5);\r\n        textY = frameY + gp.tileSize*3 - 48;\r\n        g2.setStroke(new BasicStroke(6));\r\n        g2.drawRect(textX,textY,48,48);\r\n        if(gp.fullScreenOn){\r\n            g2.fillRect(textX,textY,48,48);\r\n        }\r\n\r\n        //MUSIC\r\n        textY += gp.tileSize;\r\n        g2.drawRect(textX,textY,320,48);\r\n        int volumeWidth = 64 * gp.music.volumeScale;\r\n        g2.fillRect(textX,textY,volumeWidth, 48);\r\n\r\n        //SE\r\n        textY += gp.tileSize;\r\n        g2.drawRect(textX,textY,320,48);\r\n        volumeWidth = 64 * gp.SE.volumeScale;\r\n        g2.fillRect(textX,textY,volumeWidth, 48);\r\n\r\n        gp.config.saveConfig();\r\n    }\r\n    public void options_fullScreenNotification(int frameX, int frameY){\r\n        int textX = frameX + gp.tileSize;\r\n        int textY = frameY + gp.tileSize*3;\r\n\r\n        currentDialogue = \"The change will take effect \\nafter restarting the game.\";\r\n        for(String line : currentDialogue.split(\"\\n\")){\r\n            g2.drawString(line, textX, textY);\r\n            textY += 40;\r\n        }\r\n\r\n        //BACK\r\n        textY = frameY + gp.tileSize * 9;\r\n        g2.drawString(\"Back\", textX, textY);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\", textX-48, textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 0;\r\n            }\r\n        }\r\n    }\r\n    public void options_control(int frameX, int frameY){\r\n        int textX, textY;\r\n\r\n        //TITLE\r\n        String text = \"Control\";\r\n        textX = getXForCenteredText(text);\r\n        textY = frameY + gp.tileSize;\r\n        g2.drawString(text,textX,textY);\r\n\r\n        textX = frameX + gp.tileSize;\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"Move\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Confirm/Attack\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Interact\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Shoot/Cast\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Inventory\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Pause\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Options\",textX,textY);\r\n\r\n        textX = frameX + gp.tileSize * 6;\r\n        textY = frameY + gp.tileSize*2;\r\n        g2.drawString(\"WASD\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"ENTER\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"E\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"F\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"I\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"P\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"ESC\",textX,textY);\r\n\r\n        //BACK\r\n        textX = frameX + gp.tileSize;\r\n        textY = frameY + gp.tileSize*9;\r\n        g2.drawString(\"Back\",textX,textY);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\", textX-48, textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 0;\r\n                commandNum = 3;\r\n            }\r\n        }\r\n    }\r\n    public void options_endGameConfirmation(int frameX, int frameY){\r\n        int textX = frameX + gp.tileSize;\r\n        int textY = frameY + gp.tileSize;\r\n\r\n        currentDialogue = \"Quit the game and return to the \\ntitle screen\";\r\n\r\n        for(String line : currentDialogue.split(\"\\n\")){\r\n            g2.drawString(line, textX, textY);\r\n            textY += 40;\r\n        }\r\n\r\n        //YES\r\n        String text = \"Yes\";\r\n        textX = getXForCenteredText(text);\r\n        textY += gp.tileSize*3;\r\n        g2.drawString(text, textX, textY);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\", textX - 48, textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 0;\r\n                gp.gameState = gp.titleState;\r\n            }\r\n        }\r\n        //NO\r\n        text = \"No\";\r\n        textX = getXForCenteredText(text);\r\n        textY += gp.tileSize*3;\r\n        g2.drawString(text, textX, textY);\r\n        if(commandNum == 1){\r\n            g2.drawString(\">\", textX - 48, textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 0;\r\n                commandNum = 4;\r\n            }\r\n        }\r\n    }\r\n    public int getItemIndexOnSlot(){\r\n        return slotCol + (slotRow * 5);\r\n    }\r\n    public void drawSubWindow(int x, int y, int width, int height){\r\n\r\n        Color c = new Color(0,0,0,210);\r\n        g2.setColor(c);\r\n        g2.fillRoundRect(x,y,width,height,35, 35);\r\n\r\n        c = new Color(255,255,255);\r\n        g2.setColor(c);\r\n        g2.setStroke(new BasicStroke(5));\r\n        g2.drawRoundRect(x+5,y+5,width-10,height-10,25, 25);\r\n    }\r\n    public int getXForCenteredText(String text){\r\n        int length =  (int)g2.getFontMetrics().getStringBounds(text,g2).getWidth();\r\n        return gp.screenWidth/2 - length/2;\r\n    }\r\n    public int getAlignToRightText(String text, int tailX){\r\n        int length =  (int)g2.getFontMetrics().getStringBounds(text,g2).getWidth();\r\n        int x = tailX - length;\r\n        return x;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/UI.java b/src/DannyGermanSimulator/UI.java
---- a/src/DannyGermanSimulator/UI.java	(revision b70e3329ce496f1334d515590b6893c78faa1319)
-+++ b/src/DannyGermanSimulator/UI.java	(date 1733037912211)
-@@ -25,8 +25,11 @@
-     public int commandNum = 0;
-     public int titleScreenState = 0;
-     DecimalFormat dFormat = new DecimalFormat("0.00");
--    public int slotCol = 0, slotRow = 0;
-+    public int playerSlotCol = 0, playerSlotRow = 0;
-+    public int npcSlotCol = 0, npcSlotRow = 0;
-     int subState = 0;
-+    int counter = 0;
-+    public Entity npc;
- 
-     public UI(GamePanel gp){
-         this.gp = gp;
-@@ -80,7 +83,7 @@
-         //CHARACTER STATE
-         if(gp.gameState == gp.characterState){
-             drawCharacterScreen();
--            drawInventory();
-+            drawInventory(gp.player, true);
-         }
-         //OPTION STATE
-         if(gp.gameState == gp.optionState){
-@@ -90,6 +93,14 @@
-         if(gp.gameState == gp.gameOverState){
-             drawGameOverScreen();
-         }
-+        //TRANSITION STATE
-+        if(gp.gameState == gp.transitionState){
-+            drawTransition();
-+        }
-+        //TRADE STATE
-+        if(gp.gameState == gp.tradeState){
-+            drawTradeScreen();
-+        }
-     }
-     public void drawPlayerLife(){
- //        gp.player.life = 3;
-@@ -256,9 +267,9 @@
-     }
-     public void drawDialogueScreen(){
-         //WINDOW
--        int x = gp.tileSize * 2;
-+        int x = gp.tileSize * 3;
-         int y = gp.tileSize/2;
--        int width = gp.screenWidth - (gp.tileSize * 4);
-+        int width = gp.screenWidth - (gp.tileSize * 6);
-         int height = gp.tileSize * 4;
-         drawSubWindow(x,y,width,height);
- 
-@@ -369,9 +380,24 @@
-         textY += gp.tileSize;
-         g2.drawImage(gp.player.currentShield.down1, tailX - gp.tileSize-32, textY - 30, null);
-     }
--    public void drawInventory(){
-+    public void drawInventory(Entity entity, boolean cursor){
-+        int frameX = 0, frameY = 0, frameWidth = 0, frameHeight = 0, slotCol = 0, slotRow = 0;
-+        if(entity == gp.player){
-+            frameX = gp.tileSize * 12;
-+            frameY = gp.tileSize;
-+            frameWidth = gp.tileSize * 6;
-+            frameHeight = gp.tileSize * 5;
-+            slotCol = playerSlotCol;
-+            slotRow = playerSlotRow;
-+        } else {
-+            frameX = gp.tileSize * 2;
-+            frameY = gp.tileSize;
-+            frameWidth = gp.tileSize * 6;
-+            frameHeight = gp.tileSize * 5;
-+            slotCol = npcSlotCol;
-+            slotRow = npcSlotRow;
-+        }
-         //FRAME
--        int frameX = gp.tileSize * 12, frameY = gp.tileSize, frameWidth = gp.tileSize * 6, frameHeight = gp.tileSize * 5;
-         drawSubWindow(frameX, frameY, frameWidth, frameHeight);
- 
-         //SLOTS
-@@ -379,13 +405,13 @@
-         int slotX = slotXStart + 32, slotY = slotYStart + 32, slotSize = gp.tileSize+3;
- 
-         //DRAW PLAYER ITEMS
--        for(int i = 0; i < gp.player.inventory.size(); i++){
-+        for(int i = 0; i < entity.inventory.size(); i++){
-             //EQUIP CURSOR
--            if(gp.player.inventory.get(i) == gp.player.currentWeapon || gp.player.inventory.get(i) == gp.player.currentShield){
-+            if(entity.inventory.get(i) == entity.currentWeapon || entity.inventory.get(i) == entity.currentShield){
-                 g2.setColor(new Color(240,190,90));
-                 g2.fillRoundRect(slotX, slotY, gp.tileSize, gp.tileSize, 10, 10);
-             }
--            g2.drawImage(gp.player.inventory.get(i).down1,slotX,slotY,null);
-+            g2.drawImage(entity.inventory.get(i).down1,slotX,slotY,null);
-             slotX += slotSize;
-             if(i == 4 || i == 9 || i == 11){
-                 slotX = slotXStart + 32;
-@@ -394,25 +420,27 @@
-         }
- 
-         //CURSOR
--        int cursorX = slotXStart + (slotSize * slotCol) + 32, cursorY = slotYStart + (slotSize * slotRow) + 32, cursorWidth = gp.tileSize, cursorHeight = gp.tileSize;
--        g2.setColor(Color.white);
--        g2.setStroke(new BasicStroke(5));
--        g2.drawRoundRect(cursorX,cursorY,cursorWidth,cursorHeight, 10,10);
-+        if(cursor){
-+            int cursorX = slotXStart + (slotSize * playerSlotCol) + 32, cursorY = slotYStart + (slotSize * playerSlotRow) + 32, cursorWidth = gp.tileSize, cursorHeight = gp.tileSize;
-+            g2.setColor(Color.white);
-+            g2.setStroke(new BasicStroke(5));
-+            g2.drawRoundRect(cursorX,cursorY,cursorWidth,cursorHeight, 10,10);
- 
--        //DESCRIPTION FRAME
--        int dFrameX = frameX, dFrameY = frameY + frameHeight, dFrameWidth = frameWidth, dFrameHeight = gp.tileSize*2 ;
-+            //DESCRIPTION FRAME
-+            int dFrameX = frameX, dFrameY = frameY + frameHeight, dFrameWidth = frameWidth, dFrameHeight = gp.tileSize*2 ;
- 
- 
--        //draw description text
--        int textX = dFrameX + 32, textY = dFrameY + 64;
--        g2.setFont(g2.getFont().deriveFont(28F));
-+            //draw description text
-+            int textX = dFrameX + 32, textY = dFrameY + 64;
-+            g2.setFont(g2.getFont().deriveFont(28F));
- 
--        int itemIndex = getItemIndexOnSlot();
--        if(itemIndex < gp.player.inventory.size()){
--            drawSubWindow(dFrameX,dFrameY,dFrameWidth,dFrameHeight);
--            for(String line : gp.player.inventory.get(itemIndex).description.split("\n")){
--                g2.drawString(line,textX,textY);
--                textY += 64;
-+            int itemIndex = getItemIndexOnSlot(slotCol, slotRow);
-+            if(itemIndex < entity.inventory.size()){
-+                drawSubWindow(dFrameX,dFrameY,dFrameWidth,dFrameHeight);
-+                for(String line : entity.inventory.get(itemIndex).description.split("\n")){
-+                    g2.drawString(line,textX,textY);
-+                    textY += 64;
-+                }
-             }
-         }
-     }
-@@ -661,7 +689,81 @@
-             }
-         }
-     }
--    public int getItemIndexOnSlot(){
-+    public void drawTransition(){
-+
-+        counter++;
-+        g2.setColor(new Color(0,0,0,counter*5));
-+        g2.fillRect(0,0,gp.screenWidth,gp.screenHeight);
-+
-+        if(counter == 50){
-+            counter = 0;
-+            gp.gameState = gp.playState;
-+            gp.currentMap = gp.eHandler.tempMap;
-+            gp.player.worldX = gp.tileSize * gp.eHandler.tempCol;
-+            gp.player.worldY = gp.tileSize * gp.eHandler.tempRow;
-+            gp.eHandler.previousEventX = gp.player.worldX;
-+            gp.eHandler.previousEventY = gp.player.worldY;
-+        }
-+    }
-+    public void drawTradeScreen(){
-+        switch (subState){
-+            case 0: trade_select(); break;
-+            case 1: trade_buy(); break;
-+            case 2: trade_sell(); break;
-+        }
-+        gp.keyH.enterPressed = false;
-+    }
-+    public void trade_select(){
-+
-+        drawDialogueScreen();
-+
-+        //Draw Window
-+        int x = gp.tileSize * 15;
-+        int y = gp.tileSize * 4;
-+        int width = gp.tileSize * 3;
-+        int height = (int)(gp.tileSize * 3.5);
-+        drawSubWindow(x,y,width,height);
-+
-+        //Draw Texts
-+        x += gp.tileSize;
-+        y += gp.tileSize;
-+        g2.drawString("Buy", x,y);
-+        if(commandNum == 0){
-+            g2.drawString(">", x-64, y);
-+            if(gp.keyH.enterPressed){
-+                subState = 1;
-+            }
-+        }
-+        y += gp.tileSize;
-+        g2.drawString("Sell", x,y);
-+        if(commandNum == 1){
-+            g2.drawString(">", x-64, y);
-+            if(gp.keyH.enterPressed){
-+                subState = 2;
-+            }
-+        }
-+        y += gp.tileSize;
-+        g2.drawString("Leave", x,y);
-+        if(commandNum == 2){
-+            g2.drawString(">", x-64, y);
-+            if(gp.keyH.enterPressed){
-+                commandNum = 0;
-+                gp.gameState = gp.dialogueState;
-+                currentDialogue = "Come again hehe";
-+            }
-+        }
-+    }
-+    public void trade_buy(){
-+
-+        //DRAW PLAYER INVENTORY
-+        drawInventory(gp.player,false);
-+        //DRAW NPC INVENTORY
-+        drawInventory(npc,true);
-+    }
-+    public void trade_sell(){
-+
-+    }
-+    public int getItemIndexOnSlot(int slotCol, int slotRow){
-         return slotCol + (slotRow * 5);
-     }
-     public void drawSubWindow(int x, int y, int width, int height){
-Index: src/DannyGermanSimulator/GamePanel.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\n\r\nimport Entity.Entity;\r\nimport Entity.Player;\r\nimport tile.TileManager;\r\nimport tile_interactive.InteractiveTile;\r\n\r\npublic class GamePanel extends JPanel implements Runnable {\r\n\r\n    //SCREEN SETTINGS\r\n    final int originalTileSize = 40; //tile size\r\n    final int scale = 3;\r\n    public final int tileSize = originalTileSize * scale;\r\n    //    screenWidth / maxScreenCol\r\n    public final int maxScreenCol = 20;\r\n    public final int maxScreenRow = 12;\r\n    public final int screenWidth = tileSize * maxScreenCol;\r\n    public final int screenHeight = tileSize * maxScreenRow;\r\n\r\n    //World Settings\r\n    public final int maxWorldCol = 250;\r\n    public final int maxWorldRow = 250;\r\n    public final int worldWidth = tileSize * maxWorldCol;\r\n    public final int worldHeight = tileSize * maxWorldRow;\r\n    public boolean fullScreenOn = false;\r\n    public final int maxMap = 10;\r\n    public int currentMap = 2;\r\n\r\n    // FPS\r\n    int FPS = 60;\r\n\r\n    //FOR FULL SCREEN\r\n    int screenWidth2 = screenWidth;\r\n    int screenHeight2 = screenHeight;\r\n    BufferedImage tempScreen;\r\n    Graphics2D g2;\r\n\r\n    //SYSTEM\r\n    TileManager tileM = new TileManager(this);\r\n    public KeyHandler keyH = new KeyHandler(this);\r\n    Sound music = new Sound(); // music\r\n    Sound SE = new Sound(); //sound effect\r\n    public CollisionChecker colCheck = new CollisionChecker(this);\r\n    public AssetSetter aSetter = new AssetSetter(this);\r\n    public UI ui = new UI(this);\r\n    public EventHandler eHandler = new EventHandler(this);\r\n    Config config = new Config(this);\r\n    Thread gameThread;\r\n\r\n    // Player, Entity, Objects\r\n    public Player player = new Player(this, keyH);\r\n    public Entity obj[][] = new Entity[maxMap][20]; // 10 being 10 slots for objects (can have many objects but for now 10)5\r\n    public Entity npc[][] = new Entity[maxMap][10];\r\n    public Entity monster[][] = new Entity[maxMap][10];\r\n    public InteractiveTile iTile[][] = new InteractiveTile[maxMap][50];\r\n    public ArrayList<Entity> projectileList = new ArrayList<>();\r\n    public ArrayList<Entity> particleList = new ArrayList<>();\r\n    ArrayList<Entity> entityList = new ArrayList<>();\r\n    //more objects can slow down the game\r\n\r\n    //GAME STATE\r\n    public int gameState;\r\n    public final int titleState = 0;\r\n    public final int playState = 1;\r\n    public final int pauseState = 2;\r\n    public final int dialogueState = 3;\r\n    public final int characterState = 4;\r\n    public final int optionState = 5;\r\n    public final int gameOverState = 6;\r\n\r\n\r\n    public GamePanel() {\r\n        this.setPreferredSize(new Dimension(screenWidth, screenHeight));\r\n        this.setBackground(Color.black);\r\n        this.setDoubleBuffered(true);\r\n        this.addKeyListener(keyH);\r\n        this.setFocusable(true);\r\n    }\r\n    public void setGameObjects(){\r\n        aSetter.setObject();\r\n        aSetter.setNPC();\r\n        aSetter.setMonster();\r\n        aSetter.setInteractiveTile();\r\n        gameState = titleState;\r\n\r\n        tempScreen = new BufferedImage(screenWidth,screenHeight,BufferedImage.TYPE_INT_ARGB);\r\n        g2 = (Graphics2D) tempScreen.getGraphics();\r\n        setFullScreen();\r\n    }\r\n    public void retry(){\r\n        player.setDefaultPosition();\r\n        player.restoreLifeAndMan();\r\n        aSetter.setNPC();\r\n        aSetter.setMonster();\r\n    }\r\n    public void restart(){\r\n        player.setDefaultValues();\r\n        player.setItems();\r\n        aSetter.setObject();\r\n        aSetter.setNPC();\r\n        aSetter.setMonster();\r\n        aSetter.setInteractiveTile();\r\n    }\r\n    public void setFullScreen(){\r\n        //GET MONITOR ENVIRONMENT\r\n//        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\r\n//        GraphicsDevice gd = ge.getDefaultScreenDevice();\r\n//        gd.setFullScreenWindow(Main.window);\r\n        //GET FULLSCREEN DIMENSIONS\r\n//        screenWidth2 = Main.window.getWidth();\r\n//        screenHeight2 = Main.window.getHeight();\r\n\r\n        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\r\n        double width = screenSize.getWidth();\r\n        double height = screenSize.getHeight();\r\n        Main.window.setExtendedState(JFrame.MAXIMIZED_BOTH);\r\n        screenWidth2 = (int) width;\r\n        screenHeight2 = (int) height;\r\n        //offset factor to be used by mouse listener or mouse motion listener if you are using cursor in your game. Multiply your e.getX()e.getY() by this.\r\n//        fullScreenOffsetFactor = (float) screenWidth / (float) screenWidth2;\r\n    }\r\n    public void startGameThread() {\r\n        gameThread = new Thread(this);\r\n        gameThread.start();\r\n    }\r\n    public void run() {\r\n        double drawInterval = 1000000000 / FPS; //0.01666 seconds\r\n        double delta = 0;\r\n        long lastTime = System.nanoTime();\r\n        long currentTime;\r\n        long timer = 0;\r\n        long drawCount = 0;\r\n\r\n        while (gameThread != null) {\r\n\r\n            currentTime = System.nanoTime();\r\n\r\n            delta += (currentTime - lastTime) / drawInterval;\r\n            timer += (currentTime - lastTime);\r\n            lastTime = currentTime;\r\n\r\n            if(delta >= 1){\r\n                update();\r\n                drawToTempScreen(); //draws everything to the buffered Image\r\n                drawToScreen(); //draws the buffered image to the screen\r\n                delta--;\r\n                drawCount++;\r\n            }\r\n            if(timer >= 1000000000){\r\n                drawCount = 0;\r\n                timer = 0;\r\n            }\r\n        }\r\n    }\r\n    public void update() {\r\n        if(gameState == playState){\r\n            player.update();\r\n            //NPC\r\n            for(int i = 0; i < npc[1].length; i++){\r\n                if(npc[currentMap][i] != null){\r\n                    npc[currentMap][i].update();\r\n                }\r\n            }\r\n            //MONSTER\r\n            for(int i = 0; i < monster[1].length; i++){\r\n                if(monster[currentMap][i] != null){\r\n                    if(monster[currentMap][i].alive && !monster[currentMap][i].dying){\r\n                        monster[currentMap][i].update();\r\n                    }\r\n                    if(!monster[currentMap][i].alive){\r\n                        monster[currentMap][i].checkDrop();\r\n                        monster[currentMap][i] = null;\r\n                    }\r\n                }\r\n            }\r\n            //PROJECTILE\r\n            for(int i = 0; i < projectileList.size(); i++){\r\n                if(projectileList.get(i) != null){\r\n                    if(projectileList.get(i).alive){\r\n                        projectileList.get(i).update();\r\n                    }\r\n                    if(!projectileList.get(i).alive){\r\n                        projectileList.remove(i);\r\n                    }\r\n                }\r\n            }\r\n            //PARTICLE\r\n            for(int i = 0; i < particleList.size(); i++){\r\n                if(particleList.get(i) != null){\r\n                    if(particleList.get(i).alive){\r\n                        particleList.get(i).update();\r\n                    }\r\n                    if(!particleList.get(i).alive){\r\n                        particleList.remove(i);\r\n                    }\r\n                }\r\n            }\r\n            for(int i = 0; i < iTile[1].length; i++){\r\n                if(iTile[currentMap][i] != null){\r\n                    iTile[currentMap][i].update();\r\n                }\r\n            }\r\n        }\r\n        if(gameState == pauseState){\r\n            //nothing yet\r\n        }\r\n    }\r\n    public void drawToTempScreen(){\r\n        //DEBUG\r\n        long drawStart = 0;\r\n        if(keyH.showDebugText){\r\n            drawStart = System.nanoTime();\r\n        }\r\n\r\n        //TITLE SCREEN\r\n        if(gameState == titleState){\r\n            ui.draw(g2);\r\n        }\r\n        //OTHERS\r\n        else {\r\n            // Draw tiles\r\n            tileM.draw(g2);\r\n\r\n            //INTERACTIVE TILE\r\n            for(int i = 0; i < iTile[1].length; i++){\r\n                if(iTile[currentMap][i] != null){\r\n                    iTile[currentMap][i].draw(g2);\r\n                }\r\n            }\r\n\r\n            //ADD ENTITIES\r\n            entityList.add(player);\r\n            //NPC\r\n            for(int i = 0; i < npc[1].length; i++){\r\n                if(npc[currentMap][i] != null) {\r\n                    entityList.add(npc[currentMap][i]);\r\n                }\r\n            }\r\n            //OBJECT\r\n            for(int i = 0; i < obj[1].length; i++){\r\n                if(obj[currentMap][i] != null) {\r\n                    entityList.add(obj[currentMap][i]);\r\n                }\r\n            }\r\n            //MONSTER\r\n            for(int i = 0; i < monster[1].length; i++){\r\n                if(monster[currentMap][i] != null) {\r\n                    entityList.add(monster[currentMap][i]);\r\n                }\r\n            }\r\n            //PROJECTILE\r\n            for(int i = 0; i < projectileList.size(); i++){\r\n                if(projectileList.get(i) != null) {\r\n                    entityList.add(projectileList.get(i));\r\n                }\r\n            }\r\n\r\n            //PARTICLE\r\n            for(int i = 0; i < particleList.size(); i++){\r\n                if(particleList.get(i) != null) {\r\n                    entityList.add(particleList.get(i));\r\n                }\r\n            }\r\n\r\n            //SORT\r\n            Collections.sort(entityList, new Comparator<Entity>() {\r\n                @Override\r\n                public int compare(Entity e1, Entity e2) {\r\n\r\n                    return Integer.compare(e1.worldY, e2.worldY);\r\n                }\r\n            });\r\n\r\n            //DRAW ENTITY\r\n            for(int i = 0; i < entityList.size(); i++){\r\n                entityList.get(i).draw(g2);\r\n            }\r\n\r\n            //EMPTY ENTITY LIST\r\n            entityList.clear();\r\n\r\n            //UI\r\n            ui.draw(g2);\r\n        }\r\n\r\n        //DEBUG\r\n        if(keyH.showDebugText){\r\n            long drawEnd = System.nanoTime();\r\n            long passed = drawEnd - drawStart;\r\n\r\n            g2.setFont(new Font(\"Arial\", Font.PLAIN,20));\r\n            g2.setColor(Color.white);\r\n            int x = 10;\r\n            int y = 400;\r\n            int lineHeight = 20;\r\n\r\n            g2.drawString(\"WorldX \" + player.worldX,x,y); y+=lineHeight;\r\n            g2.drawString(\"WorldY \" + player.worldY,x,y); y+=lineHeight;\r\n            g2.drawString(\"Col \" + (player.worldX + player.solidArea.x)/tileSize,x,y); y+=lineHeight;\r\n            g2.drawString(\"Row \" +(player.worldY + player.solidArea.y)/tileSize,x,y); y+=lineHeight;\r\n            g2.drawString(\"Draw Time: \" + passed, x, y);\r\n            System.out.println(\"Draw Time: \" + passed);\r\n        }\r\n    }\r\n    public void drawToScreen(){\r\n        Graphics g = getGraphics();\r\n        g.drawImage(tempScreen,0,0, screenWidth2, screenHeight2,null);\r\n        g.dispose();\r\n    }\r\n    public void playMusic(int i){\r\n        music.setFile(i);\r\n        music.play();\r\n        music.loop();\r\n    }\r\n    public void stopMusic(){\r\n        music.stop();\r\n    }\r\n    //SE =  sound effect\r\n    public void playSE(int i){\r\n        SE.setFile(i);\r\n        SE.play();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/GamePanel.java b/src/DannyGermanSimulator/GamePanel.java
---- a/src/DannyGermanSimulator/GamePanel.java	(revision b70e3329ce496f1334d515590b6893c78faa1319)
-+++ b/src/DannyGermanSimulator/GamePanel.java	(date 1732988875113)
-@@ -25,13 +25,13 @@
-     public final int screenHeight = tileSize * maxScreenRow;
- 
-     //World Settings
--    public final int maxWorldCol = 250;
--    public final int maxWorldRow = 250;
-+    public final int maxWorldCol = 50;
-+    public final int maxWorldRow = 50;
-     public final int worldWidth = tileSize * maxWorldCol;
-     public final int worldHeight = tileSize * maxWorldRow;
-     public boolean fullScreenOn = false;
-     public final int maxMap = 10;
--    public int currentMap = 2;
-+    public int currentMap = 1;
- 
-     // FPS
-     int FPS = 60;
-@@ -74,6 +74,8 @@
-     public final int characterState = 4;
-     public final int optionState = 5;
-     public final int gameOverState = 6;
-+    public final int transitionState = 7;
-+    public final int tradeState = 8;
- 
- 
-     public GamePanel() {
-Index: src/DannyGermanSimulator/KeyHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\nimport java.sql.SQLOutput;\r\n\r\npublic class KeyHandler implements KeyListener{\r\n    GamePanel gp;\r\n    public boolean upPressed, downPressed, leftPressed, rightPressed, mountPressed, ePressed = false, enterPressed=false, shotKeyPressed;\r\n    public boolean isMountPressed = false;\r\n    boolean showDebugText = false;\r\n\r\n    public KeyHandler(GamePanel gp){\r\n        this.gp = gp;\r\n    }\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n        int code = e.getKeyCode();\r\n        //TITLE STATE\r\n        if(gp.gameState == gp.titleState){\r\n            titleState(code);\r\n        }\r\n        //PLAY STATE\r\n        else if(gp.gameState == gp.playState){\r\n            playState(code);\r\n        }\r\n        //PAUSE STATE\r\n        else if(gp.gameState == gp.pauseState){\r\n            pauseState(code);\r\n        }\r\n        //DIALOGUE STATE\r\n        else if(gp.gameState == gp.dialogueState){\r\n            dialogueState(code);\r\n        }\r\n        //CHARACTER STATE\r\n        else if(gp.gameState == gp.characterState){\r\n            characterState(code);\r\n        }\r\n        //OPTIONS STATE\r\n        else if(gp.gameState == gp.optionState){\r\n            optionState(code);\r\n        }\r\n        //GAME OVER STATE\r\n        else if(gp.gameState == gp.gameOverState){\r\n            gameOverState(code);\r\n        }\r\n    }\r\n    public void titleState(int code){\r\n        if(gp.ui.titleScreenState == 0){\r\n            if(code == KeyEvent.VK_W){\r\n                gp.ui.commandNum--;\r\n                gp.playSE(1);\r\n                if(gp.ui.commandNum < 0){\r\n                    gp.ui.commandNum = 2;\r\n                }\r\n            }\r\n            if(code == KeyEvent.VK_S){\r\n                gp.ui.commandNum++;\r\n                gp.playSE(1);\r\n                if(gp.ui.commandNum > 2){\r\n                    gp.ui.commandNum = 0;\r\n                }\r\n            }\r\n            if(code == KeyEvent.VK_ENTER){\r\n                //NEW GAME\r\n                if(gp.ui.commandNum == 0){\r\n                    gp.ui.titleScreenState = 1;\r\n                    gp.playMusic(3);\r\n                }\r\n                //LOAD GAME\r\n                if(gp.ui.commandNum == 1){\r\n                    //add later\r\n                }\r\n                //QUIT\r\n                if(gp.ui.commandNum == 2){\r\n                    System.exit(0);\r\n                }\r\n            }\r\n        }\r\n        //For Class Selection\r\n        else if(gp.ui.titleScreenState == 1){\r\n            if(code == KeyEvent.VK_W){\r\n                gp.ui.commandNum--;\r\n                gp.playSE(1);\r\n                if(gp.ui.commandNum < 0){\r\n                    gp.ui.commandNum = 3;\r\n                }\r\n            }\r\n            if(code == KeyEvent.VK_S){\r\n                gp.ui.commandNum++;\r\n                gp.playSE(1);\r\n                if(gp.ui.commandNum > 3){\r\n                    gp.ui.commandNum = 0;\r\n                }\r\n            }\r\n            if(code == KeyEvent.VK_ENTER){\r\n                if(gp.ui.commandNum == 0){\r\n                    System.out.println(\"Warrior\");\r\n                    gp.gameState = gp.playState;\r\n//                        gp.playMusic(3);\r\n                }\r\n                if(gp.ui.commandNum == 1){\r\n                    System.out.println(\"Mage\");\r\n                    gp.gameState = gp.playState;\r\n//                    gp.playMusic(1);\r\n                }\r\n                if(gp.ui.commandNum == 2){\r\n                    System.out.println(\"Tank\");\r\n                    gp.gameState = gp.playState;\r\n//                    gp.playMusic(1);\r\n                }\r\n                if(gp.ui.commandNum == 3){\r\n                    gp.ui.titleScreenState = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void playState(int code){\r\n        if(code == KeyEvent.VK_W){\r\n            upPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            downPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_A){\r\n            leftPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_D){\r\n            rightPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_X){\r\n            mountPressed = !mountPressed;\r\n        }\r\n        if(code == KeyEvent.VK_I){\r\n            gp.gameState = gp.characterState;\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            enterPressed=true;\r\n        }\r\n        if(code == KeyEvent.VK_E){\r\n            ePressed=true;\r\n        }\r\n        if(code == KeyEvent.VK_P){\r\n            gp.gameState = gp.pauseState;\r\n        }\r\n        if(code == KeyEvent.VK_F){\r\n           shotKeyPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_ESCAPE){\r\n            gp.gameState = gp.optionState;\r\n        }\r\n        //toggle debug\r\n        if(code == KeyEvent.VK_T){\r\n            if(!showDebugText){\r\n                showDebugText = true;\r\n            } else if(showDebugText){\r\n                showDebugText = false;\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_M){\r\n            switch (gp.currentMap){\r\n                case 0: gp.tileM.loadMap(\"/maps/testmap.txt\",0); break;\r\n                case 1: gp.tileM.loadMap(\"/maps/interior01.txt\",1); break;\r\n                case 2: gp.tileM.loadMap(\"/maps/Map-Spawn.txt.txt\",2); break;\r\n            }\r\n        }\r\n    }\r\n    public void pauseState(int code){\r\n        if(code == KeyEvent.VK_P){\r\n            gp.gameState = gp.playState;\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            System.exit(0);\r\n        }\r\n    }\r\n    public void dialogueState(int code){\r\n        if(code == KeyEvent.VK_ENTER){\r\n            gp.gameState = gp.playState;\r\n        }\r\n    }\r\n    public void characterState(int code){\r\n        if(code == KeyEvent.VK_ESCAPE || code == KeyEvent.VK_I){\r\n            gp.gameState = gp.playState;\r\n        }\r\n        if(code == KeyEvent.VK_W){\r\n            if(gp.ui.slotRow != 0){\r\n                gp.ui.slotRow--;\r\n                gp.playSE(1);\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_A){\r\n            if(gp.ui.slotCol != 0){\r\n                gp.ui.slotCol--;\r\n                gp.playSE(1);\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            if(gp.ui.slotRow != 3){\r\n                gp.ui.slotRow++;\r\n                gp.playSE(1);\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_D){\r\n            if(gp.ui.slotCol != 4){\r\n                gp.ui.slotCol++;\r\n                gp.playSE(1);\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            gp.player.selectItem();\r\n        }\r\n    }\r\n    public void optionState(int code){\r\n        if(code == KeyEvent.VK_ESCAPE){\r\n            gp.gameState = gp.playState;\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            enterPressed = true;\r\n        }\r\n        int maxCommandNum = 0;\r\n        switch(gp.ui.subState){\r\n            case 0: maxCommandNum = 5; break;\r\n            case 3: maxCommandNum = 1; break;\r\n        }\r\n        if(code == KeyEvent.VK_W){\r\n            gp.ui.commandNum--;\r\n            gp.playSE(1);\r\n            if(gp.ui.commandNum < 0){\r\n                gp.ui.commandNum = maxCommandNum;\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            gp.ui.commandNum++;\r\n            gp.playSE(1);\r\n            if(gp.ui.commandNum > 5){\r\n                gp.ui.commandNum = 0;\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_A){\r\n            if(gp.ui.subState == 0){\r\n                if(gp.ui.commandNum == 1 && gp.music.volumeScale > 0){\r\n                    gp.music.volumeScale--;\r\n                    gp.music.checkVolume();\r\n                    gp.playSE(1);\r\n                }\r\n                if(gp.ui.commandNum == 2 && gp.SE.volumeScale > 0){\r\n                    gp.SE.volumeScale--;\r\n                    gp.playSE(1);\r\n                }\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_D){\r\n            if(gp.ui.subState == 0){\r\n                if(gp.ui.commandNum == 1 && gp.music.volumeScale < 5) {\r\n                    gp.music.volumeScale++;\r\n                    gp.music.checkVolume();\r\n                    gp.playSE(1);\r\n                }\r\n                if(gp.ui.commandNum == 2 && gp.SE.volumeScale < 5){\r\n                    gp.SE.volumeScale++;\r\n                    gp.playSE(1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void gameOverState(int code){\r\n        if(code == KeyEvent.VK_W){\r\n            gp.ui.commandNum--;\r\n            if(gp.ui.commandNum < 0){\r\n                gp.ui.commandNum = 1;\r\n            }\r\n            gp.playSE(1);\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            gp.ui.commandNum++;\r\n            if(gp.ui.commandNum > 1){\r\n                gp.ui.commandNum = 0;\r\n            }\r\n            gp.playSE(1);\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            if(gp.ui.commandNum == 0){\r\n                gp.gameState = gp.playState;\r\n                gp.retry();\r\n                gp.playMusic(3);\r\n            } else if(gp.ui.commandNum == 1){\r\n                gp.gameState = gp.titleState;\r\n                gp.restart();\r\n            }\r\n        }\r\n    }\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n        int code = e.getKeyCode();\r\n        if(code == KeyEvent.VK_W){\r\n            upPressed = false;\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            downPressed = false;\r\n        }\r\n        if(code == KeyEvent.VK_A){\r\n            leftPressed = false;\r\n        }\r\n        if(code == KeyEvent.VK_D){\r\n            rightPressed = false;\r\n        }\r\n        if(code == KeyEvent.VK_F){\r\n            shotKeyPressed = false;\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/KeyHandler.java b/src/DannyGermanSimulator/KeyHandler.java
---- a/src/DannyGermanSimulator/KeyHandler.java	(revision b70e3329ce496f1334d515590b6893c78faa1319)
-+++ b/src/DannyGermanSimulator/KeyHandler.java	(date 1733038371206)
-@@ -48,6 +48,10 @@
-         else if(gp.gameState == gp.gameOverState){
-             gameOverState(code);
-         }
-+        //TRADE STATE
-+        else if(gp.gameState == gp.tradeState){
-+            tradeState(code);
-+        }
-     }
-     public void titleState(int code){
-         if(gp.ui.titleScreenState == 0){
-@@ -186,33 +190,10 @@
-         if(code == KeyEvent.VK_ESCAPE || code == KeyEvent.VK_I){
-             gp.gameState = gp.playState;
-         }
--        if(code == KeyEvent.VK_W){
--            if(gp.ui.slotRow != 0){
--                gp.ui.slotRow--;
--                gp.playSE(1);
--            }
--        }
--        if(code == KeyEvent.VK_A){
--            if(gp.ui.slotCol != 0){
--                gp.ui.slotCol--;
--                gp.playSE(1);
--            }
--        }
--        if(code == KeyEvent.VK_S){
--            if(gp.ui.slotRow != 3){
--                gp.ui.slotRow++;
--                gp.playSE(1);
--            }
--        }
--        if(code == KeyEvent.VK_D){
--            if(gp.ui.slotCol != 4){
--                gp.ui.slotCol++;
--                gp.playSE(1);
--            }
--        }
-         if(code == KeyEvent.VK_ENTER){
-             gp.player.selectItem();
-         }
-+        playerInventory(code);
-     }
-     public void optionState(int code){
-         if(code == KeyEvent.VK_ESCAPE){
-@@ -293,6 +274,85 @@
-             }
-         }
-     }
-+    public void tradeState(int code){
-+        if(code == KeyEvent.VK_ENTER){
-+            enterPressed = true;
-+        }
-+        if(gp.ui.subState == 0){
-+            if(code == KeyEvent.VK_W){
-+                gp.ui.commandNum--;
-+                if(gp.ui.commandNum < 0){
-+                    gp.ui.commandNum = 2;
-+                }
-+                gp.playSE(1);
-+            }
-+            if(code == KeyEvent.VK_S){
-+                gp.ui.commandNum++;
-+                if(gp.ui.commandNum > 2){
-+                    gp.ui.commandNum = 0;
-+                }
-+                gp.playSE(1);
-+            }
-+        }
-+        if(gp.ui.subState == 1){
-+            npcInventory(code);
-+            if(code == KeyEvent.VK_ESCAPE){
-+                gp.ui.subState = 0;
-+            }
-+        }
-+    }
-+    public void playerInventory(int code){
-+        if(code == KeyEvent.VK_W){
-+            if(gp.ui.playerSlotRow != 0){
-+                gp.ui.playerSlotRow--;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_A){
-+            if(gp.ui.playerSlotCol != 0){
-+                gp.ui.playerSlotCol--;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_S){
-+            if(gp.ui.playerSlotRow != 3){
-+                gp.ui.playerSlotRow++;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_D){
-+            if(gp.ui.playerSlotCol != 4){
-+                gp.ui.playerSlotCol++;
-+                gp.playSE(1);
-+            }
-+        }
-+    }
-+    public void npcInventory(int code){
-+        if(code == KeyEvent.VK_W){
-+            if(gp.ui.npcSlotRow != 0){
-+                gp.ui.npcSlotRow--;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_A){
-+            if(gp.ui.npcSlotCol != 0){
-+                gp.ui.npcSlotCol--;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_S){
-+            if(gp.ui.npcSlotRow != 3){
-+                gp.ui.npcSlotRow++;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_D){
-+            if(gp.ui.npcSlotCol != 4){
-+                gp.ui.npcSlotCol++;
-+                gp.playSE(1);
-+            }
-+        }
-+    }
-     @Override
-     public void keyReleased(KeyEvent e) {
-         int code = e.getKeyCode();
-Index: src/DannyGermanSimulator/EventHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport java.awt.*;\r\n\r\npublic class EventHandler {\r\n\r\n    GamePanel gp;\r\n    EventRect eventRect[][][];\r\n\r\n    int previousEventX, previousEventY;\r\n    boolean canTouchEvent = true;\r\n\r\n    public EventHandler(GamePanel gp){\r\n        this.gp = gp;\r\n        eventRect = new EventRect[gp.maxMap][gp.maxWorldCol][gp.maxWorldRow];\r\n\r\n        int map = 0;\r\n        int col = 0;\r\n        int row = 0;\r\n\r\n        while(map < gp.maxMap && col < gp.maxWorldCol && row < gp.maxWorldRow){\r\n            eventRect[map][col][row] = new EventRect();\r\n            eventRect[map][col][row].x = 23;\r\n            eventRect[map][col][row].y = 23;\r\n            eventRect[map][col][row].width = 48;\r\n            eventRect[map][col][row].height = 48;\r\n            eventRect[map][col][row].eventRectDefaultX = eventRect[map][col][row].x;\r\n            eventRect[map][col][row].eventRectDefaultY = eventRect[map][col][row].y;\r\n\r\n            col++;\r\n            if(col == gp.maxWorldCol){\r\n                col = 0;\r\n                row++;\r\n                if(row == gp.maxWorldRow){\r\n                    row = 0;\r\n                    map++;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    public void checkEvent() {\r\n        //check player character is more than 1 tile away from the last event\r\n        int xDistance = Math.abs(gp.player.worldX - previousEventX);\r\n        int yDistance = Math.abs(gp.player.worldY - previousEventY);\r\n        int distance = Math.max(xDistance, yDistance);\r\n        if(distance > gp.tileSize){\r\n            canTouchEvent = true;\r\n        }\r\n\r\n        if(canTouchEvent){\r\n            if(hit(0,42,1,\"any\")) {damagePit(gp.dialogueState);}\r\n            else if(hit(0,13,26,\"any\")) {healingPool(gp.dialogueState);}\r\n            else if(hit(0,13,27,\"any\")) {healingPool(gp.dialogueState);}\r\n            else if(hit(0,13,28,\"any\")) {healingPool(gp.dialogueState);}\r\n            else if(hit(0,13,29,\"any\")) {healingPool(gp.dialogueState);}\r\n            else if(hit(0,23,15,\"any\")) {teleportInMap(gp.dialogueState);}\r\n            else if(hit(0,39,18,\"any\")) {teleport(1,12,13);}\r\n            else if(hit(1,12,13,\"any\")) {teleport(0,39,18);}\r\n        }\r\n    }\r\n    public boolean hit(int map,int col, int row, String reqDirection){\r\n        boolean hit = false;\r\n        if(map == gp.currentMap){\r\n            gp.player.solidArea.x = gp.player.worldX + gp.player.solidArea.x;\r\n            gp.player.solidArea.y = gp.player.worldY + gp.player.solidArea.y;\r\n            eventRect[map][col][row].x = col *gp.tileSize + eventRect[map][col][row].x;\r\n            eventRect[map][col][row].y = row *gp.tileSize + eventRect[map][col][row].y;\r\n\r\n            if(gp.player.solidArea.intersects(eventRect[map][col][row]) && !eventRect[map][col][row].eventDone){\r\n                if(gp.player.direction.contentEquals(reqDirection) || reqDirection.contentEquals(\"any\")){\r\n                    hit = true;\r\n\r\n                    previousEventX = gp.player.worldX;\r\n                    previousEventY = gp.player.worldY;\r\n                }\r\n            }\r\n\r\n            gp.player.solidArea.x = gp.player.solidAreaDefaultX;\r\n            gp.player.solidArea.y = gp.player.solidAreaDefaultY;\r\n            eventRect[map][col][row].x = eventRect[map][col][row].eventRectDefaultX;\r\n            eventRect[map][col][row].y = eventRect[map][col][row].eventRectDefaultY;\r\n        }\r\n        return hit;\r\n    }\r\n    public void damagePit(int gameState){\r\n        gp.gameState = gameState;\r\n        gp.playSE(6);\r\n        gp.ui.currentDialogue = \"You have fallen into a Pit\";\r\n        gp.player.life-=1;\r\n//        eventRect[col][row].eventDone = true;\r\n        canTouchEvent = false;\r\n    }\r\n    public void healingPool(int gameState){\r\n        if(gp.keyH.ePressed){\r\n            gp.gameState = gameState;\r\n            gp.ui.currentDialogue = \"You drank holy water, life restored\";\r\n            gp.player.life = gp.player.maxLife;\r\n            gp.player.mana = gp.player.maxMana;\r\n            gp.aSetter.setMonster();\r\n        }\r\n        gp.keyH.ePressed  = false;\r\n    }\r\n    public void teleport(int map, int col, int row){\r\n        gp.currentMap = map;\r\n        gp.player.worldX = gp.tileSize * col;\r\n        gp.player.worldY = gp.tileSize * row;\r\n        previousEventX = gp.player.worldX;\r\n        previousEventY = gp.player.worldY;\r\n        canTouchEvent = false;\r\n        gp.playSE(10);\r\n    }\r\n    public void teleportInMap(int gameState){\r\n        gp.gameState = gameState;\r\n        gp.player.attackCanceled = true;\r\n        gp.ui.currentDialogue = \"Teleport\";\r\n        gp.player.worldX = gp.tileSize*27;\r\n        gp.player.worldY = gp.tileSize*36;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/EventHandler.java b/src/DannyGermanSimulator/EventHandler.java
---- a/src/DannyGermanSimulator/EventHandler.java	(revision b70e3329ce496f1334d515590b6893c78faa1319)
-+++ b/src/DannyGermanSimulator/EventHandler.java	(date 1733024161430)
-@@ -1,5 +1,7 @@
- package DannyGermanSimulator;
- 
-+import Entity.Entity;
-+
- import java.awt.*;
- 
- public class EventHandler {
-@@ -9,6 +11,7 @@
- 
-     int previousEventX, previousEventY;
-     boolean canTouchEvent = true;
-+    int tempMap, tempCol, tempRow;
- 
-     public EventHandler(GamePanel gp){
-         this.gp = gp;
-@@ -57,6 +60,7 @@
-             else if(hit(0,23,15,"any")) {teleportInMap(gp.dialogueState);}
-             else if(hit(0,39,18,"any")) {teleport(1,12,13);}
-             else if(hit(1,12,13,"any")) {teleport(0,39,18);}
-+            else if(hit(1,12,9,"up")) {speak(gp.npc[1][0]);}
-         }
-     }
-     public boolean hit(int map,int col, int row, String reqDirection){
-@@ -102,14 +106,22 @@
-         gp.keyH.ePressed  = false;
-     }
-     public void teleport(int map, int col, int row){
--        gp.currentMap = map;
--        gp.player.worldX = gp.tileSize * col;
--        gp.player.worldY = gp.tileSize * row;
--        previousEventX = gp.player.worldX;
--        previousEventY = gp.player.worldY;
-+
-+        gp.gameState = gp.transitionState;
-+        tempMap = map;
-+        tempCol = col;
-+        tempRow = row;
-         canTouchEvent = false;
-         gp.playSE(10);
-     }
-+    public void speak(Entity entity){
-+
-+        if(gp.keyH.enterPressed){
-+            gp.gameState = gp.dialogueState;
-+            gp.player.attackCanceled = true;
-+            entity.speak();
-+        }
-+    }
-     public void teleportInMap(int gameState){
-         gp.gameState = gameState;
-         gp.player.attackCanceled = true;
-Index: src/Entity/Player.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package Entity;\r\n\r\nimport DannyGermanSimulator.GamePanel;\r\nimport DannyGermanSimulator.KeyHandler;\r\nimport object.*;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.util.ArrayList;\r\n\r\npublic class Player extends Entity {\r\n    KeyHandler keyH;\r\n    public final int screenX;\r\n    public final int screenY;\r\n    int tempSpeed = 6;\r\n    int tempSpriteSpeedMultiplier = spriteSpeedMultiplier;\r\n    public boolean attackCanceled = false;\r\n    public ArrayList<Entity> inventory = new ArrayList<>();\r\n    public final int maxInventorySize = 20;\r\n\r\n    public Player(GamePanel gp, KeyHandler keyH) {\r\n        super(gp);\r\n        this.keyH = keyH;\r\n        this.screenX = gp.screenWidth/2 - (gp.tileSize/2);\r\n        this.screenY = gp.screenHeight/2 - (gp.tileSize/2);\r\n        solidArea = new Rectangle();\r\n\r\n        //TO FIX Optimize\r\n        solidArea.x=34;\r\n        solidArea.y=48;\r\n        solidAreaDefaultX = solidArea.x;\r\n        solidAreaDefaultY = solidArea.y;\r\n        solidArea.width=48;\r\n        solidArea.height=48;\r\n\r\n        setDefaultValues();\r\n        getPlayerImage();\r\n        getPlayerAttackImage();\r\n        setItems();\r\n    }\r\n\r\n    public void setDefaultValues() {\r\n        worldX = gp.tileSize * 27;\r\n        worldY = gp.tileSize * 123;\r\n//        worldX = gp.tileSize * 12;\r\n//        worldY = gp.tileSize * 13;\r\n        speed = 6; //also change tempSpeed\r\n        direction = \"down\";\r\n\r\n        //PLAYER STATUS\r\n        level = 1;\r\n        maxLife = 6;\r\n        life = maxLife;\r\n        maxMana = 8;\r\n        mana = maxMana;\r\n        //more damage\r\n        strength = 1;\r\n        //more defence\r\n        dexterity = 1;\r\n        exp = 0;\r\n        nextLevelExp = 5;\r\n        coins = 0;\r\n        currentWeapon = new OBJ_Sword_Normal(gp);\r\n        currentShield = new OBJ_Shield_Wood(gp);\r\n        projectile = new OBJ_Fireball(gp);\r\n        attack = getAttack();\r\n        defence = getDefence();\r\n    }\r\n    public void setDefaultPosition(){\r\n\r\n        worldX = gp.tileSize * 23;\r\n        worldY = gp.tileSize * 21;\r\n        direction = \"down\";\r\n    }\r\n    public void restoreLifeAndMan(){\r\n        life = maxLife;\r\n        mana = maxMana;\r\n        invincible = false;\r\n    }\r\n    public void setItems(){\r\n\r\n        inventory.clear();\r\n        inventory.add(currentWeapon);\r\n        inventory.add(currentShield);\r\n        inventory.add(new OBJ_Key(gp));\r\n    }\r\n    public int getAttack(){\r\n        attackArea =currentWeapon.attackArea;\r\n        return attack = strength * currentWeapon.attackValue;\r\n    }\r\n    public int getDefence(){\r\n        return defence = dexterity * currentShield.defenseValue;\r\n    }\r\n    public void getPlayerImage() {\r\n    //Diri ibutang nato atoang mga pictures for characters\r\n        idle = setUp(\"/player/heil\",gp.tileSize,gp.tileSize);\r\n        idleleft = setUp(\"/maxLevelArmor/Left1\",gp.tileSize,gp.tileSize);\r\n        idleright = setUp(\"/maxLevelArmor/Right1\",gp.tileSize,gp.tileSize);\r\n        idledown = setUp(\"/maxLevelArmor/Back1\",gp.tileSize,gp.tileSize);\r\n        idleup = setUp(\"/maxLevelArmor/Front1\",gp.tileSize,gp.tileSize);\r\n        up1 = setUp(\"/maxLevelArmor/Front2\",gp.tileSize,gp.tileSize);\r\n        up2 = setUp(\"/maxLevelArmor/Front3\",gp.tileSize,gp.tileSize);\r\n        up3 = setUp(\"/maxLevelArmor/Front2\",gp.tileSize,gp.tileSize);\r\n        up4 = setUp(\"/maxLevelArmor/Front4\",gp.tileSize,gp.tileSize);\r\n        down1 = setUp(\"/maxLevelArmor/Back1\",gp.tileSize,gp.tileSize);\r\n        down2 = setUp(\"/maxLevelArmor/Back2\",gp.tileSize,gp.tileSize);\r\n        down3 = setUp(\"/maxLevelArmor/Back3\",gp.tileSize,gp.tileSize);\r\n        down4 = setUp(\"/maxLevelArmor/Back4\",gp.tileSize,gp.tileSize);\r\n        left1 = setUp(\"/maxLevelArmor/Left1\",gp.tileSize,gp.tileSize);\r\n        left2 = setUp(\"/maxLevelArmor/Left2\",gp.tileSize,gp.tileSize);\r\n        left3 = setUp(\"/maxLevelArmor/Left3\",gp.tileSize,gp.tileSize);\r\n        left4 = setUp(\"/maxLevelArmor/Left4\",gp.tileSize,gp.tileSize);\r\n        right1 = setUp(\"/maxLevelArmor/Right1\",gp.tileSize,gp.tileSize);\r\n        right2 = setUp(\"/maxLevelArmor/Right2\",gp.tileSize,gp.tileSize);\r\n        right3 = setUp(\"/maxLevelArmor/Right3\",gp.tileSize,gp.tileSize);\r\n        right4 = setUp(\"/maxLevelArmor/Right4\",gp.tileSize,gp.tileSize);\r\n    }\r\n    public void getPlayerAttackImage(){\r\n        if(currentWeapon.type == type_sword){\r\n            attackUp1 = setUp(\"/player/atkb1\",gp.tileSize*2,gp.tileSize*2);\r\n            attackUp2 = setUp(\"/player/atkb2\",gp.tileSize*2,gp.tileSize*2);\r\n            attackDown1 = setUp(\"/player/atk1\",gp.tileSize*2,gp.tileSize*2);\r\n            attackDown2 = setUp(\"/player/atk2\",gp.tileSize*2,gp.tileSize*2);\r\n            attackLeft1 = setUp(\"/player/atkl1\",gp.tileSize*2,gp.tileSize*2);\r\n            attackLeft2 = setUp(\"/player/atkl2\",gp.tileSize*2,gp.tileSize*2);\r\n            attackRight1 = setUp(\"/player/atkr1\",gp.tileSize*2,gp.tileSize*2);\r\n            attackRight2 = setUp(\"/player/atkr2\",gp.tileSize*2,gp.tileSize*2);\r\n        }\r\n        if(currentWeapon.type == type_axe){\r\n            attackUp1 = setUp(\"/player/AXE/AatkB\",gp.tileSize*2,gp.tileSize*2);\r\n            attackUp2 = setUp(\"/player/AXE/AatkB\",gp.tileSize*2,gp.tileSize*2);\r\n            attackDown1 = setUp(\"/player/AXE/AatkF\",gp.tileSize*2,gp.tileSize*2);\r\n            attackDown2 = setUp(\"/player/AXE/AatkF\",gp.tileSize*2,gp.tileSize*2);\r\n            attackLeft1 = setUp(\"/player/AXE/AatkL\",gp.tileSize*2,gp.tileSize*2);\r\n            attackLeft2 = setUp(\"/player/AXE/AatkL\",gp.tileSize*2,gp.tileSize*2);\r\n            attackRight1 = setUp(\"/player/AXE/AatkR\",gp.tileSize*2,gp.tileSize*2);\r\n            attackRight2 = setUp(\"/player/AXE/AatkR\",gp.tileSize*2,gp.tileSize*2);\r\n        }\r\n\r\n    }\r\n    public void update() {\r\n\r\n        if(attacking){\r\n            attacking();\r\n        }\r\n        else if(keyH.upPressed || keyH.downPressed || keyH.leftPressed || keyH.rightPressed || keyH.enterPressed) {\r\n            if (keyH.upPressed) {\r\n                direction = \"up\";\r\n            }\r\n            if (keyH.downPressed) {\r\n                direction = \"down\";\r\n            }\r\n            if (keyH.leftPressed) {\r\n                direction = \"left\";\r\n            }\r\n            if (keyH.rightPressed) {\r\n                direction = \"right\";\r\n            }\r\n\r\n            //check tile collision\r\n            collisionOn = false;\r\n            gp.colCheck.checkTile(this);\r\n\r\n            //check object collision\r\n            int objIndex = gp.colCheck.checkObject(this, true);\r\n            pickUpObject(objIndex);\r\n\r\n            //Check NPC collision\r\n            int npcIndex = gp.colCheck.checkEntity(this, gp.npc);\r\n            interactNPC(npcIndex);\r\n\r\n            //Check Monster Collision\r\n            int monsterIndex = gp.colCheck.checkEntity(this, gp.monster);\r\n            contactMonster(monsterIndex);\r\n\r\n            //Check Interactive Tile Collision\r\n            int iTileIndex = gp.colCheck.checkEntity(this,gp.iTile);\r\n\r\n            //Check Event\r\n            gp.eHandler.checkEvent();\r\n\r\n            //if collision is false, player can move\r\n            if(!collisionOn && !keyH.enterPressed){\r\n                if(keyH.upPressed || keyH.downPressed || keyH.leftPressed || keyH.rightPressed) {\r\n                    if (keyH.upPressed) {\r\n                        worldY -= speed;\r\n                    }\r\n                    if (keyH.downPressed) {\r\n                        worldY += speed;\r\n                    }\r\n                    if (keyH.leftPressed) {\r\n                        worldX -= speed;\r\n                    }\r\n                    if (keyH.rightPressed) {\r\n                        worldX += speed;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(keyH.enterPressed &&  !attackCanceled){\r\n                gp.playSE(7);\r\n                attacking = true;\r\n                spriteCounter = 0;\r\n            }\r\n\r\n            attackCanceled = false;\r\n\r\n            gp.keyH.enterPressed = false;\r\n\r\n            spriteCounter++;\r\n            if(spriteCounter > spriteSpeedMultiplier) {\r\n                switch (spriteNum){\r\n                    case 1:\r\n                        spriteNum = 2;\r\n                        break;\r\n                    case 2:\r\n                        spriteNum = 3;\r\n                        break;\r\n                    case 3:\r\n                        spriteNum = 4;\r\n                        break;\r\n                    case 4:\r\n                        spriteNum = 1;\r\n                        break;\r\n                }\r\n                spriteCounter = 0;\r\n            }\r\n        }\r\n\r\n        //projectile\r\n        if(gp.keyH.shotKeyPressed && !projectile.alive && shotAvailableCounter == 30 && projectile.haveResource(this)){\r\n            //SET DEFAULT COORDINATES, DIRECTION\r\n            projectile.set(worldX,worldY,direction,true,this);\r\n\r\n            //SUBTRACT MANA COST\r\n            projectile.subtractResource(this);\r\n\r\n            //ADD TO THE LIST\r\n            gp.projectileList.add(projectile);\r\n            shotAvailableCounter = 0;\r\n            gp.playSE(2);\r\n        }\r\n        if(keyH.mountPressed){\r\n            speed = 15;\r\n            spriteSpeedMultiplier = 4;\r\n        } else{\r\n            speed = tempSpeed;\r\n            spriteSpeedMultiplier = tempSpriteSpeedMultiplier;\r\n        }\r\n\r\n        if(invincible){\r\n            invincibleCounter++;\r\n            if(invincibleCounter > 60){\r\n                invincible = false;\r\n                invincibleCounter = 0;\r\n            }\r\n        }\r\n\r\n        if(shotAvailableCounter < 30){\r\n            shotAvailableCounter++;\r\n        }\r\n        if(life > maxLife){\r\n            life = maxLife;\r\n        }\r\n        if(mana > maxMana){\r\n            mana = maxMana;\r\n        }\r\n        if(life <= 0){\r\n            gp.gameState = gp.gameOverState;\r\n            gp.ui.commandNum = -1;\r\n            gp.stopMusic();\r\n            gp.playSE(9);\r\n        }\r\n    }\r\n    public void attacking(){\r\n\r\n        spriteCounter++;\r\n\r\n        if(spriteCounter <= 5){\r\n            spriteNum = 1;\r\n        }\r\n        if(spriteCounter > 5 && spriteCounter <= 25){\r\n            spriteNum = 2;\r\n\r\n            //to save current solid areas\r\n            int currentWorldX = worldX;\r\n            int currentWorldY = worldY;\r\n            int solidAreaWidth = solidArea.width;\r\n            int solidAreaHeight = solidArea.height;\r\n\r\n            //adjust player's worldX/Y fot attack area\r\n            switch(direction){\r\n                case \"up\": worldY -= attackArea.height; break;\r\n                case \"down\": worldY += attackArea.height; break;\r\n                case \"left\": worldX -= attackArea.width; break;\r\n                case \"right\": worldX += attackArea.width; break;\r\n            }\r\n            //attack area becomes solid area\r\n            solidArea.width = attackArea.width;\r\n            solidArea.height = attackArea.height;\r\n            //check monster collision\r\n            int monsterIndex = gp.colCheck.checkEntity(this, gp.monster);\r\n            damageMonster(monsterIndex, attack);\r\n\r\n            int iTileIndex = gp.colCheck.checkEntity(this, gp.iTile);\r\n            damageInteractiveTile(iTileIndex);\r\n\r\n            //restore position\r\n            worldX = currentWorldX;\r\n            worldY = currentWorldY;\r\n            solidArea.width = solidAreaWidth;\r\n            solidArea.height = solidAreaHeight;\r\n        }\r\n        if(spriteCounter > 25){\r\n            spriteNum = 1;\r\n            spriteCounter = 0;\r\n            attacking = false;\r\n        }\r\n    }\r\n    public void pickUpObject(int index){\r\n        if (index != 999){\r\n            //PICKUP ONLY ITEMS\r\n            if(gp.obj[gp.currentMap][index].type == type_pickupOnly){\r\n                gp.obj[gp.currentMap][index].use(this);\r\n                gp.obj[gp.currentMap][index] = null;\r\n            }\r\n            //INVENTORY ITEMS\r\n            else {\r\n                String text;\r\n                if(inventory.size() != maxInventorySize){\r\n                    inventory.add(gp.obj[gp.currentMap][index]);\r\n                    gp.playSE(0);\r\n                    text = \"Got a \" + gp.obj[gp.currentMap][index].name + \"!\";\r\n                } else {\r\n                    text = \"Inventory Full\";\r\n                }\r\n                gp.ui.addMessage(text);\r\n                gp.obj[gp.currentMap][index] = null;\r\n            }\r\n        }\r\n    }\r\n    public void interactNPC(int index){\r\n\r\n        if (gp.keyH.enterPressed) {\r\n            if(index!=999){\r\n                attackCanceled = true;\r\n                gp.gameState = gp.dialogueState;\r\n                gp.npc[gp.currentMap][index].speak();\r\n            }\r\n        }\r\n    }\r\n    public void contactMonster(int index){\r\n        if (index != 999){\r\n            if(!invincible && !gp.monster[gp.currentMap][index].dying){\r\n                gp.playSE(6);\r\n                int damage = gp.monster[gp.currentMap][index].attack - defence;\r\n                if(damage < 0){\r\n                    damage = 0;\r\n                }\r\n                life-=damage;\r\n                invincible = true;\r\n            }\r\n        }\r\n    }\r\n    public void damageMonster(int index, int attack){\r\n        if(index != 999) {\r\n            if(!gp.monster[gp.currentMap][index].invincible){\r\n                gp.playSE(5);\r\n                int damage = attack - gp.monster[gp.currentMap][index].defence;\r\n                if(damage < 0){\r\n                    damage = 0;\r\n                }\r\n                gp.monster[gp.currentMap][index].life -= damage;\r\n                gp.ui.addMessage(damage + \" Damage!\");\r\n\r\n                gp.monster[gp.currentMap][index].invincible = true;\r\n                gp.monster[gp.currentMap][index].damageReaction();\r\n                if(gp.monster[gp.currentMap][index].life <= 0){\r\n                    gp.monster[gp.currentMap][index].dying = true;\r\n                    gp.ui.addMessage(\"Killed an \" + gp.monster[gp.currentMap][index].name + \"!\");\r\n                    gp.ui.addMessage(\"Gained +\" + gp.monster[gp.currentMap][index].exp + \" exp\");\r\n                    exp += gp.monster[gp.currentMap][index].exp;\r\n                    checkLevelUp();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void damageInteractiveTile(int i){\r\n\r\n        if(i != 999 && gp.iTile[gp.currentMap][i].destructible && gp.iTile[gp.currentMap][i].isCorrectItem(this) && !gp.iTile[gp.currentMap][i].invincible){\r\n\r\n            gp.iTile[gp.currentMap][i].playSE();\r\n            gp.iTile[gp.currentMap][i].life--;\r\n            gp.iTile[gp.currentMap][i].invincible = true;\r\n\r\n            generateParticle(gp.iTile[gp.currentMap][i],gp.iTile[gp.currentMap][i]);\r\n\r\n            if(gp.iTile[gp.currentMap][i].life-- == 0){\r\n                gp.iTile[gp.currentMap][i] = gp.iTile[gp.currentMap][i].getDestroyForm();\r\n            }\r\n        }\r\n    }\r\n    public void checkLevelUp(){\r\n        if(exp >= nextLevelExp) {\r\n            level++;\r\n            nextLevelExp = (int) (nextLevelExp * 1.5);\r\n            maxLife += 2;\r\n            strength++;\r\n            dexterity++;\r\n            attack = getAttack();\r\n            defence = getDefence();\r\n            gp.playSE(4);\r\n            gp.gameState = gp.dialogueState;\r\n            gp.ui.currentDialogue = \"You are now level \" + level + \" now!\\n\";\r\n        }\r\n    }\r\n    public void selectItem(){\r\n\r\n        int itemIndex = gp.ui.getItemIndexOnSlot();\r\n        if(itemIndex < inventory.size()){\r\n            Entity selectedItem = inventory.get(itemIndex);\r\n            if(selectedItem.type == type_sword || selectedItem.type == type_axe){\r\n                currentWeapon = selectedItem;\r\n                attack = getAttack();\r\n                getPlayerAttackImage();\r\n            }\r\n            if(selectedItem.type == type_shield){\r\n                currentShield = selectedItem;\r\n                defence = getDefence();\r\n            }\r\n            if(selectedItem.type == type_consumable){\r\n                selectedItem.use(this);\r\n                inventory.remove(itemIndex);\r\n            }\r\n        }\r\n    }\r\n    public void draw(Graphics2D g2) {\r\n        BufferedImage image = null;\r\n\r\n        int tempScreenX = screenX;\r\n        int tempScreenY = screenY;\r\n\r\n        // Array Sprites\r\n        BufferedImage[] upSprites = {up1, up2, up3, up4};\r\n        BufferedImage[] downSprites = {down1, down2, down3, down4};\r\n        BufferedImage[] leftSprites = {left1, left2, left3, left4};\r\n        BufferedImage[] rightSprites = {right1, right2, right3, right4};\r\n\r\n        switch (direction) {\r\n            case \"up\":\r\n                if(!attacking){\r\n                    image = upSprites[spriteNum - 1]; // Cycle through the up sprites\r\n                    if (!keyH.upPressed) {\r\n                        image = idleup;\r\n                        spriteCounter = 8;\r\n                    }\r\n                }\r\n                if(attacking){\r\n                    tempScreenX = screenX - 64;\r\n                    tempScreenY = screenY - 64;\r\n                    if(spriteNum==1) image = attackUp1;\r\n                    if(spriteNum==2) image = attackUp2;\r\n                }\r\n                break;\r\n\r\n            case \"down\":\r\n                if(!attacking){\r\n                    image = downSprites[spriteNum - 1]; // Cycle through the down sprites\r\n                    if (!keyH.downPressed) {\r\n                        image = idledown;\r\n                        spriteCounter = 8;\r\n                    }\r\n                }\r\n                if(attacking){\r\n                    tempScreenX = screenX - 64;\r\n                    tempScreenY = screenY - 64;\r\n                    if(spriteNum==1) image = attackDown1;\r\n                    if(spriteNum==2) image = attackDown2;\r\n                }\r\n                break;\r\n\r\n            case \"left\":\r\n                if(!attacking){\r\n                    image = leftSprites[spriteNum - 1]; // Cycle through the left sprites\r\n                    if (!keyH.leftPressed) {\r\n                        image = idleleft;\r\n                        spriteCounter = 8;\r\n                    }\r\n                }\r\n                if(attacking){\r\n                    tempScreenX = screenX - 64;\r\n                    tempScreenY = screenY - 64;\r\n                    if(spriteNum==1) image = attackLeft1;\r\n                    if(spriteNum==2) image = attackLeft2;\r\n                }\r\n                break;\r\n\r\n            case \"right\":\r\n                if(!attacking){\r\n                    image = rightSprites[spriteNum - 1]; // Cycle through the right sprites\r\n                    if (!keyH.rightPressed) {\r\n                        image = idleright;\r\n                        spriteCounter = 8;\r\n                    }\r\n                }\r\n                if(attacking){\r\n                    tempScreenX = screenX - 64;\r\n                    tempScreenY = screenY - 64;\r\n                    if(spriteNum==1) image = attackRight1;\r\n                    if(spriteNum==2) image = attackRight2;\r\n                }\r\n                break;\r\n        }\r\n\r\n        //for immunity effect\r\n        if(invincible){\r\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.3F));\r\n        }\r\n        g2.drawImage(image, tempScreenX, tempScreenY,null);\r\n        //reset\r\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1F));\r\n\r\n        //to see collision box or hit box\r\n        g2.setColor(Color.red);\r\n        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);\r\n\r\n        //debug\r\n//        g2.setFont(new Font(\"Arial\", Font.PLAIN, 26));\r\n//        g2.setColor(Color.white);\r\n//        g2.drawString(\"Invincible:\"+invincibleCounter,10, 400);\r\n\r\n        // DEBUG FOR ATTACK\r\n        // AttackArea\r\n        tempScreenX = screenX + solidArea.x;\r\n        tempScreenY = screenY + solidArea.y;\r\n        switch(direction) {\r\n            case \"up\": tempScreenY = screenY - attackArea.height; break;\r\n            case \"down\": tempScreenY = screenY + gp.tileSize; break;\r\n            case \"left\": tempScreenX = screenX - attackArea.width; break;\r\n            case \"right\": tempScreenX = screenX + gp.tileSize; break;\r\n        }\r\n        g2.setColor(Color.blue);\r\n        g2.setStroke(new BasicStroke(1));\r\n        g2.drawRect(tempScreenX, tempScreenY, attackArea.width, attackArea.height);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Entity/Player.java b/src/Entity/Player.java
---- a/src/Entity/Player.java	(revision b70e3329ce496f1334d515590b6893c78faa1319)
-+++ b/src/Entity/Player.java	(date 1733037939209)
-@@ -15,8 +15,6 @@
-     int tempSpeed = 6;
-     int tempSpriteSpeedMultiplier = spriteSpeedMultiplier;
-     public boolean attackCanceled = false;
--    public ArrayList<Entity> inventory = new ArrayList<>();
--    public final int maxInventorySize = 20;
- 
-     public Player(GamePanel gp, KeyHandler keyH) {
-         super(gp);
-@@ -40,10 +38,13 @@
-     }
- 
-     public void setDefaultValues() {
--        worldX = gp.tileSize * 27;
--        worldY = gp.tileSize * 123;
--//        worldX = gp.tileSize * 12;
--//        worldY = gp.tileSize * 13;
-+//        worldX = gp.tileSize * 27;
-+//        worldY = gp.tileSize * 123;
-+        worldX = gp.tileSize * 23;
-+        worldY = gp.tileSize * 21;
-+
-+        worldX = gp.tileSize * 12;
-+        worldY = gp.tileSize * 12;
-         speed = 6; //also change tempSpeed
-         direction = "down";
- 
-@@ -416,7 +417,7 @@
-     }
-     public void selectItem(){
- 
--        int itemIndex = gp.ui.getItemIndexOnSlot();
-+        int itemIndex = gp.ui.getItemIndexOnSlot(gp.ui.playerSlotCol, gp.ui.playerSlotRow);
-         if(itemIndex < inventory.size()){
-             Entity selectedItem = inventory.get(itemIndex);
-             if(selectedItem.type == type_sword || selectedItem.type == type_axe){
-Index: src/tile/TileManager.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package tile;\r\n\r\nimport DannyGermanSimulator.GamePanel;\r\nimport DannyGermanSimulator.UtilityTool;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.*;\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.util.Objects;\r\n\r\npublic class TileManager {\r\n    GamePanel gp;\r\n    public Tile[] tile;\r\n    public Tile[] tileSpawn;\r\n    public int[][][] mapTileNum;\r\n\r\n    public TileManager(GamePanel gp) {\r\n        this.gp = gp;\r\n        tile = new Tile[60];// Assuming 60 types of tiles\r\n        tileSpawn = new Tile[105];\r\n        mapTileNum = new int[gp.maxMap][gp.maxWorldCol][gp.maxWorldRow]; // Map for tile numbers\r\n        getTileImage(); // Load tile images\r\n        getTileImageSpawn();\r\n        loadMap(\"/maps/testmap.txt\", 0); // Load map from file\r\n        loadMap(\"/maps/interior01.txt\",1);\r\n        loadMap(\"/maps/Spawn.txt\", 2); //SPAWN\r\n    }\r\n    // Method to load tile images\r\n    public void getTileImage() {\r\n        setUp(0,\"/Tiles_Ren/000\" , false);\r\n        setUp(1,\"/Tiles_Ren/001\" , false);\r\n        setUp(2,\"/Tiles_Ren/002\" , false);\r\n        setUp(3,\"/Tiles_Ren/003\" , false);\r\n        setUp(4,\"/Tiles_Ren/004\" , false);\r\n        setUp(5,\"/Tiles_Ren/005\" , false);\r\n        setUp(6,\"/Tiles_Ren/006\" , false);\r\n        setUp(7,\"/Tiles_Ren/007\" , false);\r\n        setUp(8,\"/Tiles_Ren/008\" , false);\r\n        setUp(9,\"/Tiles_Ren/009\" , false);\r\n        setUp(10,\"/Tiles_Ren/010\" , false);\r\n        setUp(11,\"/Tiles_Ren/011\" , false);\r\n        setUp(12,\"/Tiles_Ren/012\" , false);\r\n        setUp(13,\"/Tiles_Ren/013\" , false);\r\n        setUp(14,\"/Tiles_Ren/014\" , false);\r\n        setUp(15,\"/Tiles_Ren/015\" , false);\r\n        setUp(16,\"/Tiles_Ren/016\" , true);\r\n        setUp(17,\"/Tiles_Ren/017\" , false);\r\n        setUp(18,\"/Tiles_Ren/018\" , true);\r\n        setUp(19,\"/Tiles_Ren/019\" , true);\r\n        setUp(20,\"/Tiles_Ren/02\" , false);\r\n        setUp(21,\"/Tiles_Ren/020\" , true);\r\n        setUp(22,\"/Tiles_Ren/021\" , true);\r\n        setUp(23,\"/Tiles_Ren/022\" , true);\r\n        setUp(24,\"/Tiles_Ren/023\", true);\r\n        setUp(25,\"/Tiles_Ren/024\" , true);\r\n        setUp(26,\"/Tiles_Ren/025\" , true);\r\n        setUp(27,\"/Tiles_Ren/026\" , true);\r\n        setUp(28,\"/Tiles_Ren/027\" , true);\r\n        setUp(29,\"/Tiles_Ren/028\" , true);\r\n        setUp(30,\"/Tiles_Ren/029\" , true);\r\n        setUp(31,\"/Tiles_Ren/030\" , true);\r\n        setUp(32,\"/Tiles_Ren/031\" , true);\r\n        setUp(33,\"/Tiles_Ren/032\" , true);\r\n        setUp(34,\"/Tiles_Ren/033\" , false);\r\n        setUp(35,\"/Tiles_Ren/034\" , false);\r\n        setUp(36,\"/Tiles_Ren/035\" , true);\r\n        setUp(37,\"/Tiles_Ren/036\" , false);\r\n        setUp(38,\"/Tiles_Ren/037\" , false);\r\n        setUp(39,\"/Tiles_Ren/04\" , false);\r\n        setUp(40,\"/Tiles_Ren/05\" , false);\r\n        setUp(41,\"/Tiles_Ren/08\" , true);\r\n        setUp(42,\"/Tiles_Ren/09\" , false);\r\n        setUp(43,\"/Tiles_Ren/1\" , false);\r\n        setUp(44,\"/Tiles_Ren/10\" , false);\r\n        setUp(45,\"/Tiles_Ren/11\" , true);\r\n        setUp(46,\"/Tiles_Ren/12\" , true);\r\n        setUp(47,\"/Tiles_Ren/13\" , false);\r\n        setUp(48,\"/Tiles_Ren/14\" , false);\r\n        setUp(49,\"/Tiles_Ren/15\" , false);\r\n        setUp(50,\"/Tiles_Ren/16\" , false);\r\n        setUp(51,\"/Tiles_Ren/17\" , false);\r\n        setUp(52,\"/Tiles_Ren/18\" , false);\r\n        setUp(53,\"/Tiles_Ren/19\" , false);\r\n        setUp(54,\"/Tiles_Ren/20\" , false);\r\n        setUp(55,\"/Tiles_Ren/21\" , false);\r\n        setUp(56,\"/Tiles_Ren/22\" , false);\r\n        setUp(57,\"/tiles_interactive/drytree\" , false);\r\n        setUp(58,\"/tiles_interactive/trunk\" , false);\r\n    }\r\n    public void getTileImageSpawn() {\r\n        setUpSpawn(0,\"/Spawn/001\" , false);\r\n        setUpSpawn(1,\"/Spawn/002\" , false);\r\n        setUpSpawn(2,\"/Spawn/003\" , false);\r\n        setUpSpawn(3,\"/Spawn/004\" , false);\r\n        setUpSpawn(4,\"/Spawn/005\" , false);\r\n        setUpSpawn(5,\"/Spawn/006\" , false);\r\n        setUpSpawn(6,\"/Spawn/007\" , false);\r\n        setUpSpawn(7,\"/Spawn/008\" , false);\r\n        setUpSpawn(8,\"/Spawn/009\" , false);\r\n        setUpSpawn(9,\"/Spawn/010\" , false);\r\n        setUpSpawn(10,\"/Spawn/011\" , false);\r\n        setUpSpawn(11,\"/Spawn/012\" , false);\r\n        setUpSpawn(12,\"/Spawn/013\" , false);\r\n        setUpSpawn(13,\"/Spawn/014\" , false);\r\n        setUpSpawn(14,\"/Spawn/015\" , false);\r\n        setUpSpawn(15,\"/Spawn/018\" , true);\r\n        setUpSpawn(16,\"/Spawn/019\" , true);\r\n        setUpSpawn(17,\"/Spawn/02\" , false);\r\n        setUpSpawn(18,\"/Spawn/020\" , true);\r\n        setUpSpawn(19,\"/Spawn/021\" , true);\r\n        setUpSpawn(20,\"/Spawn/022\" , true);\r\n        setUpSpawn(21,\"/Spawn/023\" , true);\r\n        setUpSpawn(22,\"/Spawn/024\" , true);\r\n        setUpSpawn(23,\"/Spawn/025\" , true);\r\n        setUpSpawn(24,\"/Spawn/026\" , true);\r\n        setUpSpawn(25,\"/Spawn/027\" , true);\r\n        setUpSpawn(26,\"/Spawn/028\" , true);\r\n        setUpSpawn(27,\"/Spawn/029\" , true);\r\n        setUpSpawn(28,\"/Spawn/030\" , true);\r\n        setUpSpawn(29,\"/Spawn/031\" , true);\r\n        setUpSpawn(30,\"/Spawn/04\" , false);\r\n        setUpSpawn(31,\"/Spawn/05\" , false);\r\n        setUpSpawn(32,\"/Spawn/09\" , false);\r\n        setUpSpawn(33,\"/Spawn/1\" , false);\r\n        setUpSpawn(34,\"/Spawn/10\" , false);\r\n        setUpSpawn(35,\"/Spawn/14\" , false);\r\n        setUpSpawn(36,\"/Spawn/15\" , false);\r\n        setUpSpawn(37,\"/Spawn/16\" , false);\r\n        setUpSpawn(38,\"/Spawn/17\" , false);\r\n        setUpSpawn(39,\"/Spawn/18\" , false);\r\n        setUpSpawn(40,\"/Spawn/19\" , false);\r\n        setUpSpawn(41,\"/Spawn/20\" , false);\r\n        setUpSpawn(42,\"/Spawn/21\" , false);\r\n        setUpSpawn(43,\"/Spawn/22\" , false);\r\n        setUpSpawn(44,\"/Spawn/B\" , true);\r\n        setUpSpawn(45,\"/Spawn/B1\" , true);\r\n        setUpSpawn(46,\"/Spawn/B2\" , true);\r\n        setUpSpawn(47,\"/Spawn/b3\" , true);\r\n        setUpSpawn(48,\"/Spawn/h1\" , true);\r\n        setUpSpawn(49,\"/Spawn/h10\" , true);\r\n        setUpSpawn(50,\"/Spawn/h11\" , true);\r\n        setUpSpawn(51,\"/Spawn/h12\" , true);\r\n        setUpSpawn(52,\"/Spawn/h13\" , true);\r\n        setUpSpawn(53,\"/Spawn/h14\" , true);\r\n        setUpSpawn(54,\"/Spawn/h15\" , true);\r\n        setUpSpawn(55,\"/Spawn/h16\" , true);\r\n        setUpSpawn(56,\"/Spawn/h17\" , true);\r\n        setUpSpawn(57,\"/Spawn/h18\" , true);\r\n        setUpSpawn(58,\"/Spawn/h19\" , true);\r\n        setUpSpawn(59,\"/Spawn/h2\" , true);\r\n        setUpSpawn(60,\"/Spawn/h20\" , true);\r\n        setUpSpawn(61,\"/Spawn/h21\" , true);\r\n        setUpSpawn(62,\"/Spawn/h22\" , true);\r\n        setUpSpawn(63,\"/Spawn/h23\" , true);\r\n        setUpSpawn(64,\"/Spawn/h24\" , true);\r\n        setUpSpawn(65,\"/Spawn/h25\" , true);\r\n        setUpSpawn(66,\"/Spawn/h26\" , true);\r\n        setUpSpawn(67,\"/Spawn/h27\" , true);\r\n        setUpSpawn(68,\"/Spawn/h28\" , true);\r\n        setUpSpawn(69,\"/Spawn/h29\" , true);\r\n        setUpSpawn(70,\"/Spawn/h3\" , true);\r\n        setUpSpawn(71,\"/Spawn/h30\" , true);\r\n        setUpSpawn(72,\"/Spawn/h4\" , true);\r\n        setUpSpawn(73,\"/Spawn/h5\" , true);\r\n        setUpSpawn(74,\"/Spawn/h6\" , true);\r\n        setUpSpawn(75,\"/Spawn/h7\" , true);\r\n        setUpSpawn(76,\"/Spawn/h8\" , true);\r\n        setUpSpawn(77,\"/Spawn/h9\" , true);\r\n        setUpSpawn(78,\"/Spawn/Rock\" , true);\r\n        setUpSpawn(79,\"/Spawn/Sign\" , true);\r\n        setUpSpawn(80,\"/Spawn/st1\" , true);\r\n        setUpSpawn(81,\"/Spawn/st2\" , true);\r\n        setUpSpawn(82,\"/Spawn/st3\" , true);\r\n        setUpSpawn(83,\"/Spawn/st4\" , true);\r\n        setUpSpawn(84,\"/Spawn/st5\" , true);\r\n        setUpSpawn(85,\"/Spawn/st6\" , true);\r\n        setUpSpawn(86,\"/Spawn/T\" , true);\r\n        setUpSpawn(87,\"/Spawn/T1\" , true);\r\n        setUpSpawn(88,\"/Spawn/t10\" , true);\r\n        setUpSpawn(89,\"/Spawn/T11\" , true);\r\n        setUpSpawn(90,\"/Spawn/t2\" , true);\r\n        setUpSpawn(91,\"/Spawn/T3\" , true);\r\n        setUpSpawn(92,\"/Spawn/t4\" , true);\r\n        setUpSpawn(93,\"/Spawn/T5\" , true);\r\n        setUpSpawn(94,\"/Spawn/T6\" , true);\r\n        setUpSpawn(95,\"/Spawn/T7\" , true);\r\n        setUpSpawn(96,\"/Spawn/T8\" , true);\r\n        setUpSpawn(97,\"/Spawn/T9\" , true);\r\n        setUpSpawn(98,\"/Spawn/tr1\" , true);\r\n        setUpSpawn(99,\"/Spawn/tr2\" , true);\r\n        setUpSpawn(100,\"/Spawn/tr3\" , true);\r\n        setUpSpawn(101,\"/Spawn/tr4\" , true);\r\n    }\r\n    public void setUp(int index, String imageName, boolean collision){\r\n\r\n        UtilityTool uTool = new UtilityTool();\r\n        try {\r\n            tile[index] = new Tile();\r\n            tile[index].image = ImageIO.read(getClass().getResourceAsStream(imageName + \".png\"));\r\n            tile[index].image = uTool.scaleImage(tile[index].image, gp.tileSize, gp.tileSize);\r\n            tile[index].collision = collision;\r\n        } catch(IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public void setUpSpawn(int index, String imageName, boolean collision){\r\n\r\n        UtilityTool uTool = new UtilityTool();\r\n        try {\r\n            tileSpawn[index] = new Tile();\r\n            tileSpawn[index].image = ImageIO.read(getClass().getResourceAsStream(imageName + \".png\"));\r\n            tileSpawn[index].image = uTool.scaleImage(tileSpawn[index].image, gp.tileSize, gp.tileSize);\r\n            tileSpawn[index].collision = collision;\r\n        } catch(IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    // Load map data from text file\r\n    public void loadMap(String filePath, int map) {\r\n\r\n        try {\r\n\r\n            // import and read the map matrix\r\n            InputStream is = getClass().getResourceAsStream(filePath);\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(Objects.requireNonNull(is)));\r\n\r\n            int col = 0;\r\n            int row = 0;\r\n\r\n            // read one row line of the map matrix data\r\n            while (col < gp.maxWorldCol && row < gp.maxWorldRow) {\r\n\r\n                String line = br.readLine();\r\n\r\n                while (col < gp.maxWorldCol) {\r\n\r\n                    // split the line of data matrix into solo digits\r\n                    String[] numbers = line.split(\" \");\r\n\r\n                    // parse String to int\r\n                    int num = Integer.parseInt(numbers[col]);\r\n\r\n                    mapTileNum[map][col][row] = num;\r\n                    col++;\r\n                }\r\n                if (col == gp.maxWorldCol) {\r\n                    col = 0;\r\n                    row++;\r\n                }\r\n            }\r\n            br.close();\r\n\r\n        }\r\n        catch (Exception e) {\r\n\r\n\r\n        }\r\n    }\r\n    // Draw method to render the map\r\n    public void draw(Graphics2D g2) {\r\n        int worldCol = 0;\r\n        int worldRow = 0;\r\n\r\n        while (worldCol < gp.maxWorldCol && worldRow < gp.maxWorldRow) {\r\n            int tileNum = mapTileNum[gp.currentMap][worldCol][worldRow];\r\n\r\n            int worldX = worldCol * gp.tileSize;\r\n            int worldY = worldRow * gp.tileSize;\r\n            int screenX = worldX - gp.player.worldX + gp.player.screenX;\r\n            int screenY = worldY - gp.player.worldY + gp.player.screenY;\r\n\r\n            // Only draw the tiles that are visible on the screen\r\n            if (worldX + gp.tileSize > gp.player.worldX - gp.player.screenX &&\r\n                    worldX - gp.tileSize < gp.player.worldX + gp.player.screenX &&\r\n                    worldY + gp.tileSize > gp.player.worldY - gp.player.screenY &&\r\n                    worldY - gp.tileSize < gp.player.worldY + gp.player.screenY) {\r\n\r\n                if(gp.currentMap == 2){\r\n                    g2.drawImage(tileSpawn[tileNum].image, screenX, screenY, null);\r\n                } else {\r\n                    g2.drawImage(tile[tileNum].image, screenX, screenY, null);\r\n                }\r\n\r\n            }\r\n            worldCol++;\r\n\r\n            if (worldCol == gp.maxWorldCol) {\r\n                worldCol = 0;\r\n                worldRow++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/tile/TileManager.java b/src/tile/TileManager.java
---- a/src/tile/TileManager.java	(revision b70e3329ce496f1334d515590b6893c78faa1319)
-+++ b/src/tile/TileManager.java	(date 1732985643566)
-@@ -280,7 +280,7 @@
- 
-                 if(gp.currentMap == 2){
-                     g2.drawImage(tileSpawn[tileNum].image, screenX, screenY, null);
--                } else {
-+                } else if(gp.currentMap == 0 || gp.currentMap == 1){
-                     g2.drawImage(tile[tileNum].image, screenX, screenY, null);
-                 }
- 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM_[Changes]/shelved.patch	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
+++ /dev/null	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
@@ -1,619 +0,0 @@
-Index: src/DannyGermanSimulator/GamePanel.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\n\r\nimport Entity.Entity;\r\nimport Entity.Player;\r\nimport tile.TileManager;\r\nimport tile_interactive.InteractiveTile;\r\n\r\npublic class GamePanel extends JPanel implements Runnable {\r\n\r\n    //SCREEN SETTINGS\r\n    final int originalTileSize = 40; //tile size\r\n    final int scale = 3;\r\n    public final int tileSize = originalTileSize * scale;\r\n    //    screenWidth / maxScreenCol\r\n    public final int maxScreenCol = 20;\r\n    public final int maxScreenRow = 12;\r\n    public final int screenWidth = tileSize * maxScreenCol;\r\n    public final int screenHeight = tileSize * maxScreenRow;\r\n\r\n    //World Settings\r\n    public final int maxWorldCol = 250;\r\n    public final int maxWorldRow = 250;\r\n    public final int worldWidth = tileSize * maxWorldCol;\r\n    public final int worldHeight = tileSize * maxWorldRow;\r\n    public boolean fullScreenOn = false;\r\n    public final int maxMap = 10;\r\n    public int currentMap = 3;\r\n\r\n    // FPS\r\n    int FPS = 60;\r\n\r\n    //FOR FULL SCREEN\r\n    int screenWidth2 = screenWidth;\r\n    int screenHeight2 = screenHeight;\r\n    BufferedImage tempScreen;\r\n    Graphics2D g2;\r\n\r\n    //SYSTEM\r\n    TileManager tileM = new TileManager(this);\r\n    public KeyHandler keyH = new KeyHandler(this);\r\n    Sound music = new Sound(); // music\r\n    Sound SE = new Sound(); //sound effect\r\n    public CollisionChecker colCheck = new CollisionChecker(this);\r\n    public AssetSetter aSetter = new AssetSetter(this);\r\n    public UI ui = new UI(this);\r\n    public EventHandler eHandler = new EventHandler(this);\r\n    Config config = new Config(this);\r\n    Thread gameThread;\r\n\r\n    // Player, Entity, Objects\r\n    public Player player = new Player(this, keyH);\r\n    public Entity obj[][] = new Entity[maxMap][20]; // 10 being 10 slots for objects (can have many objects but for now 10)5\r\n    public Entity npc[][] = new Entity[maxMap][10];\r\n    public Entity monster[][] = new Entity[maxMap][10];\r\n    public InteractiveTile iTile[][] = new InteractiveTile[maxMap][50];\r\n    public ArrayList<Entity> projectileList = new ArrayList<>();\r\n    public ArrayList<Entity> particleList = new ArrayList<>();\r\n    ArrayList<Entity> entityList = new ArrayList<>();\r\n    //more objects can slow down the game\r\n\r\n    //GAME STATE\r\n    public int gameState;\r\n    public final int titleState = 0;\r\n    public final int playState = 1;\r\n    public final int pauseState = 2;\r\n    public final int dialogueState = 3;\r\n    public final int characterState = 4;\r\n    public final int optionState = 5;\r\n    public final int gameOverState = 6;\r\n\r\n\r\n    public GamePanel() {\r\n        this.setPreferredSize(new Dimension(screenWidth, screenHeight));\r\n        this.setBackground(Color.black);\r\n        this.setDoubleBuffered(true);\r\n        this.addKeyListener(keyH);\r\n        this.setFocusable(true);\r\n    }\r\n    public void setGameObjects(){\r\n        aSetter.setObject();\r\n        aSetter.setNPC();\r\n        aSetter.setMonster();\r\n        aSetter.setInteractiveTile();\r\n        gameState = titleState;\r\n\r\n        tempScreen = new BufferedImage(screenWidth,screenHeight,BufferedImage.TYPE_INT_ARGB);\r\n        g2 = (Graphics2D) tempScreen.getGraphics();\r\n        setFullScreen();\r\n    }\r\n    public void retry(){\r\n        player.setDefaultPosition();\r\n        player.restoreLifeAndMan();\r\n        aSetter.setNPC();\r\n        aSetter.setMonster();\r\n    }\r\n    public void restart(){\r\n        player.setDefaultValues();\r\n        player.setItems();\r\n        aSetter.setObject();\r\n        aSetter.setNPC();\r\n        aSetter.setMonster();\r\n        aSetter.setInteractiveTile();\r\n    }\r\n    public void setFullScreen(){\r\n        //GET MONITOR ENVIRONMENT\r\n//        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\r\n//        GraphicsDevice gd = ge.getDefaultScreenDevice();\r\n//        gd.setFullScreenWindow(Main.window);\r\n        //GET FULLSCREEN DIMENSIONS\r\n//        screenWidth2 = Main.window.getWidth();\r\n//        screenHeight2 = Main.window.getHeight();\r\n\r\n        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\r\n        double width = screenSize.getWidth();\r\n        double height = screenSize.getHeight();\r\n        Main.window.setExtendedState(JFrame.MAXIMIZED_BOTH);\r\n        screenWidth2 = (int) width;\r\n        screenHeight2 = (int) height;\r\n        //offset factor to be used by mouse listener or mouse motion listener if you are using cursor in your game. Multiply your e.getX()e.getY() by this.\r\n//        fullScreenOffsetFactor = (float) screenWidth / (float) screenWidth2;\r\n    }\r\n    public void startGameThread() {\r\n        gameThread = new Thread(this);\r\n        gameThread.start();\r\n    }\r\n    public void run() {\r\n        double drawInterval = 1000000000 / FPS; //0.01666 seconds\r\n        double delta = 0;\r\n        long lastTime = System.nanoTime();\r\n        long currentTime;\r\n        long timer = 0;\r\n        long drawCount = 0;\r\n\r\n        while (gameThread != null) {\r\n\r\n            currentTime = System.nanoTime();\r\n\r\n            delta += (currentTime - lastTime) / drawInterval;\r\n            timer += (currentTime - lastTime);\r\n            lastTime = currentTime;\r\n\r\n            if(delta >= 1){\r\n                update();\r\n                drawToTempScreen(); //draws everything to the buffered Image\r\n                drawToScreen(); //draws the buffered image to the screen\r\n                delta--;\r\n                drawCount++;\r\n            }\r\n            if(timer >= 1000000000){\r\n                drawCount = 0;\r\n                timer = 0;\r\n            }\r\n        }\r\n    }\r\n    public void update() {\r\n        if(gameState == playState){\r\n            player.update();\r\n            //NPC\r\n            for(int i = 0; i < npc[1].length; i++){\r\n                if(npc[currentMap][i] != null){\r\n                    npc[currentMap][i].update();\r\n                }\r\n            }\r\n            //MONSTER\r\n            for(int i = 0; i < monster[1].length; i++){\r\n                if(monster[currentMap][i] != null){\r\n                    if(monster[currentMap][i].alive && !monster[currentMap][i].dying){\r\n                        monster[currentMap][i].update();\r\n                    }\r\n                    if(!monster[currentMap][i].alive){\r\n                        monster[currentMap][i].checkDrop();\r\n                        monster[currentMap][i] = null;\r\n                    }\r\n                }\r\n            }\r\n            //PROJECTILE\r\n            for(int i = 0; i < projectileList.size(); i++){\r\n                if(projectileList.get(i) != null){\r\n                    if(projectileList.get(i).alive){\r\n                        projectileList.get(i).update();\r\n                    }\r\n                    if(!projectileList.get(i).alive){\r\n                        projectileList.remove(i);\r\n                    }\r\n                }\r\n            }\r\n            //PARTICLE\r\n            for(int i = 0; i < particleList.size(); i++){\r\n                if(particleList.get(i) != null){\r\n                    if(particleList.get(i).alive){\r\n                        particleList.get(i).update();\r\n                    }\r\n                    if(!particleList.get(i).alive){\r\n                        particleList.remove(i);\r\n                    }\r\n                }\r\n            }\r\n            for(int i = 0; i < iTile[1].length; i++){\r\n                if(iTile[currentMap][i] != null){\r\n                    iTile[currentMap][i].update();\r\n                }\r\n            }\r\n        }\r\n        if(gameState == pauseState){\r\n            //nothing yet\r\n        }\r\n    }\r\n    public void drawToTempScreen(){\r\n        //DEBUG\r\n        long drawStart = 0;\r\n        if(keyH.showDebugText){\r\n            drawStart = System.nanoTime();\r\n        }\r\n\r\n        //TITLE SCREEN\r\n        if(gameState == titleState){\r\n            ui.draw(g2);\r\n        }\r\n        //OTHERS\r\n        else {\r\n            // Draw tiles\r\n            tileM.draw(g2);\r\n\r\n            //INTERACTIVE TILE\r\n            for(int i = 0; i < iTile[1].length; i++){\r\n                if(iTile[currentMap][i] != null){\r\n                    iTile[currentMap][i].draw(g2);\r\n                }\r\n            }\r\n\r\n            //ADD ENTITIES\r\n            entityList.add(player);\r\n            //NPC\r\n            for(int i = 0; i < npc[1].length; i++){\r\n                if(npc[currentMap][i] != null) {\r\n                    entityList.add(npc[currentMap][i]);\r\n                }\r\n            }\r\n            //OBJECT\r\n            for(int i = 0; i < obj[1].length; i++){\r\n                if(obj[currentMap][i] != null) {\r\n                    entityList.add(obj[currentMap][i]);\r\n                }\r\n            }\r\n            //MONSTER\r\n            for(int i = 0; i < monster[1].length; i++){\r\n                if(monster[currentMap][i] != null) {\r\n                    entityList.add(monster[currentMap][i]);\r\n                }\r\n            }\r\n            //PROJECTILE\r\n            for(int i = 0; i < projectileList.size(); i++){\r\n                if(projectileList.get(i) != null) {\r\n                    entityList.add(projectileList.get(i));\r\n                }\r\n            }\r\n\r\n            //PARTICLE\r\n            for(int i = 0; i < particleList.size(); i++){\r\n                if(particleList.get(i) != null) {\r\n                    entityList.add(particleList.get(i));\r\n                }\r\n            }\r\n\r\n            //SORT\r\n            Collections.sort(entityList, new Comparator<Entity>() {\r\n                @Override\r\n                public int compare(Entity e1, Entity e2) {\r\n\r\n                    return Integer.compare(e1.worldY, e2.worldY);\r\n                }\r\n            });\r\n\r\n            //DRAW ENTITY\r\n            for(int i = 0; i < entityList.size(); i++){\r\n                entityList.get(i).draw(g2);\r\n            }\r\n\r\n            //EMPTY ENTITY LIST\r\n            entityList.clear();\r\n\r\n            //UI\r\n            ui.draw(g2);\r\n        }\r\n\r\n        //DEBUG\r\n        if(keyH.showDebugText){\r\n            long drawEnd = System.nanoTime();\r\n            long passed = drawEnd - drawStart;\r\n\r\n            g2.setFont(new Font(\"Arial\", Font.PLAIN,20));\r\n            g2.setColor(Color.white);\r\n            int x = 10;\r\n            int y = 400;\r\n            int lineHeight = 20;\r\n\r\n            g2.drawString(\"WorldX \" + player.worldX,x,y); y+=lineHeight;\r\n            g2.drawString(\"WorldY \" + player.worldY,x,y); y+=lineHeight;\r\n            g2.drawString(\"Col \" + (player.worldX + player.solidArea.x)/tileSize,x,y); y+=lineHeight;\r\n            g2.drawString(\"Row \" +(player.worldY + player.solidArea.y)/tileSize,x,y); y+=lineHeight;\r\n            g2.drawString(\"Draw Time: \" + passed, x, y);\r\n            System.out.println(\"Draw Time: \" + passed);\r\n        }\r\n    }\r\n    public void drawToScreen(){\r\n        Graphics g = getGraphics();\r\n        g.drawImage(tempScreen,0,0, screenWidth2, screenHeight2,null);\r\n        g.dispose();\r\n    }\r\n    public void playMusic(int i){\r\n        music.setFile(i);\r\n        music.play();\r\n        music.loop();\r\n    }\r\n    public void stopMusic(){\r\n        music.stop();\r\n    }\r\n    //SE =  sound effect\r\n    public void playSE(int i){\r\n        SE.setFile(i);\r\n        SE.play();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/GamePanel.java b/src/DannyGermanSimulator/GamePanel.java
---- a/src/DannyGermanSimulator/GamePanel.java	(revision 0607e936304636d45cf35f79e196e06786a1d2e4)
-+++ b/src/DannyGermanSimulator/GamePanel.java	(date 1733038605875)
-@@ -25,13 +25,13 @@
-     public final int screenHeight = tileSize * maxScreenRow;
- 
-     //World Settings
--    public final int maxWorldCol = 250;
--    public final int maxWorldRow = 250;
-+    public final int maxWorldCol = 50;
-+    public final int maxWorldRow = 50;
-     public final int worldWidth = tileSize * maxWorldCol;
-     public final int worldHeight = tileSize * maxWorldRow;
-     public boolean fullScreenOn = false;
-     public final int maxMap = 10;
--    public int currentMap = 3;
-+    public int currentMap = 1;
- 
-     // FPS
-     int FPS = 60;
-@@ -74,6 +74,8 @@
-     public final int characterState = 4;
-     public final int optionState = 5;
-     public final int gameOverState = 6;
-+    public final int transitionState = 7;
-+    public final int tradeState = 8;
- 
- 
-     public GamePanel() {
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_22\" default=\"true\" project-jdk-name=\"openjdk-22\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision 0607e936304636d45cf35f79e196e06786a1d2e4)
-+++ b/.idea/misc.xml	(date 1733038816585)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
-     <output url="file://$PROJECT_DIR$/out" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a32925c1-4475-423e-9d0a-63cec802cec7\" name=\"Changes\" comment=\"Added Options Screen and Save Function for Settings (like music and fullscreen)&#10;-press ESC key to open Options Key.&#10;-auto save when change is made in settings&#10;&#10;&#10;-need to optimize game and fix screen scaling\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/tile/TileManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/tile/TileManager.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Ivann0730&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Ivann0730/JAVA-Capstone&quot;,\r\n    &quot;accountId&quot;: &quot;705a8d6c-afc5-4e9e-9e18-62c5a83a2412&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nnWzBP863UmRtcohf237tupeGe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/JAVA2/JAVA-Capstone/res/Spawn&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\Spawn\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\Font\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\Tiles_Ren\" />\r\n      <recent name=\"C:\\Users\\Ivann James\\IdeaProjects\\JavaCapstone\\res\\tiles\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\maps\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\sound\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\tiles_interactive\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\objects\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\projectile\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"DannyGermanSimulator.Main\" />\r\n      <module name=\"JavaCapstone\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"DannyGermanSimulator.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.21829.142\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-IU-242.21829.142\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a32925c1-4475-423e-9d0a-63cec802cec7\" name=\"Changes\" comment=\"\" />\r\n      <created>1729609583050</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729609583050</updated>\r\n      <workItem from=\"1729609584259\" duration=\"1746000\" />\r\n      <workItem from=\"1729680806979\" duration=\"428000\" />\r\n      <workItem from=\"1729684639502\" duration=\"1653000\" />\r\n      <workItem from=\"1729686317486\" duration=\"14463000\" />\r\n      <workItem from=\"1732976036006\" duration=\"79000\" />\r\n      <workItem from=\"1732986571824\" duration=\"671000\" />\r\n      <workItem from=\"1733022424350\" duration=\"251000\" />\r\n      <workItem from=\"1733022688569\" duration=\"8342000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"partial\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729688105013</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729688105013</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Start of making the map - Date:October 23, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729702904448</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729702904448</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Start of making the map - Date:October 23, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729753216851</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729753216851</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Collision Implemented - Date:October 24, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729757020446</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729757020446</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Objects Implemented (but not yet interactable) - Date:October 24, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729770452886</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729770452886</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Objects Implemented (but not yet interactable) - Date:October 24, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729782495355</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729782495356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Objects Implemented (mana and coins)&#10;check console for counter (alt tab when object is picked up)&#10;(note: still needs optimization)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729935946399</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729935946399</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Sounds Implemented &#10;added coin sound effect but cannot be heard well due to bg music. also more items added and added HP and Boots to add speed&#10;(note: still needs optimization)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729946281820</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729946281820</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"UI Implemented&#10;-playtime is now shown&#10;-new text appears when object is picked up&#10;-fixed the collision values for player&#10;//to fix object collision values&#10;(note: still needs optimization)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729951164710</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729951164710</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Improved Rendering Performance&#10;-press T to show draw time&#10;(before optimization draw time was 600000 - 800000 or 0.006 - 0.008 seconds, after optimization it is now 0.001 average)&#10;-cleaned up code a little bit&#10;-added utility class for scaling image for better performance\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730025909842</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730025909842</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Added NPC class&#10;-new radish npc (has simple AI implemented to randomize walk direction)&#10;-hit box values need to be fixed&#10;-cleaned up code a little bit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730461511053</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730461511053</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Added Dialogue&#10;-to talk with npc, collide with npc and press ENTER key&#10;-Added font&#10;-still need to fix hit box values\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730547117525</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730547117525</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Added Title Screen&#10;-classes can be replaced with difficulty choices like ease, medium, or hard&#10;-choosing a class will do nothing atm&#10;-choosing load game will do nothing atm&#10;-still need to fix hit box values\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730559603267</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730559603267</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Added HUD Life for player&#10;-added new key handler for ESCAPE key now used to pause, and when in paused state press ENTER for easy game exit&#10;-still need to fix hit box values\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730994100820</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730994100820</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Added EVENTS&#10;-Press F for Heal near the water &#10;-still need to fix hit box values\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731977828270</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731977828270</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Fixed Rendering&#10;-still need to fix hit box values for npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731983041241</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731983041241</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Fixed Rendering&#10;-still need to fix hit box values for npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732021368768</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732021368768</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Fixed Rendering&#10;-still need to fix hit box values for npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732021394998</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732021394998</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Added Monster Class&#10;-when player is damaged player becomes immune for 1 second and then can be damaged again after&#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732030736720</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732030736720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Added Attack animation and attack damage&#10;-heil sprite for load screen display&#10;-when monster is damaged, becomes immune for 1 second and then can be damaged again after&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732122472906</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732122472906</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Added Monster Health Bar &amp; Death Animation&#10;-added swing sword sound effect, and others&#10;-added passive AI for bat monster&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732285525251</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732285525251</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Added Character Status UI&#10;-Press P to access character UI&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732319938899</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732319938899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Added Scrolling Message, Leveling Up, Damage Calculation&#10;-Press P to access character UI&#10;- when healing using the healing pool, the monsters respawn&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732335582626</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732335582626</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Added Inventory&#10;-Press P to access inventory&#10;-WASD keys to move inventory cursor&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732357507154</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732357507154</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Added Equipables &amp; Usable Items&#10;-Press P to access inventory and enter key to switch or use items&#10;-added new axe weapon, has more damage than sword but less range (using heil sprite for now)&#10;-WASD keys to move inventory cursor&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732374226539</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732374226539</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Added Projectiles&#10;-Press F to shoot projectile&#10;-added new fireball, still need to implement mana&#10;&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732428089291</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732428089291</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"Added Monster Projectiles and Mana&#10;-Press F to shoot projectile&#10;-added new fireball&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732439380498</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732439380498</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Added Item Drops&#10;-change key to interact to E&#10;-Press F to shoot projectile&#10;-added new fireball&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to fix item drops solid area&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732460016948</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732460016948</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Added Breaking Objects &#10;-need axe to cut down tree&#10;-added interactive Tile dry tree and trunk&#10;-Fixed most hit boxes for entities and objects&#10;&#10;-need to optimize game and fix screen scaling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732544946720</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732544946720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Added Particles&#10;-added some particles flying when you cut a tree or hit a monster with your fireball.&#10;&#10;-need to optimize game and fix screen scaling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732550849229</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732550849229</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Added Options Screen and Save Function for Settings (like music and fullscreen)&#10;-press ESC key to open Options Key.&#10;-auto save when change is made in settings&#10;&#10;&#10;-need to optimize game and fix screen scaling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732808634100</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732808634100</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"32\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Objects Implemented (but not yet interactable) - Date:October 24, 2024\" />\r\n    <MESSAGE value=\"Objects Implemented (mana and coins)&#10;check console for counter (alt tab when object is picked up)&#10;(note: still needs optimization)\" />\r\n    <MESSAGE value=\"Sounds Implemented &#10;added coin sound effect but cannot be heard well due to bg music&#10;(note: still needs optimization)\" />\r\n    <MESSAGE value=\"Sounds Implemented &#10;added coin sound effect but cannot be heard well due to bg music. also more items added and added HP and Boots to add speed&#10;(note: still needs optimization)\" />\r\n    <MESSAGE value=\"UI Implemented&#10;-playtime is now shown&#10;-new text appears when object is picked up&#10;-fixed the collision values for player&#10;//to fix object collision values&#10;(note: still needs optimization)\" />\r\n    <MESSAGE value=\"Improved Rendering Performance&#10;-press T to show draw time&#10;(before optimization draw time was 600000 - 800000 or 0.006 - 0.008 seconds, after optimization it is now 0.001 average)&#10;-cleaned up code a little bit&#10;-added utility class for scaling image for better performance\" />\r\n    <MESSAGE value=\"Added NPC class&#10;-new radish npc (has simple AI implemented to randomize walk direction)&#10;-hit box values need to be fixed&#10;-cleaned up code a little bit\" />\r\n    <MESSAGE value=\"Added Dialogue&#10;-to talk with npc, collide with npc and press ENTER key&#10;-Added font&#10;-still need to fix hit box values\" />\r\n    <MESSAGE value=\"Added Title Screen&#10;-classes can be replaced with difficulty choices like ease, medium, or hard&#10;-choosing a class will do nothing atm&#10;-choosing load game will do nothing atm&#10;-still need to fix hit box values\" />\r\n    <MESSAGE value=\"Added HUD Life for player&#10;-added new key handler for ESCAPE key now used to pause, and when in paused state press ENTER for easy game exit&#10;-still need to fix hit box values\" />\r\n    <MESSAGE value=\"Added EVENTS&#10;-Press F for Heal near the water &#10;-still need to fix hit box values\" />\r\n    <MESSAGE value=\"Fixed Rendering&#10;-still need to fix hit box values for npc\" />\r\n    <MESSAGE value=\"Added Monster Class&#10;-when player is damaged player becomes immune for 1 second and then can be damaged again after&#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Attack animation and attack damage&#10;-heil sprite for load screen display&#10;-when monster is damaged, becomes immune for 1 second and then can be damaged again after&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Monster Health Bar &amp; Death Animation&#10;-added swing sword sound effect, and others&#10;-added passive AI for bat monster&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Character Status UI&#10;-Press P to access character UI&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Scrolling Message, Leveling Up, Damage Calculation&#10;-Press P to access character UI&#10;- when healing using the healing pool, the monsters respawn&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Inventory&#10;-Press P to access inventory&#10;-WASD keys to move inventory cursor&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Equipables &amp; Usable Items&#10;-Press P to access inventory and enter key to switch or use items&#10;-added new axe weapon, has more damage than sword but less range (using heil sprite for now)&#10;-WASD keys to move inventory cursor&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Projectiles&#10;-Press F to shoot projectile&#10;-added new fireball, still need to implement mana&#10;&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Monster Projectiles and Mana&#10;-Press F to shoot projectile&#10;-added new fireball&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Item Drops&#10;-change key to interact to E&#10;-Press F to shoot projectile&#10;-added new fireball&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to fix item drops solid area&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Breaking Objects &#10;-need axe to cut down tree&#10;-added interactive Tile dry tree and trunk&#10;-Fixed most hit boxes for entities and objects&#10;&#10;-need to optimize game and fix screen scaling\" />\r\n    <MESSAGE value=\"Added Particles&#10;-added some particles flying when you cut a tree or hit a monster with your fireball.&#10;&#10;-need to optimize game and fix screen scaling\" />\r\n    <MESSAGE value=\"Added Options Screen and Save Function for Settings (like music and fullscreen)&#10;-press ESC key to open Options Key.&#10;-auto save when change is made in settings&#10;&#10;&#10;-need to optimize game and fix screen scaling\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added Options Screen and Save Function for Settings (like music and fullscreen)&#10;-press ESC key to open Options Key.&#10;-auto save when change is made in settings&#10;&#10;&#10;-need to optimize game and fix screen scaling\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalArgumentException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 0607e936304636d45cf35f79e196e06786a1d2e4)
-+++ b/.idea/workspace.xml	(date 1733039121131)
-@@ -5,8 +5,15 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="a32925c1-4475-423e-9d0a-63cec802cec7" name="Changes" comment="Added Options Screen and Save Function for Settings (like music and fullscreen)&#10;-press ESC key to open Options Key.&#10;-auto save when change is made in settings&#10;&#10;&#10;-need to optimize game and fix screen scaling">
-+      <change afterPath="$PROJECT_DIR$/src/Entity/NPC_Merchant.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/AssetSetter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/AssetSetter.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/EventHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/EventHandler.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/GamePanel.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/KeyHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/KeyHandler.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/UI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/UI.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/Entity/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/Player.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/tile/TileManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/tile/TileManager.java" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-Index: src/DannyGermanSimulator/AssetSetter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport Entity.NPC_radish;\r\nimport monster.MON_Bat;\r\nimport object.*;\r\nimport tile_interactive.IT_DryTree;\r\n\r\npublic class AssetSetter {\r\n    GamePanel gp;\r\n\r\n    public AssetSetter(GamePanel gp){\r\n        this.gp = gp;\r\n    }\r\n    public void setObject(){\r\n        int mapNum = 0;\r\n        int i = 0;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 26;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 36;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 7;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 28;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 7;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 41;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 39;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 5;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Coin(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 40;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 16;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Axe(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 33;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 35;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Shield_Blue(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 36;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 13;\r\n        i++;\r\n        gp.obj[mapNum][i] = new OBJ_Potion_Red(gp);\r\n        gp.obj[mapNum][i].worldX = gp.tileSize * 35;\r\n        gp.obj[mapNum][i].worldY = gp.tileSize * 13;\r\n\r\n    }\r\n    public void setNPC(){\r\n        int mapNum = 0;\r\n        int i = 0;\r\n        gp.npc[mapNum][i] = new NPC_radish(gp);\r\n        gp.npc[mapNum][i].worldX = gp.tileSize * 20;\r\n        gp.npc[mapNum][i].worldY = gp.tileSize * 20;\r\n        i++;\r\n\r\n\r\n        mapNum = 1;\r\n        gp.npc[mapNum][i] = new NPC_radish(gp);\r\n        gp.npc[mapNum][i].worldX = gp.tileSize * 12;\r\n        gp.npc[mapNum][i].worldY = gp.tileSize * 7;\r\n        i++;\r\n    }\r\n    public void setMonster(){\r\n        int mapNum = 0;\r\n        int i = 0;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 36;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 13;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 39;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 12;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 27;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 13;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 35;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 12;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 28;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 15;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 42;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 12;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 39;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 10;\r\n        i++;\r\n        gp.monster[mapNum][i] = new MON_Bat(gp);\r\n        gp.monster[mapNum][i].worldX = gp.tileSize * 30;\r\n        gp.monster[mapNum][i].worldY = gp.tileSize * 12;\r\n        i++;\r\n    }\r\n    public void setInteractiveTile() {\r\n        int mapNum = 0;\r\n        int i = 0;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,18,17); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,19,17); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,20,17); i++;\r\n\r\n\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,5,26); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,6,26); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,7,26); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,8,26); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,5,29); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,6,29); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,7,29); i++;\r\n        gp.iTile[mapNum][i] = new IT_DryTree(gp,8,29); i++;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/AssetSetter.java b/src/DannyGermanSimulator/AssetSetter.java
---- a/src/DannyGermanSimulator/AssetSetter.java	(revision 0607e936304636d45cf35f79e196e06786a1d2e4)
-+++ b/src/DannyGermanSimulator/AssetSetter.java	(date 1733038464586)
-@@ -1,5 +1,6 @@
- package DannyGermanSimulator;
- 
-+import Entity.NPC_Merchant;
- import Entity.NPC_radish;
- import monster.MON_Bat;
- import object.*;
-@@ -57,7 +58,8 @@
- 
- 
-         mapNum = 1;
--        gp.npc[mapNum][i] = new NPC_radish(gp);
-+        i = 0;
-+        gp.npc[mapNum][i] = new NPC_Merchant(gp);
-         gp.npc[mapNum][i].worldX = gp.tileSize * 12;
-         gp.npc[mapNum][i].worldY = gp.tileSize * 7;
-         i++;
-Index: src/DannyGermanSimulator/UI.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport Entity.Entity;\r\nimport object.OBJ_Heart;\r\nimport object.OBJ_Mana;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.text.DecimalFormat;\r\nimport java.util.ArrayList;\r\n\r\npublic class UI {\r\n    GamePanel gp;\r\n    Graphics2D g2;\r\n    Font oldSchool;\r\n    BufferedImage heart_full, heart_half, heart_blank, crystal_full, crystal_blank;\r\n    public boolean messageOn = false;\r\n    ArrayList<String> message = new ArrayList<>();\r\n    ArrayList<Integer> messageCounter = new ArrayList<>();\r\n    public boolean playerDead = false;\r\n    public String currentDialogue = \"\";\r\n    double playTime;\r\n    public int commandNum = 0;\r\n    public int titleScreenState = 0;\r\n    DecimalFormat dFormat = new DecimalFormat(\"0.00\");\r\n    public int slotCol = 0, slotRow = 0;\r\n    int subState = 0;\r\n\r\n    public UI(GamePanel gp){\r\n        this.gp = gp;\r\n\r\n        try {\r\n            InputStream is = getClass().getResourceAsStream(\"/Font/OldSchoolAdventures-42j9.ttf\");\r\n            oldSchool = Font.createFont(Font.TRUETYPE_FONT, is);\r\n        } catch (FontFormatException | IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        //CREATE HUD OBJECTS\r\n        Entity heart = new OBJ_Heart(gp);\r\n        heart_full = heart.image;\r\n        heart_half = heart.image2;\r\n        heart_blank = heart.image3;\r\n        Entity crystal = new OBJ_Mana(gp);\r\n        crystal_full = crystal.image;\r\n        crystal_blank = crystal.image2;\r\n    }\r\n    public void addMessage(String text){\r\n        message.add(text);\r\n        messageCounter.add(0);\r\n    }\r\n    public void draw(Graphics2D g2){\r\n        this.g2 = g2;\r\n\r\n        g2.setFont(oldSchool);\r\n        //for anti-alias font\r\n//        g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\r\n        g2.setColor(Color.white);\r\n        //TITLE STATE\r\n        if(gp.gameState == gp.titleState){\r\n            drawTitleScreen();\r\n        }\r\n        //PLAY STATE\r\n        if(gp.gameState == gp.playState){\r\n            //do pLay state stuff\r\n            drawPlayerLife();\r\n            drawMessage();\r\n        }\r\n        //PAUSE STATE\r\n        if(gp.gameState == gp.pauseState){\r\n            drawPausedScreen();\r\n            drawPlayerLife();\r\n        }\r\n        //DIALOGUE STATE\r\n        if(gp.gameState == gp.dialogueState){\r\n            drawPlayerLife();\r\n            drawDialogueScreen();\r\n        }\r\n        //CHARACTER STATE\r\n        if(gp.gameState == gp.characterState){\r\n            drawCharacterScreen();\r\n            drawInventory();\r\n        }\r\n        //OPTION STATE\r\n        if(gp.gameState == gp.optionState){\r\n            drawOptionScreen();\r\n        }\r\n        //GAME OVER STATE\r\n        if(gp.gameState == gp.gameOverState){\r\n            drawGameOverScreen();\r\n        }\r\n    }\r\n    public void drawPlayerLife(){\r\n//        gp.player.life = 3;\r\n        int x = gp.tileSize/2;\r\n        int y = gp.tileSize/2;\r\n        int i = 0;\r\n        //draw max heart\r\n        while(i < gp.player.maxLife/2){\r\n            g2.drawImage(heart_blank, x, y, null);\r\n            i++;\r\n            x += gp.tileSize;\r\n        }\r\n        //reset\r\n        x = gp.tileSize/2;\r\n        y = gp.tileSize/2;\r\n        i = 0;\r\n        //draw current heart\r\n        while(i < gp.player.life){\r\n            g2.drawImage(heart_half, x, y, null);\r\n            i++;\r\n            if(i < gp.player.life){\r\n                g2.drawImage(heart_full, x, y, null);\r\n            }\r\n            i++;\r\n            x += gp.tileSize;\r\n        }\r\n\r\n        //draw Max Mana\r\n        x = gp.tileSize/2;\r\n        y = gp.tileSize+64;\r\n        i = 0;\r\n        while(i < gp.player.maxMana){\r\n            g2.drawImage(crystal_blank, x, y, null);\r\n            i++;\r\n            x += gp.tileSize-32;\r\n        }\r\n\r\n        //draw mana\r\n        x = gp.tileSize/2;\r\n        y = gp.tileSize+64;\r\n        i = 0;\r\n        while(i < gp.player.mana){\r\n            g2.drawImage(crystal_full, x, y, null);\r\n            i++;\r\n            x += gp.tileSize-32;\r\n        }\r\n    }\r\n    public void drawMessage(){\r\n\r\n        int messageX = gp.tileSize, messageY = gp.tileSize * 4;\r\n        g2.setFont(g2.getFont().deriveFont(Font.BOLD,32));\r\n\r\n        for(int i = 0; i < message.size(); i++){\r\n            if(message.get(i)!=null){\r\n                g2.setColor(Color.black);\r\n                g2.drawString(message.get(i),messageX+2, messageY+2);\r\n                g2.setColor(Color.white);\r\n                g2.drawString(message.get(i),messageX, messageY);\r\n                //this is just counter++  but since arraylist we cant do it like that\r\n                int counter = messageCounter.get(i) + 1;\r\n                messageCounter.set(i,counter);\r\n                messageY += 50;\r\n\r\n                if(messageCounter.get(i) > 180){\r\n                    message.remove(i);\r\n                    messageCounter.remove(i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void drawTitleScreen(){\r\n        if(titleScreenState == 0){\r\n            g2.setColor(new Color(165,42,42));\r\n            g2.fillRect(0,0, gp.screenWidth, gp.screenHeight);\r\n            //TITLE NAME\r\n            g2.setFont(g2.getFont().deriveFont(Font.BOLD, 76F));\r\n            String text = \"DANNYGERMAN SIMULATOR\";\r\n            int x = getXForCenteredText(text);\r\n            int y = gp.tileSize*2;\r\n            //SHADOW FOR TEXT\r\n            g2.setColor(Color.black);\r\n            g2.drawString(text, x+5, y+5);\r\n            //MAIN COLOR TEXT\r\n            g2.setColor(Color.white);\r\n            g2.drawString(text, x, y);\r\n            //IMAGE\r\n            x = gp.screenWidth/2 - (gp.tileSize*2)/2;\r\n            y += gp.tileSize;\r\n            g2.drawImage(gp.player.idle, x, y, gp.tileSize*2, gp.tileSize*2, null);\r\n            //MENU\r\n            g2.setFont(g2.getFont().deriveFont(Font.BOLD, 38F));\r\n\r\n            text = \"NEW GAME\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize*3;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 0){\r\n                g2.drawString(\">\", x - gp.tileSize, y);\r\n            }\r\n            text = \"LOAD GAME\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 1){\r\n                g2.drawString(\">\", x - gp.tileSize, y);\r\n            }\r\n            text = \"QUIT GAME\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 2){\r\n                g2.drawString(\">\", x - gp.tileSize, y);\r\n            }\r\n        }\r\n        else if(titleScreenState == 1){\r\n            //Class Selection Screen\r\n            g2.setColor(new Color(0,0,0));\r\n            g2.fillRect(0,0, gp.screenWidth, gp.screenHeight);\r\n\r\n            g2.setColor(Color.white);\r\n            g2.setFont(g2.getFont().deriveFont(32F));\r\n\r\n            String text = \"Select Your Class\";\r\n            int x = getXForCenteredText(text);\r\n            int y = gp.tileSize*3;\r\n            g2.drawString(text, x, y);\r\n\r\n            text = \"Assasin\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 0){\r\n                g2.drawString(\">\", x- gp.tileSize,y);\r\n            }\r\n            text = \"Mage\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 1){\r\n                g2.drawString(\">\", x- gp.tileSize,y);\r\n            }\r\n            text = \"Tank\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 2){\r\n                g2.drawString(\">\", x- gp.tileSize,y);\r\n            }\r\n            text = \"Cancel\";\r\n            x = getXForCenteredText(text);\r\n            y += gp.tileSize*2;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 3){\r\n                g2.drawString(\">\", x- gp.tileSize,y);\r\n            }\r\n        }\r\n    }\r\n    public void drawPausedScreen(){\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN,80F));\r\n        String text = \"PAUSED\";\r\n        int x = getXForCenteredText(text);\r\n        int y = gp.screenHeight/2;\r\n        g2.drawString(text, x, y);\r\n    }\r\n    public void drawDialogueScreen(){\r\n        //WINDOW\r\n        int x = gp.tileSize * 2;\r\n        int y = gp.tileSize/2;\r\n        int width = gp.screenWidth - (gp.tileSize * 4);\r\n        int height = gp.tileSize * 4;\r\n        drawSubWindow(x,y,width,height);\r\n\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 40F));\r\n        x += gp.tileSize;\r\n        y += gp.tileSize;\r\n\r\n        for(String line : currentDialogue.split(\"\\n\")){\r\n            g2.drawString(line,x-32,y-32);\r\n            y+=48;\r\n        }\r\n    }\r\n    public void drawCharacterScreen(){\r\n        //CREATE A FRAME\r\n        final int frameX = gp.tileSize *2, frameY = gp.tileSize, frameWidth = gp.tileSize * 5, frameHeight = gp.tileSize * 7;\r\n        drawSubWindow(frameX, frameY, frameWidth,frameHeight);\r\n\r\n        //TEXT\r\n        g2.setColor(Color.white);\r\n        g2.setFont(g2.getFont().deriveFont(32F));\r\n        int textX = frameX + 32;\r\n        int textY = frameY + gp.tileSize/2;\r\n        final int lineHeight = 48;\r\n\r\n        //NAMES\r\n        g2.drawString(\"Level\",textX, textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Life\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Mana\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Strength\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Dexterity\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Attack\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Defense\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"EXP\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"To Next Level\",textX,textY);\r\n        textY += lineHeight;\r\n        g2.drawString(\"Coin\",textX,textY);\r\n        textY += lineHeight + 40;\r\n        g2.drawString(\"Weapon\",textX,textY);\r\n        textY += lineHeight + 70;\r\n        g2.drawString(\"Shield\",textX,textY);\r\n        textY += lineHeight;\r\n\r\n        // VALUES\r\n        int tailX = (frameX + frameWidth) - 30;\r\n        // RESET textY\r\n        textY = frameY + gp.tileSize/2;\r\n        String value;\r\n\r\n        value = String.valueOf(gp.player.level);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.life + \"/\" + gp.player.maxLife);\r\n        textX = getAlignToRightText(value,tailX) - 24;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.mana + \"/\" + gp.player.maxMana);\r\n        textX = getAlignToRightText(value,tailX) - 24;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.strength);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.dexterity);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.attack);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.defence);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.exp);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.nextLevelExp);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        value = String.valueOf(gp.player.coins);\r\n        textX = getAlignToRightText(value,tailX) - 64;\r\n        g2.drawString(value,textX,textY);\r\n        textY += lineHeight;\r\n\r\n        g2.drawImage(gp.player.currentWeapon.down1, tailX - gp.tileSize-32, textY - 30, null);\r\n        textY += gp.tileSize;\r\n        g2.drawImage(gp.player.currentShield.down1, tailX - gp.tileSize-32, textY - 30, null);\r\n    }\r\n    public void drawInventory(){\r\n        //FRAME\r\n        int frameX = gp.tileSize * 12, frameY = gp.tileSize, frameWidth = gp.tileSize * 6, frameHeight = gp.tileSize * 5;\r\n        drawSubWindow(frameX, frameY, frameWidth, frameHeight);\r\n\r\n        //SLOTS\r\n        final int slotXStart = frameX + 20, slotYStart = frameY + 20;\r\n        int slotX = slotXStart + 32, slotY = slotYStart + 32, slotSize = gp.tileSize+3;\r\n\r\n        //DRAW PLAYER ITEMS\r\n        for(int i = 0; i < gp.player.inventory.size(); i++){\r\n            //EQUIP CURSOR\r\n            if(gp.player.inventory.get(i) == gp.player.currentWeapon || gp.player.inventory.get(i) == gp.player.currentShield){\r\n                g2.setColor(new Color(240,190,90));\r\n                g2.fillRoundRect(slotX, slotY, gp.tileSize, gp.tileSize, 10, 10);\r\n            }\r\n            g2.drawImage(gp.player.inventory.get(i).down1,slotX,slotY,null);\r\n            slotX += slotSize;\r\n            if(i == 4 || i == 9 || i == 11){\r\n                slotX = slotXStart + 32;\r\n                slotY += slotSize;\r\n            }\r\n        }\r\n\r\n        //CURSOR\r\n        int cursorX = slotXStart + (slotSize * slotCol) + 32, cursorY = slotYStart + (slotSize * slotRow) + 32, cursorWidth = gp.tileSize, cursorHeight = gp.tileSize;\r\n        g2.setColor(Color.white);\r\n        g2.setStroke(new BasicStroke(5));\r\n        g2.drawRoundRect(cursorX,cursorY,cursorWidth,cursorHeight, 10,10);\r\n\r\n        //DESCRIPTION FRAME\r\n        int dFrameX = frameX, dFrameY = frameY + frameHeight, dFrameWidth = frameWidth, dFrameHeight = gp.tileSize*2 ;\r\n\r\n\r\n        //draw description text\r\n        int textX = dFrameX + 32, textY = dFrameY + 64;\r\n        g2.setFont(g2.getFont().deriveFont(28F));\r\n\r\n        int itemIndex = getItemIndexOnSlot();\r\n        if(itemIndex < gp.player.inventory.size()){\r\n            drawSubWindow(dFrameX,dFrameY,dFrameWidth,dFrameHeight);\r\n            for(String line : gp.player.inventory.get(itemIndex).description.split(\"\\n\")){\r\n                g2.drawString(line,textX,textY);\r\n                textY += 64;\r\n            }\r\n        }\r\n    }\r\n    public void drawGameOverScreen(){\r\n        g2.setColor(new Color(0,0,0,150));\r\n        g2.fillRect(0,0,gp.screenWidth, gp.screenHeight);\r\n\r\n        int x;\r\n        int y;\r\n        String text;\r\n        g2.setFont(g2.getFont().deriveFont(Font.BOLD, 110F));\r\n        text = \"You Died\";\r\n        //SHADOW\r\n        g2.setColor(Color.black);\r\n        x = getXForCenteredText(text);\r\n        y = gp.tileSize * 6;\r\n        g2.drawString(text,x,y);\r\n        //MAIN\r\n        g2.setColor(Color.red);\r\n        g2.drawString(text,x-4, y-4);\r\n        //RETRY\r\n        g2.setFont(g2.getFont().deriveFont(50F));\r\n        text = \"Retry\";\r\n        x = getXForCenteredText(text);\r\n        y += gp.tileSize * 3;\r\n        g2.drawString(text,x,y);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\",x-96,y);\r\n        }\r\n        //EXIT\r\n        text = \"Quit\";\r\n        x = getXForCenteredText(text);\r\n        y += gp.tileSize;\r\n        g2.drawString(text,x,y);\r\n        if(commandNum == 1){\r\n            g2.drawString(\">\",x-96,y);\r\n        }\r\n    }\r\n    public void drawOptionScreen(){\r\n        g2.setColor(Color.white);\r\n        g2.setFont(g2.getFont().deriveFont(32F));\r\n\r\n        //SUB WINDOW\r\n        int frameX = gp.tileSize *6, frameY = gp.tileSize, frameWidth = gp.tileSize * 8, frameHeight = gp.tileSize * 10;\r\n        drawSubWindow(frameX, frameY,frameWidth,frameHeight);\r\n\r\n        switch(subState){\r\n            case 0: options_top(frameX,frameY);break;\r\n            case 1: options_fullScreenNotification(frameX,frameY); break;\r\n            case 2: options_control(frameX,frameY);break;\r\n            case 3: options_endGameConfirmation(frameX,frameY);break;\r\n        }\r\n\r\n        gp.keyH.enterPressed = false;\r\n    }\r\n    public void options_top(int frameX, int frameY){\r\n        int textX, textY;\r\n\r\n        //TITLE\r\n        String text = \"Options\";\r\n        textX = getXForCenteredText(text);\r\n        textY = frameY + gp.tileSize;\r\n        g2.drawString(text, textX,textY);\r\n\r\n        //FULL SCREEN ON/OFF\r\n        textX = frameX + gp.tileSize;\r\n        textY +=gp.tileSize*2;\r\n        g2.drawString(\"Full Screen\",textX,textY);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\", textX-50,textY);\r\n            if(gp.keyH.enterPressed){\r\n                if(!gp.fullScreenOn){\r\n                    gp.fullScreenOn = true;\r\n                }\r\n                else if(gp.fullScreenOn){\r\n                    gp.fullScreenOn = false;\r\n                }\r\n                subState = 1;\r\n            }\r\n        }\r\n\r\n        //MUSIC\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"Music\",textX,textY);\r\n        if(commandNum == 1){\r\n            g2.drawString(\">\", textX-50,textY);\r\n        }\r\n\r\n        //SE\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"SE\",textX,textY);\r\n        if(commandNum == 2){\r\n            g2.drawString(\">\", textX-50,textY);\r\n        }\r\n\r\n        //CONTROL\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"Control\",textX,textY);\r\n        if(commandNum == 3){\r\n            g2.drawString(\">\", textX-50,textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 2;\r\n                commandNum = 0;\r\n            }\r\n        }\r\n\r\n        //END GAME\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"End Game\",textX,textY);\r\n        if(commandNum == 4){\r\n            g2.drawString(\">\", textX-50,textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 3;\r\n                commandNum = 0;\r\n            }\r\n        }\r\n\r\n        //BACK\r\n        textY += gp.tileSize*2;\r\n        g2.drawString(\"Back\",textX,textY);\r\n        if(commandNum == 5){\r\n            g2.drawString(\">\", textX-50,textY);\r\n            if(gp.keyH.enterPressed){\r\n                gp.gameState = gp.playState;\r\n                commandNum = 0;\r\n            }\r\n        }\r\n\r\n        //FULL SCREEN CHECK BOX\r\n        textX = (int) (frameX + gp.tileSize*4.5);\r\n        textY = frameY + gp.tileSize*3 - 48;\r\n        g2.setStroke(new BasicStroke(6));\r\n        g2.drawRect(textX,textY,48,48);\r\n        if(gp.fullScreenOn){\r\n            g2.fillRect(textX,textY,48,48);\r\n        }\r\n\r\n        //MUSIC\r\n        textY += gp.tileSize;\r\n        g2.drawRect(textX,textY,320,48);\r\n        int volumeWidth = 64 * gp.music.volumeScale;\r\n        g2.fillRect(textX,textY,volumeWidth, 48);\r\n\r\n        //SE\r\n        textY += gp.tileSize;\r\n        g2.drawRect(textX,textY,320,48);\r\n        volumeWidth = 64 * gp.SE.volumeScale;\r\n        g2.fillRect(textX,textY,volumeWidth, 48);\r\n\r\n        gp.config.saveConfig();\r\n    }\r\n    public void options_fullScreenNotification(int frameX, int frameY){\r\n        int textX = frameX + gp.tileSize;\r\n        int textY = frameY + gp.tileSize*3;\r\n\r\n        currentDialogue = \"The change will take effect \\nafter restarting the game.\";\r\n        for(String line : currentDialogue.split(\"\\n\")){\r\n            g2.drawString(line, textX, textY);\r\n            textY += 40;\r\n        }\r\n\r\n        //BACK\r\n        textY = frameY + gp.tileSize * 9;\r\n        g2.drawString(\"Back\", textX, textY);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\", textX-48, textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 0;\r\n            }\r\n        }\r\n    }\r\n    public void options_control(int frameX, int frameY){\r\n        int textX, textY;\r\n\r\n        //TITLE\r\n        String text = \"Control\";\r\n        textX = getXForCenteredText(text);\r\n        textY = frameY + gp.tileSize;\r\n        g2.drawString(text,textX,textY);\r\n\r\n        textX = frameX + gp.tileSize;\r\n        textY += gp.tileSize;\r\n        g2.drawString(\"Move\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Confirm/Attack\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Interact\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Shoot/Cast\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Inventory\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Pause\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"Options\",textX,textY);\r\n\r\n        textX = frameX + gp.tileSize * 6;\r\n        textY = frameY + gp.tileSize*2;\r\n        g2.drawString(\"WASD\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"ENTER\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"E\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"F\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"I\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"P\",textX,textY); textY += gp.tileSize;\r\n        g2.drawString(\"ESC\",textX,textY);\r\n\r\n        //BACK\r\n        textX = frameX + gp.tileSize;\r\n        textY = frameY + gp.tileSize*9;\r\n        g2.drawString(\"Back\",textX,textY);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\", textX-48, textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 0;\r\n                commandNum = 3;\r\n            }\r\n        }\r\n    }\r\n    public void options_endGameConfirmation(int frameX, int frameY){\r\n        int textX = frameX + gp.tileSize;\r\n        int textY = frameY + gp.tileSize;\r\n\r\n        currentDialogue = \"Quit the game and return to the \\ntitle screen\";\r\n\r\n        for(String line : currentDialogue.split(\"\\n\")){\r\n            g2.drawString(line, textX, textY);\r\n            textY += 40;\r\n        }\r\n\r\n        //YES\r\n        String text = \"Yes\";\r\n        textX = getXForCenteredText(text);\r\n        textY += gp.tileSize*3;\r\n        g2.drawString(text, textX, textY);\r\n        if(commandNum == 0){\r\n            g2.drawString(\">\", textX - 48, textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 0;\r\n                gp.gameState = gp.titleState;\r\n            }\r\n        }\r\n        //NO\r\n        text = \"No\";\r\n        textX = getXForCenteredText(text);\r\n        textY += gp.tileSize*3;\r\n        g2.drawString(text, textX, textY);\r\n        if(commandNum == 1){\r\n            g2.drawString(\">\", textX - 48, textY);\r\n            if(gp.keyH.enterPressed){\r\n                subState = 0;\r\n                commandNum = 4;\r\n            }\r\n        }\r\n    }\r\n    public int getItemIndexOnSlot(){\r\n        return slotCol + (slotRow * 5);\r\n    }\r\n    public void drawSubWindow(int x, int y, int width, int height){\r\n\r\n        Color c = new Color(0,0,0,210);\r\n        g2.setColor(c);\r\n        g2.fillRoundRect(x,y,width,height,35, 35);\r\n\r\n        c = new Color(255,255,255);\r\n        g2.setColor(c);\r\n        g2.setStroke(new BasicStroke(5));\r\n        g2.drawRoundRect(x+5,y+5,width-10,height-10,25, 25);\r\n    }\r\n    public int getXForCenteredText(String text){\r\n        int length =  (int)g2.getFontMetrics().getStringBounds(text,g2).getWidth();\r\n        return gp.screenWidth/2 - length/2;\r\n    }\r\n    public int getAlignToRightText(String text, int tailX){\r\n        int length =  (int)g2.getFontMetrics().getStringBounds(text,g2).getWidth();\r\n        int x = tailX - length;\r\n        return x;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/UI.java b/src/DannyGermanSimulator/UI.java
---- a/src/DannyGermanSimulator/UI.java	(revision 0607e936304636d45cf35f79e196e06786a1d2e4)
-+++ b/src/DannyGermanSimulator/UI.java	(date 1733038464594)
-@@ -25,8 +25,11 @@
-     public int commandNum = 0;
-     public int titleScreenState = 0;
-     DecimalFormat dFormat = new DecimalFormat("0.00");
--    public int slotCol = 0, slotRow = 0;
-+    public int playerSlotCol = 0, playerSlotRow = 0;
-+    public int npcSlotCol = 0, npcSlotRow = 0;
-     int subState = 0;
-+    int counter = 0;
-+    public Entity npc;
- 
-     public UI(GamePanel gp){
-         this.gp = gp;
-@@ -80,7 +83,7 @@
-         //CHARACTER STATE
-         if(gp.gameState == gp.characterState){
-             drawCharacterScreen();
--            drawInventory();
-+            drawInventory(gp.player, true);
-         }
-         //OPTION STATE
-         if(gp.gameState == gp.optionState){
-@@ -90,6 +93,14 @@
-         if(gp.gameState == gp.gameOverState){
-             drawGameOverScreen();
-         }
-+        //TRANSITION STATE
-+        if(gp.gameState == gp.transitionState){
-+            drawTransition();
-+        }
-+        //TRADE STATE
-+        if(gp.gameState == gp.tradeState){
-+            drawTradeScreen();
-+        }
-     }
-     public void drawPlayerLife(){
- //        gp.player.life = 3;
-@@ -256,9 +267,9 @@
-     }
-     public void drawDialogueScreen(){
-         //WINDOW
--        int x = gp.tileSize * 2;
-+        int x = gp.tileSize * 3;
-         int y = gp.tileSize/2;
--        int width = gp.screenWidth - (gp.tileSize * 4);
-+        int width = gp.screenWidth - (gp.tileSize * 6);
-         int height = gp.tileSize * 4;
-         drawSubWindow(x,y,width,height);
- 
-@@ -369,9 +380,24 @@
-         textY += gp.tileSize;
-         g2.drawImage(gp.player.currentShield.down1, tailX - gp.tileSize-32, textY - 30, null);
-     }
--    public void drawInventory(){
-+    public void drawInventory(Entity entity, boolean cursor){
-+        int frameX = 0, frameY = 0, frameWidth = 0, frameHeight = 0, slotCol = 0, slotRow = 0;
-+        if(entity == gp.player){
-+            frameX = gp.tileSize * 12;
-+            frameY = gp.tileSize;
-+            frameWidth = gp.tileSize * 6;
-+            frameHeight = gp.tileSize * 5;
-+            slotCol = playerSlotCol;
-+            slotRow = playerSlotRow;
-+        } else {
-+            frameX = gp.tileSize * 2;
-+            frameY = gp.tileSize;
-+            frameWidth = gp.tileSize * 6;
-+            frameHeight = gp.tileSize * 5;
-+            slotCol = npcSlotCol;
-+            slotRow = npcSlotRow;
-+        }
-         //FRAME
--        int frameX = gp.tileSize * 12, frameY = gp.tileSize, frameWidth = gp.tileSize * 6, frameHeight = gp.tileSize * 5;
-         drawSubWindow(frameX, frameY, frameWidth, frameHeight);
- 
-         //SLOTS
-@@ -379,13 +405,13 @@
-         int slotX = slotXStart + 32, slotY = slotYStart + 32, slotSize = gp.tileSize+3;
- 
-         //DRAW PLAYER ITEMS
--        for(int i = 0; i < gp.player.inventory.size(); i++){
-+        for(int i = 0; i < entity.inventory.size(); i++){
-             //EQUIP CURSOR
--            if(gp.player.inventory.get(i) == gp.player.currentWeapon || gp.player.inventory.get(i) == gp.player.currentShield){
-+            if(entity.inventory.get(i) == entity.currentWeapon || entity.inventory.get(i) == entity.currentShield){
-                 g2.setColor(new Color(240,190,90));
-                 g2.fillRoundRect(slotX, slotY, gp.tileSize, gp.tileSize, 10, 10);
-             }
--            g2.drawImage(gp.player.inventory.get(i).down1,slotX,slotY,null);
-+            g2.drawImage(entity.inventory.get(i).down1,slotX,slotY,null);
-             slotX += slotSize;
-             if(i == 4 || i == 9 || i == 11){
-                 slotX = slotXStart + 32;
-@@ -394,25 +420,27 @@
-         }
- 
-         //CURSOR
--        int cursorX = slotXStart + (slotSize * slotCol) + 32, cursorY = slotYStart + (slotSize * slotRow) + 32, cursorWidth = gp.tileSize, cursorHeight = gp.tileSize;
--        g2.setColor(Color.white);
--        g2.setStroke(new BasicStroke(5));
--        g2.drawRoundRect(cursorX,cursorY,cursorWidth,cursorHeight, 10,10);
-+        if(cursor){
-+            int cursorX = slotXStart + (slotSize * playerSlotCol) + 32, cursorY = slotYStart + (slotSize * playerSlotRow) + 32, cursorWidth = gp.tileSize, cursorHeight = gp.tileSize;
-+            g2.setColor(Color.white);
-+            g2.setStroke(new BasicStroke(5));
-+            g2.drawRoundRect(cursorX,cursorY,cursorWidth,cursorHeight, 10,10);
- 
--        //DESCRIPTION FRAME
--        int dFrameX = frameX, dFrameY = frameY + frameHeight, dFrameWidth = frameWidth, dFrameHeight = gp.tileSize*2 ;
-+            //DESCRIPTION FRAME
-+            int dFrameX = frameX, dFrameY = frameY + frameHeight, dFrameWidth = frameWidth, dFrameHeight = gp.tileSize*2 ;
- 
- 
--        //draw description text
--        int textX = dFrameX + 32, textY = dFrameY + 64;
--        g2.setFont(g2.getFont().deriveFont(28F));
-+            //draw description text
-+            int textX = dFrameX + 32, textY = dFrameY + 64;
-+            g2.setFont(g2.getFont().deriveFont(28F));
- 
--        int itemIndex = getItemIndexOnSlot();
--        if(itemIndex < gp.player.inventory.size()){
--            drawSubWindow(dFrameX,dFrameY,dFrameWidth,dFrameHeight);
--            for(String line : gp.player.inventory.get(itemIndex).description.split("\n")){
--                g2.drawString(line,textX,textY);
--                textY += 64;
-+            int itemIndex = getItemIndexOnSlot(slotCol, slotRow);
-+            if(itemIndex < entity.inventory.size()){
-+                drawSubWindow(dFrameX,dFrameY,dFrameWidth,dFrameHeight);
-+                for(String line : entity.inventory.get(itemIndex).description.split("\n")){
-+                    g2.drawString(line,textX,textY);
-+                    textY += 64;
-+                }
-             }
-         }
-     }
-@@ -661,7 +689,81 @@
-             }
-         }
-     }
--    public int getItemIndexOnSlot(){
-+    public void drawTransition(){
-+
-+        counter++;
-+        g2.setColor(new Color(0,0,0,counter*5));
-+        g2.fillRect(0,0,gp.screenWidth,gp.screenHeight);
-+
-+        if(counter == 50){
-+            counter = 0;
-+            gp.gameState = gp.playState;
-+            gp.currentMap = gp.eHandler.tempMap;
-+            gp.player.worldX = gp.tileSize * gp.eHandler.tempCol;
-+            gp.player.worldY = gp.tileSize * gp.eHandler.tempRow;
-+            gp.eHandler.previousEventX = gp.player.worldX;
-+            gp.eHandler.previousEventY = gp.player.worldY;
-+        }
-+    }
-+    public void drawTradeScreen(){
-+        switch (subState){
-+            case 0: trade_select(); break;
-+            case 1: trade_buy(); break;
-+            case 2: trade_sell(); break;
-+        }
-+        gp.keyH.enterPressed = false;
-+    }
-+    public void trade_select(){
-+
-+        drawDialogueScreen();
-+
-+        //Draw Window
-+        int x = gp.tileSize * 15;
-+        int y = gp.tileSize * 4;
-+        int width = gp.tileSize * 3;
-+        int height = (int)(gp.tileSize * 3.5);
-+        drawSubWindow(x,y,width,height);
-+
-+        //Draw Texts
-+        x += gp.tileSize;
-+        y += gp.tileSize;
-+        g2.drawString("Buy", x,y);
-+        if(commandNum == 0){
-+            g2.drawString(">", x-64, y);
-+            if(gp.keyH.enterPressed){
-+                subState = 1;
-+            }
-+        }
-+        y += gp.tileSize;
-+        g2.drawString("Sell", x,y);
-+        if(commandNum == 1){
-+            g2.drawString(">", x-64, y);
-+            if(gp.keyH.enterPressed){
-+                subState = 2;
-+            }
-+        }
-+        y += gp.tileSize;
-+        g2.drawString("Leave", x,y);
-+        if(commandNum == 2){
-+            g2.drawString(">", x-64, y);
-+            if(gp.keyH.enterPressed){
-+                commandNum = 0;
-+                gp.gameState = gp.dialogueState;
-+                currentDialogue = "Come again hehe";
-+            }
-+        }
-+    }
-+    public void trade_buy(){
-+
-+        //DRAW PLAYER INVENTORY
-+        drawInventory(gp.player,false);
-+        //DRAW NPC INVENTORY
-+        drawInventory(npc,true);
-+    }
-+    public void trade_sell(){
-+
-+    }
-+    public int getItemIndexOnSlot(int slotCol, int slotRow){
-         return slotCol + (slotRow * 5);
-     }
-     public void drawSubWindow(int x, int y, int width, int height){
-Index: src/DannyGermanSimulator/KeyHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\nimport java.sql.SQLOutput;\r\n\r\npublic class KeyHandler implements KeyListener{\r\n    GamePanel gp;\r\n    public boolean upPressed, downPressed, leftPressed, rightPressed, mountPressed, ePressed = false, enterPressed=false, shotKeyPressed;\r\n    public boolean isMountPressed = false;\r\n    boolean showDebugText = false;\r\n\r\n    public KeyHandler(GamePanel gp){\r\n        this.gp = gp;\r\n    }\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n        int code = e.getKeyCode();\r\n        //TITLE STATE\r\n        if(gp.gameState == gp.titleState){\r\n            titleState(code);\r\n        }\r\n        //PLAY STATE\r\n        else if(gp.gameState == gp.playState){\r\n            playState(code);\r\n        }\r\n        //PAUSE STATE\r\n        else if(gp.gameState == gp.pauseState){\r\n            pauseState(code);\r\n        }\r\n        //DIALOGUE STATE\r\n        else if(gp.gameState == gp.dialogueState){\r\n            dialogueState(code);\r\n        }\r\n        //CHARACTER STATE\r\n        else if(gp.gameState == gp.characterState){\r\n            characterState(code);\r\n        }\r\n        //OPTIONS STATE\r\n        else if(gp.gameState == gp.optionState){\r\n            optionState(code);\r\n        }\r\n        //GAME OVER STATE\r\n        else if(gp.gameState == gp.gameOverState){\r\n            gameOverState(code);\r\n        }\r\n    }\r\n    public void titleState(int code){\r\n        if(gp.ui.titleScreenState == 0){\r\n            if(code == KeyEvent.VK_W){\r\n                gp.ui.commandNum--;\r\n                gp.playSE(1);\r\n                if(gp.ui.commandNum < 0){\r\n                    gp.ui.commandNum = 2;\r\n                }\r\n            }\r\n            if(code == KeyEvent.VK_S){\r\n                gp.ui.commandNum++;\r\n                gp.playSE(1);\r\n                if(gp.ui.commandNum > 2){\r\n                    gp.ui.commandNum = 0;\r\n                }\r\n            }\r\n            if(code == KeyEvent.VK_ENTER){\r\n                //NEW GAME\r\n                if(gp.ui.commandNum == 0){\r\n                    gp.ui.titleScreenState = 1;\r\n                    gp.playMusic(3);\r\n                }\r\n                //LOAD GAME\r\n                if(gp.ui.commandNum == 1){\r\n                    //add later\r\n                }\r\n                //QUIT\r\n                if(gp.ui.commandNum == 2){\r\n                    System.exit(0);\r\n                }\r\n            }\r\n        }\r\n        //For Class Selection\r\n        else if(gp.ui.titleScreenState == 1){\r\n            if(code == KeyEvent.VK_W){\r\n                gp.ui.commandNum--;\r\n                gp.playSE(1);\r\n                if(gp.ui.commandNum < 0){\r\n                    gp.ui.commandNum = 3;\r\n                }\r\n            }\r\n            if(code == KeyEvent.VK_S){\r\n                gp.ui.commandNum++;\r\n                gp.playSE(1);\r\n                if(gp.ui.commandNum > 3){\r\n                    gp.ui.commandNum = 0;\r\n                }\r\n            }\r\n            if(code == KeyEvent.VK_ENTER){\r\n                if(gp.ui.commandNum == 0){\r\n                    System.out.println(\"Warrior\");\r\n                    gp.gameState = gp.playState;\r\n//                        gp.playMusic(3);\r\n                }\r\n                if(gp.ui.commandNum == 1){\r\n                    System.out.println(\"Mage\");\r\n                    gp.gameState = gp.playState;\r\n//                    gp.playMusic(1);\r\n                }\r\n                if(gp.ui.commandNum == 2){\r\n                    System.out.println(\"Tank\");\r\n                    gp.gameState = gp.playState;\r\n//                    gp.playMusic(1);\r\n                }\r\n                if(gp.ui.commandNum == 3){\r\n                    gp.ui.titleScreenState = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void playState(int code){\r\n        if(code == KeyEvent.VK_W){\r\n            upPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            downPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_A){\r\n            leftPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_D){\r\n            rightPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_X){\r\n            mountPressed = !mountPressed;\r\n        }\r\n        if(code == KeyEvent.VK_I){\r\n            gp.gameState = gp.characterState;\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            enterPressed=true;\r\n        }\r\n        if(code == KeyEvent.VK_E){\r\n            ePressed=true;\r\n        }\r\n        if(code == KeyEvent.VK_P){\r\n            gp.gameState = gp.pauseState;\r\n        }\r\n        if(code == KeyEvent.VK_F){\r\n           shotKeyPressed = true;\r\n        }\r\n        if(code == KeyEvent.VK_ESCAPE){\r\n            gp.gameState = gp.optionState;\r\n        }\r\n        //toggle debug\r\n        if(code == KeyEvent.VK_T){\r\n            if(!showDebugText){\r\n                showDebugText = true;\r\n            } else if(showDebugText){\r\n                showDebugText = false;\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_M){\r\n            switch (gp.currentMap){\r\n                case 0: gp.tileM.loadMap(\"/maps/testmap.txt\",0); break;\r\n                case 1: gp.tileM.loadMap(\"/maps/interior01.txt\",1); break;\r\n                case 2: gp.tileM.loadMap(\"/maps/Map-Spawn.txt.txt\",2); break;\r\n            }\r\n        }\r\n    }\r\n    public void pauseState(int code){\r\n        if(code == KeyEvent.VK_P){\r\n            gp.gameState = gp.playState;\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            System.exit(0);\r\n        }\r\n    }\r\n    public void dialogueState(int code){\r\n        if(code == KeyEvent.VK_ENTER){\r\n            gp.gameState = gp.playState;\r\n        }\r\n    }\r\n    public void characterState(int code){\r\n        if(code == KeyEvent.VK_ESCAPE || code == KeyEvent.VK_I){\r\n            gp.gameState = gp.playState;\r\n        }\r\n        if(code == KeyEvent.VK_W){\r\n            if(gp.ui.slotRow != 0){\r\n                gp.ui.slotRow--;\r\n                gp.playSE(1);\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_A){\r\n            if(gp.ui.slotCol != 0){\r\n                gp.ui.slotCol--;\r\n                gp.playSE(1);\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            if(gp.ui.slotRow != 3){\r\n                gp.ui.slotRow++;\r\n                gp.playSE(1);\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_D){\r\n            if(gp.ui.slotCol != 4){\r\n                gp.ui.slotCol++;\r\n                gp.playSE(1);\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            gp.player.selectItem();\r\n        }\r\n    }\r\n    public void optionState(int code){\r\n        if(code == KeyEvent.VK_ESCAPE){\r\n            gp.gameState = gp.playState;\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            enterPressed = true;\r\n        }\r\n        int maxCommandNum = 0;\r\n        switch(gp.ui.subState){\r\n            case 0: maxCommandNum = 5; break;\r\n            case 3: maxCommandNum = 1; break;\r\n        }\r\n        if(code == KeyEvent.VK_W){\r\n            gp.ui.commandNum--;\r\n            gp.playSE(1);\r\n            if(gp.ui.commandNum < 0){\r\n                gp.ui.commandNum = maxCommandNum;\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            gp.ui.commandNum++;\r\n            gp.playSE(1);\r\n            if(gp.ui.commandNum > 5){\r\n                gp.ui.commandNum = 0;\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_A){\r\n            if(gp.ui.subState == 0){\r\n                if(gp.ui.commandNum == 1 && gp.music.volumeScale > 0){\r\n                    gp.music.volumeScale--;\r\n                    gp.music.checkVolume();\r\n                    gp.playSE(1);\r\n                }\r\n                if(gp.ui.commandNum == 2 && gp.SE.volumeScale > 0){\r\n                    gp.SE.volumeScale--;\r\n                    gp.playSE(1);\r\n                }\r\n            }\r\n        }\r\n        if(code == KeyEvent.VK_D){\r\n            if(gp.ui.subState == 0){\r\n                if(gp.ui.commandNum == 1 && gp.music.volumeScale < 5) {\r\n                    gp.music.volumeScale++;\r\n                    gp.music.checkVolume();\r\n                    gp.playSE(1);\r\n                }\r\n                if(gp.ui.commandNum == 2 && gp.SE.volumeScale < 5){\r\n                    gp.SE.volumeScale++;\r\n                    gp.playSE(1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void gameOverState(int code){\r\n        if(code == KeyEvent.VK_W){\r\n            gp.ui.commandNum--;\r\n            if(gp.ui.commandNum < 0){\r\n                gp.ui.commandNum = 1;\r\n            }\r\n            gp.playSE(1);\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            gp.ui.commandNum++;\r\n            if(gp.ui.commandNum > 1){\r\n                gp.ui.commandNum = 0;\r\n            }\r\n            gp.playSE(1);\r\n        }\r\n        if(code == KeyEvent.VK_ENTER){\r\n            if(gp.ui.commandNum == 0){\r\n                gp.gameState = gp.playState;\r\n                gp.retry();\r\n                gp.playMusic(3);\r\n            } else if(gp.ui.commandNum == 1){\r\n                gp.gameState = gp.titleState;\r\n                gp.restart();\r\n            }\r\n        }\r\n    }\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n        int code = e.getKeyCode();\r\n        if(code == KeyEvent.VK_W){\r\n            upPressed = false;\r\n        }\r\n        if(code == KeyEvent.VK_S){\r\n            downPressed = false;\r\n        }\r\n        if(code == KeyEvent.VK_A){\r\n            leftPressed = false;\r\n        }\r\n        if(code == KeyEvent.VK_D){\r\n            rightPressed = false;\r\n        }\r\n        if(code == KeyEvent.VK_F){\r\n            shotKeyPressed = false;\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/KeyHandler.java b/src/DannyGermanSimulator/KeyHandler.java
---- a/src/DannyGermanSimulator/KeyHandler.java	(revision 0607e936304636d45cf35f79e196e06786a1d2e4)
-+++ b/src/DannyGermanSimulator/KeyHandler.java	(date 1733038605893)
-@@ -48,6 +48,10 @@
-         else if(gp.gameState == gp.gameOverState){
-             gameOverState(code);
-         }
-+        //TRADE STATE
-+        else if(gp.gameState == gp.tradeState){
-+            tradeState(code);
-+        }
-     }
-     public void titleState(int code){
-         if(gp.ui.titleScreenState == 0){
-@@ -186,33 +190,10 @@
-         if(code == KeyEvent.VK_ESCAPE || code == KeyEvent.VK_I){
-             gp.gameState = gp.playState;
-         }
--        if(code == KeyEvent.VK_W){
--            if(gp.ui.slotRow != 0){
--                gp.ui.slotRow--;
--                gp.playSE(1);
--            }
--        }
--        if(code == KeyEvent.VK_A){
--            if(gp.ui.slotCol != 0){
--                gp.ui.slotCol--;
--                gp.playSE(1);
--            }
--        }
--        if(code == KeyEvent.VK_S){
--            if(gp.ui.slotRow != 3){
--                gp.ui.slotRow++;
--                gp.playSE(1);
--            }
--        }
--        if(code == KeyEvent.VK_D){
--            if(gp.ui.slotCol != 4){
--                gp.ui.slotCol++;
--                gp.playSE(1);
--            }
--        }
-         if(code == KeyEvent.VK_ENTER){
-             gp.player.selectItem();
-         }
-+        playerInventory(code);
-     }
-     public void optionState(int code){
-         if(code == KeyEvent.VK_ESCAPE){
-@@ -293,6 +274,85 @@
-             }
-         }
-     }
-+    public void tradeState(int code){
-+        if(code == KeyEvent.VK_ENTER){
-+            enterPressed = true;
-+        }
-+        if(gp.ui.subState == 0){
-+            if(code == KeyEvent.VK_W){
-+                gp.ui.commandNum--;
-+                if(gp.ui.commandNum < 0){
-+                    gp.ui.commandNum = 2;
-+                }
-+                gp.playSE(1);
-+            }
-+            if(code == KeyEvent.VK_S){
-+                gp.ui.commandNum++;
-+                if(gp.ui.commandNum > 2){
-+                    gp.ui.commandNum = 0;
-+                }
-+                gp.playSE(1);
-+            }
-+        }
-+        if(gp.ui.subState == 1){
-+            npcInventory(code);
-+            if(code == KeyEvent.VK_ESCAPE){
-+                gp.ui.subState = 0;
-+            }
-+        }
-+    }
-+    public void playerInventory(int code){
-+        if(code == KeyEvent.VK_W){
-+            if(gp.ui.playerSlotRow != 0){
-+                gp.ui.playerSlotRow--;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_A){
-+            if(gp.ui.playerSlotCol != 0){
-+                gp.ui.playerSlotCol--;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_S){
-+            if(gp.ui.playerSlotRow != 3){
-+                gp.ui.playerSlotRow++;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_D){
-+            if(gp.ui.playerSlotCol != 4){
-+                gp.ui.playerSlotCol++;
-+                gp.playSE(1);
-+            }
-+        }
-+    }
-+    public void npcInventory(int code){
-+        if(code == KeyEvent.VK_W){
-+            if(gp.ui.npcSlotRow != 0){
-+                gp.ui.npcSlotRow--;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_A){
-+            if(gp.ui.npcSlotCol != 0){
-+                gp.ui.npcSlotCol--;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_S){
-+            if(gp.ui.npcSlotRow != 3){
-+                gp.ui.npcSlotRow++;
-+                gp.playSE(1);
-+            }
-+        }
-+        if(code == KeyEvent.VK_D){
-+            if(gp.ui.npcSlotCol != 4){
-+                gp.ui.npcSlotCol++;
-+                gp.playSE(1);
-+            }
-+        }
-+    }
-     @Override
-     public void keyReleased(KeyEvent e) {
-         int code = e.getKeyCode();
-Index: src/DannyGermanSimulator/EventHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package DannyGermanSimulator;\r\n\r\nimport java.awt.*;\r\n\r\npublic class EventHandler {\r\n\r\n    GamePanel gp;\r\n    EventRect eventRect[][][];\r\n\r\n    int previousEventX, previousEventY;\r\n    boolean canTouchEvent = true;\r\n\r\n    public EventHandler(GamePanel gp){\r\n        this.gp = gp;\r\n        eventRect = new EventRect[gp.maxMap][gp.maxWorldCol][gp.maxWorldRow];\r\n\r\n        int map = 0;\r\n        int col = 0;\r\n        int row = 0;\r\n\r\n        while(map < gp.maxMap && col < gp.maxWorldCol && row < gp.maxWorldRow){\r\n            eventRect[map][col][row] = new EventRect();\r\n            eventRect[map][col][row].x = 23;\r\n            eventRect[map][col][row].y = 23;\r\n            eventRect[map][col][row].width = 48;\r\n            eventRect[map][col][row].height = 48;\r\n            eventRect[map][col][row].eventRectDefaultX = eventRect[map][col][row].x;\r\n            eventRect[map][col][row].eventRectDefaultY = eventRect[map][col][row].y;\r\n\r\n            col++;\r\n            if(col == gp.maxWorldCol){\r\n                col = 0;\r\n                row++;\r\n                if(row == gp.maxWorldRow){\r\n                    row = 0;\r\n                    map++;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    public void checkEvent() {\r\n        //check player character is more than 1 tile away from the last event\r\n        int xDistance = Math.abs(gp.player.worldX - previousEventX);\r\n        int yDistance = Math.abs(gp.player.worldY - previousEventY);\r\n        int distance = Math.max(xDistance, yDistance);\r\n        if(distance > gp.tileSize){\r\n            canTouchEvent = true;\r\n        }\r\n\r\n        if(canTouchEvent){\r\n            if(hit(0,42,1,\"any\")) {damagePit(gp.dialogueState);}\r\n            else if(hit(0,13,26,\"any\")) {healingPool(gp.dialogueState);}\r\n            else if(hit(0,13,27,\"any\")) {healingPool(gp.dialogueState);}\r\n            else if(hit(0,13,28,\"any\")) {healingPool(gp.dialogueState);}\r\n            else if(hit(0,13,29,\"any\")) {healingPool(gp.dialogueState);}\r\n            else if(hit(0,23,15,\"any\")) {teleportInMap(gp.dialogueState);}\r\n            else if(hit(0,39,18,\"any\")) {teleport(1,12,13);}\r\n            else if(hit(1,12,13,\"any\")) {teleport(0,39,18);}\r\n        }\r\n    }\r\n    public boolean hit(int map,int col, int row, String reqDirection){\r\n        boolean hit = false;\r\n        if(map == gp.currentMap){\r\n            gp.player.solidArea.x = gp.player.worldX + gp.player.solidArea.x;\r\n            gp.player.solidArea.y = gp.player.worldY + gp.player.solidArea.y;\r\n            eventRect[map][col][row].x = col *gp.tileSize + eventRect[map][col][row].x;\r\n            eventRect[map][col][row].y = row *gp.tileSize + eventRect[map][col][row].y;\r\n\r\n            if(gp.player.solidArea.intersects(eventRect[map][col][row]) && !eventRect[map][col][row].eventDone){\r\n                if(gp.player.direction.contentEquals(reqDirection) || reqDirection.contentEquals(\"any\")){\r\n                    hit = true;\r\n\r\n                    previousEventX = gp.player.worldX;\r\n                    previousEventY = gp.player.worldY;\r\n                }\r\n            }\r\n\r\n            gp.player.solidArea.x = gp.player.solidAreaDefaultX;\r\n            gp.player.solidArea.y = gp.player.solidAreaDefaultY;\r\n            eventRect[map][col][row].x = eventRect[map][col][row].eventRectDefaultX;\r\n            eventRect[map][col][row].y = eventRect[map][col][row].eventRectDefaultY;\r\n        }\r\n        return hit;\r\n    }\r\n    public void damagePit(int gameState){\r\n        gp.gameState = gameState;\r\n        gp.playSE(6);\r\n        gp.ui.currentDialogue = \"You have fallen into a Pit\";\r\n        gp.player.life-=1;\r\n//        eventRect[col][row].eventDone = true;\r\n        canTouchEvent = false;\r\n    }\r\n    public void healingPool(int gameState){\r\n        if(gp.keyH.ePressed){\r\n            gp.gameState = gameState;\r\n            gp.ui.currentDialogue = \"You drank holy water, life restored\";\r\n            gp.player.life = gp.player.maxLife;\r\n            gp.player.mana = gp.player.maxMana;\r\n            gp.aSetter.setMonster();\r\n        }\r\n        gp.keyH.ePressed  = false;\r\n    }\r\n    public void teleport(int map, int col, int row){\r\n        gp.currentMap = map;\r\n        gp.player.worldX = gp.tileSize * col;\r\n        gp.player.worldY = gp.tileSize * row;\r\n        previousEventX = gp.player.worldX;\r\n        previousEventY = gp.player.worldY;\r\n        canTouchEvent = false;\r\n        gp.playSE(10);\r\n    }\r\n    public void teleportInMap(int gameState){\r\n        gp.gameState = gameState;\r\n        gp.player.attackCanceled = true;\r\n        gp.ui.currentDialogue = \"Teleport\";\r\n        gp.player.worldX = gp.tileSize*27;\r\n        gp.player.worldY = gp.tileSize*36;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/DannyGermanSimulator/EventHandler.java b/src/DannyGermanSimulator/EventHandler.java
---- a/src/DannyGermanSimulator/EventHandler.java	(revision 0607e936304636d45cf35f79e196e06786a1d2e4)
-+++ b/src/DannyGermanSimulator/EventHandler.java	(date 1733038605898)
-@@ -1,5 +1,7 @@
- package DannyGermanSimulator;
- 
-+import Entity.Entity;
-+
- import java.awt.*;
- 
- public class EventHandler {
-@@ -9,6 +11,7 @@
- 
-     int previousEventX, previousEventY;
-     boolean canTouchEvent = true;
-+    int tempMap, tempCol, tempRow;
- 
-     public EventHandler(GamePanel gp){
-         this.gp = gp;
-@@ -57,6 +60,7 @@
-             else if(hit(0,23,15,"any")) {teleportInMap(gp.dialogueState);}
-             else if(hit(0,39,18,"any")) {teleport(1,12,13);}
-             else if(hit(1,12,13,"any")) {teleport(0,39,18);}
-+            else if(hit(1,12,9,"up")) {speak(gp.npc[1][0]);}
-         }
-     }
-     public boolean hit(int map,int col, int row, String reqDirection){
-@@ -102,14 +106,22 @@
-         gp.keyH.ePressed  = false;
-     }
-     public void teleport(int map, int col, int row){
--        gp.currentMap = map;
--        gp.player.worldX = gp.tileSize * col;
--        gp.player.worldY = gp.tileSize * row;
--        previousEventX = gp.player.worldX;
--        previousEventY = gp.player.worldY;
-+
-+        gp.gameState = gp.transitionState;
-+        tempMap = map;
-+        tempCol = col;
-+        tempRow = row;
-         canTouchEvent = false;
-         gp.playSE(10);
-     }
-+    public void speak(Entity entity){
-+
-+        if(gp.keyH.enterPressed){
-+            gp.gameState = gp.dialogueState;
-+            gp.player.attackCanceled = true;
-+            entity.speak();
-+        }
-+    }
-     public void teleportInMap(int gameState){
-         gp.gameState = gameState;
-         gp.player.attackCanceled = true;
-Index: src/Entity/Player.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package Entity;\r\n\r\nimport DannyGermanSimulator.GamePanel;\r\nimport DannyGermanSimulator.KeyHandler;\r\nimport object.*;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.util.ArrayList;\r\n\r\npublic class Player extends Entity {\r\n    KeyHandler keyH;\r\n    public final int screenX;\r\n    public final int screenY;\r\n    int tempSpeed = 6;\r\n    int tempSpriteSpeedMultiplier = spriteSpeedMultiplier;\r\n    public boolean attackCanceled = false;\r\n    public ArrayList<Entity> inventory = new ArrayList<>();\r\n    public final int maxInventorySize = 20;\r\n\r\n    public Player(GamePanel gp, KeyHandler keyH) {\r\n        super(gp);\r\n        this.keyH = keyH;\r\n        this.screenX = gp.screenWidth/2 - (gp.tileSize/2);\r\n        this.screenY = gp.screenHeight/2 - (gp.tileSize/2);\r\n        solidArea = new Rectangle();\r\n\r\n        //TO FIX Optimize\r\n        solidArea.x=34;\r\n        solidArea.y=48;\r\n        solidAreaDefaultX = solidArea.x;\r\n        solidAreaDefaultY = solidArea.y;\r\n        solidArea.width=48;\r\n        solidArea.height=48;\r\n\r\n        setDefaultValues();\r\n        getPlayerImage();\r\n        getPlayerAttackImage();\r\n        setItems();\r\n    }\r\n\r\n    public void setDefaultValues() {\r\n        worldX = gp.tileSize * 22;\r\n        worldY = gp.tileSize * 230;\r\n//        worldX = gp.tileSize * 12;\r\n//        worldY = gp.tileSize * 13;\r\n        speed = 6; //also change tempSpeed\r\n        direction = \"down\";\r\n\r\n        //PLAYER STATUS\r\n        level = 1;\r\n        maxLife = 6;\r\n        life = maxLife;\r\n        maxMana = 8;\r\n        mana = maxMana;\r\n        //more damage\r\n        strength = 1;\r\n        //more defence\r\n        dexterity = 1;\r\n        exp = 0;\r\n        nextLevelExp = 5;\r\n        coins = 0;\r\n        currentWeapon = new OBJ_Sword_Normal(gp);\r\n        currentShield = new OBJ_Shield_Wood(gp);\r\n        projectile = new OBJ_Fireball(gp);\r\n        attack = getAttack();\r\n        defence = getDefence();\r\n    }\r\n    public void setDefaultPosition(){\r\n\r\n        worldX = gp.tileSize * 23;\r\n        worldY = gp.tileSize * 21;\r\n        direction = \"down\";\r\n    }\r\n    public void restoreLifeAndMan(){\r\n        life = maxLife;\r\n        mana = maxMana;\r\n        invincible = false;\r\n    }\r\n    public void setItems(){\r\n\r\n        inventory.clear();\r\n        inventory.add(currentWeapon);\r\n        inventory.add(currentShield);\r\n        inventory.add(new OBJ_Key(gp));\r\n    }\r\n    public int getAttack(){\r\n        attackArea =currentWeapon.attackArea;\r\n        return attack = strength * currentWeapon.attackValue;\r\n    }\r\n    public int getDefence(){\r\n        return defence = dexterity * currentShield.defenseValue;\r\n    }\r\n    public void getPlayerImage() {\r\n    //Diri ibutang nato atoang mga pictures for characters\r\n        idle = setUp(\"/player/heil\",gp.tileSize,gp.tileSize);\r\n        idleleft = setUp(\"/maxLevelArmor/Left1\",gp.tileSize,gp.tileSize);\r\n        idleright = setUp(\"/maxLevelArmor/Right1\",gp.tileSize,gp.tileSize);\r\n        idledown = setUp(\"/maxLevelArmor/Back1\",gp.tileSize,gp.tileSize);\r\n        idleup = setUp(\"/maxLevelArmor/Front1\",gp.tileSize,gp.tileSize);\r\n        up1 = setUp(\"/maxLevelArmor/Front2\",gp.tileSize,gp.tileSize);\r\n        up2 = setUp(\"/maxLevelArmor/Front3\",gp.tileSize,gp.tileSize);\r\n        up3 = setUp(\"/maxLevelArmor/Front2\",gp.tileSize,gp.tileSize);\r\n        up4 = setUp(\"/maxLevelArmor/Front4\",gp.tileSize,gp.tileSize);\r\n        down1 = setUp(\"/maxLevelArmor/Back1\",gp.tileSize,gp.tileSize);\r\n        down2 = setUp(\"/maxLevelArmor/Back2\",gp.tileSize,gp.tileSize);\r\n        down3 = setUp(\"/maxLevelArmor/Back3\",gp.tileSize,gp.tileSize);\r\n        down4 = setUp(\"/maxLevelArmor/Back4\",gp.tileSize,gp.tileSize);\r\n        left1 = setUp(\"/maxLevelArmor/Left1\",gp.tileSize,gp.tileSize);\r\n        left2 = setUp(\"/maxLevelArmor/Left2\",gp.tileSize,gp.tileSize);\r\n        left3 = setUp(\"/maxLevelArmor/Left3\",gp.tileSize,gp.tileSize);\r\n        left4 = setUp(\"/maxLevelArmor/Left4\",gp.tileSize,gp.tileSize);\r\n        right1 = setUp(\"/maxLevelArmor/Right1\",gp.tileSize,gp.tileSize);\r\n        right2 = setUp(\"/maxLevelArmor/Right2\",gp.tileSize,gp.tileSize);\r\n        right3 = setUp(\"/maxLevelArmor/Right3\",gp.tileSize,gp.tileSize);\r\n        right4 = setUp(\"/maxLevelArmor/Right4\",gp.tileSize,gp.tileSize);\r\n    }\r\n    public void getPlayerAttackImage(){\r\n        if(currentWeapon.type == type_sword){\r\n            attackUp1 = setUp(\"/player/atkb1\",gp.tileSize*2,gp.tileSize*2);\r\n            attackUp2 = setUp(\"/player/atkb2\",gp.tileSize*2,gp.tileSize*2);\r\n            attackDown1 = setUp(\"/player/atk1\",gp.tileSize*2,gp.tileSize*2);\r\n            attackDown2 = setUp(\"/player/atk2\",gp.tileSize*2,gp.tileSize*2);\r\n            attackLeft1 = setUp(\"/player/atkl1\",gp.tileSize*2,gp.tileSize*2);\r\n            attackLeft2 = setUp(\"/player/atkl2\",gp.tileSize*2,gp.tileSize*2);\r\n            attackRight1 = setUp(\"/player/atkr1\",gp.tileSize*2,gp.tileSize*2);\r\n            attackRight2 = setUp(\"/player/atkr2\",gp.tileSize*2,gp.tileSize*2);\r\n        }\r\n        if(currentWeapon.type == type_axe){\r\n            attackUp1 = setUp(\"/player/AXE/AatkB\",gp.tileSize*2,gp.tileSize*2);\r\n            attackUp2 = setUp(\"/player/AXE/AatkB\",gp.tileSize*2,gp.tileSize*2);\r\n            attackDown1 = setUp(\"/player/AXE/AatkF\",gp.tileSize*2,gp.tileSize*2);\r\n            attackDown2 = setUp(\"/player/AXE/AatkF\",gp.tileSize*2,gp.tileSize*2);\r\n            attackLeft1 = setUp(\"/player/AXE/AatkL\",gp.tileSize*2,gp.tileSize*2);\r\n            attackLeft2 = setUp(\"/player/AXE/AatkL\",gp.tileSize*2,gp.tileSize*2);\r\n            attackRight1 = setUp(\"/player/AXE/AatkR\",gp.tileSize*2,gp.tileSize*2);\r\n            attackRight2 = setUp(\"/player/AXE/AatkR\",gp.tileSize*2,gp.tileSize*2);\r\n        }\r\n\r\n    }\r\n    public void update() {\r\n\r\n        if(attacking){\r\n            attacking();\r\n        }\r\n        else if(keyH.upPressed || keyH.downPressed || keyH.leftPressed || keyH.rightPressed || keyH.enterPressed) {\r\n            if (keyH.upPressed) {\r\n                direction = \"up\";\r\n            }\r\n            if (keyH.downPressed) {\r\n                direction = \"down\";\r\n            }\r\n            if (keyH.leftPressed) {\r\n                direction = \"left\";\r\n            }\r\n            if (keyH.rightPressed) {\r\n                direction = \"right\";\r\n            }\r\n\r\n            //check tile collision\r\n            collisionOn = false;\r\n            gp.colCheck.checkTile(this);\r\n\r\n            //check object collision\r\n            int objIndex = gp.colCheck.checkObject(this, true);\r\n            pickUpObject(objIndex);\r\n\r\n            //Check NPC collision\r\n            int npcIndex = gp.colCheck.checkEntity(this, gp.npc);\r\n            interactNPC(npcIndex);\r\n\r\n            //Check Monster Collision\r\n            int monsterIndex = gp.colCheck.checkEntity(this, gp.monster);\r\n            contactMonster(monsterIndex);\r\n\r\n            //Check Interactive Tile Collision\r\n            int iTileIndex = gp.colCheck.checkEntity(this,gp.iTile);\r\n\r\n            //Check Event\r\n            gp.eHandler.checkEvent();\r\n\r\n            //if collision is false, player can move\r\n            if(!collisionOn && !keyH.enterPressed){\r\n                if(keyH.upPressed || keyH.downPressed || keyH.leftPressed || keyH.rightPressed) {\r\n                    if (keyH.upPressed) {\r\n                        worldY -= speed;\r\n                    }\r\n                    if (keyH.downPressed) {\r\n                        worldY += speed;\r\n                    }\r\n                    if (keyH.leftPressed) {\r\n                        worldX -= speed;\r\n                    }\r\n                    if (keyH.rightPressed) {\r\n                        worldX += speed;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(keyH.enterPressed &&  !attackCanceled){\r\n                gp.playSE(7);\r\n                attacking = true;\r\n                spriteCounter = 0;\r\n            }\r\n\r\n            attackCanceled = false;\r\n\r\n            gp.keyH.enterPressed = false;\r\n\r\n            spriteCounter++;\r\n            if(spriteCounter > spriteSpeedMultiplier) {\r\n                switch (spriteNum){\r\n                    case 1:\r\n                        spriteNum = 2;\r\n                        break;\r\n                    case 2:\r\n                        spriteNum = 3;\r\n                        break;\r\n                    case 3:\r\n                        spriteNum = 4;\r\n                        break;\r\n                    case 4:\r\n                        spriteNum = 1;\r\n                        break;\r\n                }\r\n                spriteCounter = 0;\r\n            }\r\n        }\r\n\r\n        //projectile\r\n        if(gp.keyH.shotKeyPressed && !projectile.alive && shotAvailableCounter == 30 && projectile.haveResource(this)){\r\n            //SET DEFAULT COORDINATES, DIRECTION\r\n            projectile.set(worldX,worldY,direction,true,this);\r\n\r\n            //SUBTRACT MANA COST\r\n            projectile.subtractResource(this);\r\n\r\n            //ADD TO THE LIST\r\n            gp.projectileList.add(projectile);\r\n            shotAvailableCounter = 0;\r\n            gp.playSE(2);\r\n        }\r\n        if(keyH.mountPressed){\r\n            speed = 15;\r\n            spriteSpeedMultiplier = 4;\r\n        } else{\r\n            speed = tempSpeed;\r\n            spriteSpeedMultiplier = tempSpriteSpeedMultiplier;\r\n        }\r\n\r\n        if(invincible){\r\n            invincibleCounter++;\r\n            if(invincibleCounter > 60){\r\n                invincible = false;\r\n                invincibleCounter = 0;\r\n            }\r\n        }\r\n\r\n        if(shotAvailableCounter < 30){\r\n            shotAvailableCounter++;\r\n        }\r\n        if(life > maxLife){\r\n            life = maxLife;\r\n        }\r\n        if(mana > maxMana){\r\n            mana = maxMana;\r\n        }\r\n        if(life <= 0){\r\n            gp.gameState = gp.gameOverState;\r\n            gp.ui.commandNum = -1;\r\n            gp.stopMusic();\r\n            gp.playSE(9);\r\n        }\r\n    }\r\n    public void attacking(){\r\n\r\n        spriteCounter++;\r\n\r\n        if(spriteCounter <= 5){\r\n            spriteNum = 1;\r\n        }\r\n        if(spriteCounter > 5 && spriteCounter <= 25){\r\n            spriteNum = 2;\r\n\r\n            //to save current solid areas\r\n            int currentWorldX = worldX;\r\n            int currentWorldY = worldY;\r\n            int solidAreaWidth = solidArea.width;\r\n            int solidAreaHeight = solidArea.height;\r\n\r\n            //adjust player's worldX/Y fot attack area\r\n            switch(direction){\r\n                case \"up\": worldY -= attackArea.height; break;\r\n                case \"down\": worldY += attackArea.height; break;\r\n                case \"left\": worldX -= attackArea.width; break;\r\n                case \"right\": worldX += attackArea.width; break;\r\n            }\r\n            //attack area becomes solid area\r\n            solidArea.width = attackArea.width;\r\n            solidArea.height = attackArea.height;\r\n            //check monster collision\r\n            int monsterIndex = gp.colCheck.checkEntity(this, gp.monster);\r\n            damageMonster(monsterIndex, attack);\r\n\r\n            int iTileIndex = gp.colCheck.checkEntity(this, gp.iTile);\r\n            damageInteractiveTile(iTileIndex);\r\n\r\n            //restore position\r\n            worldX = currentWorldX;\r\n            worldY = currentWorldY;\r\n            solidArea.width = solidAreaWidth;\r\n            solidArea.height = solidAreaHeight;\r\n        }\r\n        if(spriteCounter > 25){\r\n            spriteNum = 1;\r\n            spriteCounter = 0;\r\n            attacking = false;\r\n        }\r\n    }\r\n    public void pickUpObject(int index){\r\n        if (index != 999){\r\n            //PICKUP ONLY ITEMS\r\n            if(gp.obj[gp.currentMap][index].type == type_pickupOnly){\r\n                gp.obj[gp.currentMap][index].use(this);\r\n                gp.obj[gp.currentMap][index] = null;\r\n            }\r\n            //INVENTORY ITEMS\r\n            else {\r\n                String text;\r\n                if(inventory.size() != maxInventorySize){\r\n                    inventory.add(gp.obj[gp.currentMap][index]);\r\n                    gp.playSE(0);\r\n                    text = \"Got a \" + gp.obj[gp.currentMap][index].name + \"!\";\r\n                } else {\r\n                    text = \"Inventory Full\";\r\n                }\r\n                gp.ui.addMessage(text);\r\n                gp.obj[gp.currentMap][index] = null;\r\n            }\r\n        }\r\n    }\r\n    public void interactNPC(int index){\r\n\r\n        if (gp.keyH.enterPressed) {\r\n            if(index!=999){\r\n                attackCanceled = true;\r\n                gp.gameState = gp.dialogueState;\r\n                gp.npc[gp.currentMap][index].speak();\r\n            }\r\n        }\r\n    }\r\n    public void contactMonster(int index){\r\n        if (index != 999){\r\n            if(!invincible && !gp.monster[gp.currentMap][index].dying){\r\n                gp.playSE(6);\r\n                int damage = gp.monster[gp.currentMap][index].attack - defence;\r\n                if(damage < 0){\r\n                    damage = 0;\r\n                }\r\n                life-=damage;\r\n                invincible = true;\r\n            }\r\n        }\r\n    }\r\n    public void damageMonster(int index, int attack){\r\n        if(index != 999) {\r\n            if(!gp.monster[gp.currentMap][index].invincible){\r\n                gp.playSE(5);\r\n                int damage = attack - gp.monster[gp.currentMap][index].defence;\r\n                if(damage < 0){\r\n                    damage = 0;\r\n                }\r\n                gp.monster[gp.currentMap][index].life -= damage;\r\n                gp.ui.addMessage(damage + \" Damage!\");\r\n\r\n                gp.monster[gp.currentMap][index].invincible = true;\r\n                gp.monster[gp.currentMap][index].damageReaction();\r\n                if(gp.monster[gp.currentMap][index].life <= 0){\r\n                    gp.monster[gp.currentMap][index].dying = true;\r\n                    gp.ui.addMessage(\"Killed an \" + gp.monster[gp.currentMap][index].name + \"!\");\r\n                    gp.ui.addMessage(\"Gained +\" + gp.monster[gp.currentMap][index].exp + \" exp\");\r\n                    exp += gp.monster[gp.currentMap][index].exp;\r\n                    checkLevelUp();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void damageInteractiveTile(int i){\r\n\r\n        if(i != 999 && gp.iTile[gp.currentMap][i].destructible && gp.iTile[gp.currentMap][i].isCorrectItem(this) && !gp.iTile[gp.currentMap][i].invincible){\r\n\r\n            gp.iTile[gp.currentMap][i].playSE();\r\n            gp.iTile[gp.currentMap][i].life--;\r\n            gp.iTile[gp.currentMap][i].invincible = true;\r\n\r\n            generateParticle(gp.iTile[gp.currentMap][i],gp.iTile[gp.currentMap][i]);\r\n\r\n            if(gp.iTile[gp.currentMap][i].life-- == 0){\r\n                gp.iTile[gp.currentMap][i] = gp.iTile[gp.currentMap][i].getDestroyForm();\r\n            }\r\n        }\r\n    }\r\n    public void checkLevelUp(){\r\n        if(exp >= nextLevelExp) {\r\n            level++;\r\n            nextLevelExp = (int) (nextLevelExp * 1.5);\r\n            maxLife += 2;\r\n            strength++;\r\n            dexterity++;\r\n            attack = getAttack();\r\n            defence = getDefence();\r\n            gp.playSE(4);\r\n            gp.gameState = gp.dialogueState;\r\n            gp.ui.currentDialogue = \"You are now level \" + level + \" now!\\n\";\r\n        }\r\n    }\r\n    public void selectItem(){\r\n\r\n        int itemIndex = gp.ui.getItemIndexOnSlot();\r\n        if(itemIndex < inventory.size()){\r\n            Entity selectedItem = inventory.get(itemIndex);\r\n            if(selectedItem.type == type_sword || selectedItem.type == type_axe){\r\n                currentWeapon = selectedItem;\r\n                attack = getAttack();\r\n                getPlayerAttackImage();\r\n            }\r\n            if(selectedItem.type == type_shield){\r\n                currentShield = selectedItem;\r\n                defence = getDefence();\r\n            }\r\n            if(selectedItem.type == type_consumable){\r\n                selectedItem.use(this);\r\n                inventory.remove(itemIndex);\r\n            }\r\n        }\r\n    }\r\n    public void draw(Graphics2D g2) {\r\n        BufferedImage image = null;\r\n\r\n        int tempScreenX = screenX;\r\n        int tempScreenY = screenY;\r\n\r\n        // Array Sprites\r\n        BufferedImage[] upSprites = {up1, up2, up3, up4};\r\n        BufferedImage[] downSprites = {down1, down2, down3, down4};\r\n        BufferedImage[] leftSprites = {left1, left2, left3, left4};\r\n        BufferedImage[] rightSprites = {right1, right2, right3, right4};\r\n\r\n        switch (direction) {\r\n            case \"up\":\r\n                if(!attacking){\r\n                    image = upSprites[spriteNum - 1]; // Cycle through the up sprites\r\n                    if (!keyH.upPressed) {\r\n                        image = idleup;\r\n                        spriteCounter = 8;\r\n                    }\r\n                }\r\n                if(attacking){\r\n                    tempScreenX = screenX - 64;\r\n                    tempScreenY = screenY - 64;\r\n                    if(spriteNum==1) image = attackUp1;\r\n                    if(spriteNum==2) image = attackUp2;\r\n                }\r\n                break;\r\n\r\n            case \"down\":\r\n                if(!attacking){\r\n                    image = downSprites[spriteNum - 1]; // Cycle through the down sprites\r\n                    if (!keyH.downPressed) {\r\n                        image = idledown;\r\n                        spriteCounter = 8;\r\n                    }\r\n                }\r\n                if(attacking){\r\n                    tempScreenX = screenX - 64;\r\n                    tempScreenY = screenY - 64;\r\n                    if(spriteNum==1) image = attackDown1;\r\n                    if(spriteNum==2) image = attackDown2;\r\n                }\r\n                break;\r\n\r\n            case \"left\":\r\n                if(!attacking){\r\n                    image = leftSprites[spriteNum - 1]; // Cycle through the left sprites\r\n                    if (!keyH.leftPressed) {\r\n                        image = idleleft;\r\n                        spriteCounter = 8;\r\n                    }\r\n                }\r\n                if(attacking){\r\n                    tempScreenX = screenX - 64;\r\n                    tempScreenY = screenY - 64;\r\n                    if(spriteNum==1) image = attackLeft1;\r\n                    if(spriteNum==2) image = attackLeft2;\r\n                }\r\n                break;\r\n\r\n            case \"right\":\r\n                if(!attacking){\r\n                    image = rightSprites[spriteNum - 1]; // Cycle through the right sprites\r\n                    if (!keyH.rightPressed) {\r\n                        image = idleright;\r\n                        spriteCounter = 8;\r\n                    }\r\n                }\r\n                if(attacking){\r\n                    tempScreenX = screenX - 64;\r\n                    tempScreenY = screenY - 64;\r\n                    if(spriteNum==1) image = attackRight1;\r\n                    if(spriteNum==2) image = attackRight2;\r\n                }\r\n                break;\r\n        }\r\n\r\n        //for immunity effect\r\n        if(invincible){\r\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.3F));\r\n        }\r\n        g2.drawImage(image, tempScreenX, tempScreenY,null);\r\n        //reset\r\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1F));\r\n\r\n        //to see collision box or hit box\r\n        g2.setColor(Color.red);\r\n        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);\r\n\r\n        //debug\r\n//        g2.setFont(new Font(\"Arial\", Font.PLAIN, 26));\r\n//        g2.setColor(Color.white);\r\n//        g2.drawString(\"Invincible:\"+invincibleCounter,10, 400);\r\n\r\n        // DEBUG FOR ATTACK\r\n        // AttackArea\r\n        tempScreenX = screenX + solidArea.x;\r\n        tempScreenY = screenY + solidArea.y;\r\n        switch(direction) {\r\n            case \"up\": tempScreenY = screenY - attackArea.height; break;\r\n            case \"down\": tempScreenY = screenY + gp.tileSize; break;\r\n            case \"left\": tempScreenX = screenX - attackArea.width; break;\r\n            case \"right\": tempScreenX = screenX + gp.tileSize; break;\r\n        }\r\n        g2.setColor(Color.blue);\r\n        g2.setStroke(new BasicStroke(1));\r\n        g2.drawRect(tempScreenX, tempScreenY, attackArea.width, attackArea.height);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Entity/Player.java b/src/Entity/Player.java
---- a/src/Entity/Player.java	(revision 0607e936304636d45cf35f79e196e06786a1d2e4)
-+++ b/src/Entity/Player.java	(date 1733038735843)
-@@ -40,10 +40,16 @@
-     }
- 
-     public void setDefaultValues() {
--        worldX = gp.tileSize * 22;
--        worldY = gp.tileSize * 230;
--//        worldX = gp.tileSize * 12;
--//        worldY = gp.tileSize * 13;
-+//        worldX = gp.tileSize * 27;
-+//        worldY = gp.tileSize * 123;
-+//        worldX = gp.tileSize * 22;
-+//        worldY = gp.tileSize * 230;
-+
-+        worldX = gp.tileSize * 23;
-+        worldY = gp.tileSize * 21;
-+
-+        worldX = gp.tileSize * 12;
-+        worldY = gp.tileSize * 12;
-         speed = 6; //also change tempSpeed
-         direction = "down";
- 
-@@ -416,7 +422,7 @@
-     }
-     public void selectItem(){
- 
--        int itemIndex = gp.ui.getItemIndexOnSlot();
-+        int itemIndex = gp.ui.getItemIndexOnSlot(gp.ui.playerSlotCol, gp.ui.playerSlotRow);
-         if(itemIndex < inventory.size()){
-             Entity selectedItem = inventory.get(itemIndex);
-             if(selectedItem.type == type_sword || selectedItem.type == type_axe){
-Index: src/tile/TileManager.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package tile;\r\n\r\nimport DannyGermanSimulator.GamePanel;\r\nimport DannyGermanSimulator.UtilityTool;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.*;\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.util.Objects;\r\n\r\npublic class TileManager {\r\n    GamePanel gp;\r\n    public Tile[] tile;\r\n    public Tile[] tileSpawn;\r\n    public Tile[] tileDungeon;\r\n    public int[][][] mapTileNum;\r\n\r\n    public TileManager(GamePanel gp) {\r\n        this.gp = gp;\r\n        tile = new Tile[60];// Assuming 60 types of tiles\r\n        tileSpawn = new Tile[105];\r\n        tileDungeon = new Tile[100];\r\n        mapTileNum = new int[gp.maxMap][gp.maxWorldCol][gp.maxWorldRow]; // Map for tile numbers\r\n        getTileImage(); // Load tile images\r\n        getTileImageSpawn();\r\n        getTileDungeon();\r\n        loadMap(\"/maps/testmap.txt\", 0); // Load map from file\r\n        loadMap(\"/maps/interior01.txt\",1);\r\n        loadMap(\"/maps/Spawn.txt\", 2); //SPAWN\r\n        loadMap(\"/maps/Dungeon\", 3);\r\n    }\r\n    // Method to load tile images\r\n    public void getTileImage() {\r\n        setUp(0,\"/Tiles_Ren/000\" , false);\r\n        setUp(1,\"/Tiles_Ren/001\" , false);\r\n        setUp(2,\"/Tiles_Ren/002\" , false);\r\n        setUp(3,\"/Tiles_Ren/003\" , false);\r\n        setUp(4,\"/Tiles_Ren/004\" , false);\r\n        setUp(5,\"/Tiles_Ren/005\" , false);\r\n        setUp(6,\"/Tiles_Ren/006\" , false);\r\n        setUp(7,\"/Tiles_Ren/007\" , false);\r\n        setUp(8,\"/Tiles_Ren/008\" , false);\r\n        setUp(9,\"/Tiles_Ren/009\" , false);\r\n        setUp(10,\"/Tiles_Ren/010\" , false);\r\n        setUp(11,\"/Tiles_Ren/011\" , false);\r\n        setUp(12,\"/Tiles_Ren/012\" , false);\r\n        setUp(13,\"/Tiles_Ren/013\" , false);\r\n        setUp(14,\"/Tiles_Ren/014\" , false);\r\n        setUp(15,\"/Tiles_Ren/015\" , false);\r\n        setUp(16,\"/Tiles_Ren/016\" , true);\r\n        setUp(17,\"/Tiles_Ren/017\" , false);\r\n        setUp(18,\"/Tiles_Ren/018\" , true);\r\n        setUp(19,\"/Tiles_Ren/019\" , true);\r\n        setUp(20,\"/Tiles_Ren/02\" , false);\r\n        setUp(21,\"/Tiles_Ren/020\" , true);\r\n        setUp(22,\"/Tiles_Ren/021\" , true);\r\n        setUp(23,\"/Tiles_Ren/022\" , true);\r\n        setUp(24,\"/Tiles_Ren/023\", true);\r\n        setUp(25,\"/Tiles_Ren/024\" , true);\r\n        setUp(26,\"/Tiles_Ren/025\" , true);\r\n        setUp(27,\"/Tiles_Ren/026\" , true);\r\n        setUp(28,\"/Tiles_Ren/027\" , true);\r\n        setUp(29,\"/Tiles_Ren/028\" , true);\r\n        setUp(30,\"/Tiles_Ren/029\" , true);\r\n        setUp(31,\"/Tiles_Ren/030\" , true);\r\n        setUp(32,\"/Tiles_Ren/031\" , true);\r\n        setUp(33,\"/Tiles_Ren/032\" , true);\r\n        setUp(34,\"/Tiles_Ren/033\" , false);\r\n        setUp(35,\"/Tiles_Ren/034\" , false);\r\n        setUp(36,\"/Tiles_Ren/035\" , true);\r\n        setUp(37,\"/Tiles_Ren/036\" , false);\r\n        setUp(38,\"/Tiles_Ren/037\" , false);\r\n        setUp(39,\"/Tiles_Ren/04\" , false);\r\n        setUp(40,\"/Tiles_Ren/05\" , false);\r\n        setUp(41,\"/Tiles_Ren/08\" , true);\r\n        setUp(42,\"/Tiles_Ren/09\" , false);\r\n        setUp(43,\"/Tiles_Ren/1\" , false);\r\n        setUp(44,\"/Tiles_Ren/10\" , false);\r\n        setUp(45,\"/Tiles_Ren/11\" , true);\r\n        setUp(46,\"/Tiles_Ren/12\" , true);\r\n        setUp(47,\"/Tiles_Ren/13\" , false);\r\n        setUp(48,\"/Tiles_Ren/14\" , false);\r\n        setUp(49,\"/Tiles_Ren/15\" , false);\r\n        setUp(50,\"/Tiles_Ren/16\" , false);\r\n        setUp(51,\"/Tiles_Ren/17\" , false);\r\n        setUp(52,\"/Tiles_Ren/18\" , false);\r\n        setUp(53,\"/Tiles_Ren/19\" , false);\r\n        setUp(54,\"/Tiles_Ren/20\" , false);\r\n        setUp(55,\"/Tiles_Ren/21\" , false);\r\n        setUp(56,\"/Tiles_Ren/22\" , false);\r\n        setUp(57,\"/tiles_interactive/drytree\" , false);\r\n        setUp(58,\"/tiles_interactive/trunk\" , false);\r\n    }\r\n    public void getTileImageSpawn() {\r\n        setUpSpawn(0,\"/Spawn/001\" , false);\r\n        setUpSpawn(1,\"/Spawn/002\" , false);\r\n        setUpSpawn(2,\"/Spawn/003\" , false);\r\n        setUpSpawn(3,\"/Spawn/004\" , false);\r\n        setUpSpawn(4,\"/Spawn/005\" , false);\r\n        setUpSpawn(5,\"/Spawn/006\" , false);\r\n        setUpSpawn(6,\"/Spawn/007\" , false);\r\n        setUpSpawn(7,\"/Spawn/008\" , false);\r\n        setUpSpawn(8,\"/Spawn/009\" , false);\r\n        setUpSpawn(9,\"/Spawn/010\" , false);\r\n        setUpSpawn(10,\"/Spawn/011\" , false);\r\n        setUpSpawn(11,\"/Spawn/012\" , false);\r\n        setUpSpawn(12,\"/Spawn/013\" , false);\r\n        setUpSpawn(13,\"/Spawn/014\" , false);\r\n        setUpSpawn(14,\"/Spawn/015\" , false);\r\n        setUpSpawn(15,\"/Spawn/018\" , true);\r\n        setUpSpawn(16,\"/Spawn/019\" , true);\r\n        setUpSpawn(17,\"/Spawn/02\" , false);\r\n        setUpSpawn(18,\"/Spawn/020\" , true);\r\n        setUpSpawn(19,\"/Spawn/021\" , true);\r\n        setUpSpawn(20,\"/Spawn/022\" , true);\r\n        setUpSpawn(21,\"/Spawn/023\" , true);\r\n        setUpSpawn(22,\"/Spawn/024\" , true);\r\n        setUpSpawn(23,\"/Spawn/025\" , true);\r\n        setUpSpawn(24,\"/Spawn/026\" , true);\r\n        setUpSpawn(25,\"/Spawn/027\" , true);\r\n        setUpSpawn(26,\"/Spawn/028\" , true);\r\n        setUpSpawn(27,\"/Spawn/029\" , true);\r\n        setUpSpawn(28,\"/Spawn/030\" , true);\r\n        setUpSpawn(29,\"/Spawn/031\" , true);\r\n        setUpSpawn(30,\"/Spawn/04\" , false);\r\n        setUpSpawn(31,\"/Spawn/05\" , false);\r\n        setUpSpawn(32,\"/Spawn/09\" , false);\r\n        setUpSpawn(33,\"/Spawn/1\" , false);\r\n        setUpSpawn(34,\"/Spawn/10\" , false);\r\n        setUpSpawn(35,\"/Spawn/14\" , false);\r\n        setUpSpawn(36,\"/Spawn/15\" , false);\r\n        setUpSpawn(37,\"/Spawn/16\" , false);\r\n        setUpSpawn(38,\"/Spawn/17\" , false);\r\n        setUpSpawn(39,\"/Spawn/18\" , false);\r\n        setUpSpawn(40,\"/Spawn/19\" , false);\r\n        setUpSpawn(41,\"/Spawn/20\" , false);\r\n        setUpSpawn(42,\"/Spawn/21\" , false);\r\n        setUpSpawn(43,\"/Spawn/22\" , false);\r\n        setUpSpawn(44,\"/Spawn/B\" , true);\r\n        setUpSpawn(45,\"/Spawn/B1\" , true);\r\n        setUpSpawn(46,\"/Spawn/B2\" , true);\r\n        setUpSpawn(47,\"/Spawn/b3\" , true);\r\n        setUpSpawn(48,\"/Spawn/h1\" , true);\r\n        setUpSpawn(49,\"/Spawn/h10\" , true);\r\n        setUpSpawn(50,\"/Spawn/h11\" , true);\r\n        setUpSpawn(51,\"/Spawn/h12\" , true);\r\n        setUpSpawn(52,\"/Spawn/h13\" , true);\r\n        setUpSpawn(53,\"/Spawn/h14\" , true);\r\n        setUpSpawn(54,\"/Spawn/h15\" , true);\r\n        setUpSpawn(55,\"/Spawn/h16\" , true);\r\n        setUpSpawn(56,\"/Spawn/h17\" , true);\r\n        setUpSpawn(57,\"/Spawn/h18\" , true);\r\n        setUpSpawn(58,\"/Spawn/h19\" , true);\r\n        setUpSpawn(59,\"/Spawn/h2\" , true);\r\n        setUpSpawn(60,\"/Spawn/h20\" , true);\r\n        setUpSpawn(61,\"/Spawn/h21\" , true);\r\n        setUpSpawn(62,\"/Spawn/h22\" , true);\r\n        setUpSpawn(63,\"/Spawn/h23\" , true);\r\n        setUpSpawn(64,\"/Spawn/h24\" , true);\r\n        setUpSpawn(65,\"/Spawn/h25\" , true);\r\n        setUpSpawn(66,\"/Spawn/h26\" , true);\r\n        setUpSpawn(67,\"/Spawn/h27\" , true);\r\n        setUpSpawn(68,\"/Spawn/h28\" , true);\r\n        setUpSpawn(69,\"/Spawn/h29\" , true);\r\n        setUpSpawn(70,\"/Spawn/h3\" , true);\r\n        setUpSpawn(71,\"/Spawn/h30\" , true);\r\n        setUpSpawn(72,\"/Spawn/h4\" , true);\r\n        setUpSpawn(73,\"/Spawn/h5\" , true);\r\n        setUpSpawn(74,\"/Spawn/h6\" , true);\r\n        setUpSpawn(75,\"/Spawn/h7\" , true);\r\n        setUpSpawn(76,\"/Spawn/h8\" , true);\r\n        setUpSpawn(77,\"/Spawn/h9\" , true);\r\n        setUpSpawn(78,\"/Spawn/Rock\" , true);\r\n        setUpSpawn(79,\"/Spawn/Sign\" , true);\r\n        setUpSpawn(80,\"/Spawn/st1\" , true);\r\n        setUpSpawn(81,\"/Spawn/st2\" , true);\r\n        setUpSpawn(82,\"/Spawn/st3\" , true);\r\n        setUpSpawn(83,\"/Spawn/st4\" , true);\r\n        setUpSpawn(84,\"/Spawn/st5\" , true);\r\n        setUpSpawn(85,\"/Spawn/st6\" , true);\r\n        setUpSpawn(86,\"/Spawn/T\" , true);\r\n        setUpSpawn(87,\"/Spawn/T1\" , true);\r\n        setUpSpawn(88,\"/Spawn/t10\" , true);\r\n        setUpSpawn(89,\"/Spawn/T11\" , true);\r\n        setUpSpawn(90,\"/Spawn/t2\" , true);\r\n        setUpSpawn(91,\"/Spawn/T3\" , true);\r\n        setUpSpawn(92,\"/Spawn/t4\" , true);\r\n        setUpSpawn(93,\"/Spawn/T5\" , true);\r\n        setUpSpawn(94,\"/Spawn/T6\" , true);\r\n        setUpSpawn(95,\"/Spawn/T7\" , true);\r\n        setUpSpawn(96,\"/Spawn/T8\" , true);\r\n        setUpSpawn(97,\"/Spawn/T9\" , true);\r\n        setUpSpawn(98,\"/Spawn/tr1\" , true);\r\n        setUpSpawn(99,\"/Spawn/tr2\" , true);\r\n        setUpSpawn(100,\"/Spawn/tr3\" , true);\r\n        setUpSpawn(101,\"/Spawn/tr4\" , true);\r\n    }\r\n\r\n    public void getTileDungeon() {\r\n        setUpDungeon(0, \"/Tiles_Dungeon/Decor-1\", true);\r\n        setUpDungeon(1, \"/Tiles_Dungeon/Decor-2\", true);\r\n        setUpDungeon(2, \"/Tiles_Dungeon/Decor-3\", true);\r\n        setUpDungeon(3, \"/Tiles_Dungeon/Decor-4\", true);\r\n        setUpDungeon(4, \"/Tiles_Dungeon/Decor-5\", true);\r\n        setUpDungeon(5, \"/Tiles_Dungeon/Decor-6\", true);\r\n        setUpDungeon(6, \"/Tiles_Dungeon/Decor-7\", true);\r\n        setUpDungeon(7, \"/Tiles_Dungeon/Floor-1\", false);\r\n        setUpDungeon(8, \"/Tiles_Dungeon/Floor-2\", false);\r\n        setUpDungeon(9, \"/Tiles_Dungeon/Floor-3\", false);\r\n        setUpDungeon(10, \"/Tiles_Dungeon/Floor-4\", false);\r\n        setUpDungeon(11, \"/Tiles_Dungeon/FS-1\", false);\r\n        setUpDungeon(12, \"/Tiles_Dungeon/FS-2\", false);\r\n        setUpDungeon(13, \"/Tiles_Dungeon/FS-3\", false);\r\n        setUpDungeon(14, \"/Tiles_Dungeon/FS-4\", false);\r\n        setUpDungeon(15, \"/Tiles_Dungeon/FS-5\", false);\r\n        setUpDungeon(16, \"/Tiles_Dungeon/Stairs-1\", false);\r\n        setUpDungeon(17, \"/Tiles_Dungeon/Stairs-2\", false);\r\n        setUpDungeon(18, \"/Tiles_Dungeon/tr-1\", false);\r\n        setUpDungeon(19, \"/Tiles_Dungeon/Walls-1\", true);\r\n        setUpDungeon(20, \"/Tiles_Dungeon/Walls-10\", true);\r\n        setUpDungeon(21, \"/Tiles_Dungeon/Walls-11\", true);\r\n        setUpDungeon(22, \"/Tiles_Dungeon/Walls-12.png-1.png\", true);\r\n        setUpDungeon(23, \"/Tiles_Dungeon/Walls-12.png-2.png\", true);\r\n        setUpDungeon(24, \"/Tiles_Dungeon/Walls-12.png-3.png\", true);\r\n        setUpDungeon(25, \"/Tiles_Dungeon/Walls-12.png-4.png\", true);\r\n        setUpDungeon(26, \"/Tiles_Dungeon/Walls-12.png-5.png\", true);\r\n        setUpDungeon(27, \"/Tiles_Dungeon/Walls-12\", true);\r\n        setUpDungeon(28, \"/Tiles_Dungeon/Walls-13\", true);\r\n        setUpDungeon(29, \"/Tiles_Dungeon/Walls-14\", true);\r\n        setUpDungeon(30, \"/Tiles_Dungeon/Walls-15\", true);\r\n        setUpDungeon(31, \"/Tiles_Dungeon/Walls-16\", true);\r\n        setUpDungeon(32, \"/Tiles_Dungeon/Walls-17\", true);\r\n        setUpDungeon(33, \"/Tiles_Dungeon/Walls-18\", true);\r\n        setUpDungeon(34, \"/Tiles_Dungeon/Walls-19\", true);\r\n        setUpDungeon(35, \"/Tiles_Dungeon/Walls-2\", true);\r\n        setUpDungeon(36, \"/Tiles_Dungeon/Walls-20\", true);\r\n        setUpDungeon(37, \"/Tiles_Dungeon/Walls-21\", true);\r\n        setUpDungeon(38, \"/Tiles_Dungeon/Walls-22\", true);\r\n        setUpDungeon(39, \"/Tiles_Dungeon/Walls-23\", true);\r\n        setUpDungeon(40, \"/Tiles_Dungeon/Walls-24\", true);\r\n        setUpDungeon(41, \"/Tiles_Dungeon/Walls-25.png\", true);\r\n        setUpDungeon(42, \"/Tiles_Dungeon/Walls-26.png\", true);\r\n        setUpDungeon(43, \"/Tiles_Dungeon/Walls-27.png\", true);\r\n        setUpDungeon(44, \"/Tiles_Dungeon/Walls-28.png\", true);\r\n        setUpDungeon(45, \"/Tiles_Dungeon/Walls-29.png\", true);\r\n        setUpDungeon(46, \"/Tiles_Dungeon/Walls-5\", true);\r\n        setUpDungeon(47, \"/Tiles_Dungeon/Walls-30.png\", true);\r\n        setUpDungeon(48, \"/Tiles_Dungeon/Walls-31.png\", true);\r\n        setUpDungeon(49, \"/Tiles_Dungeon/Walls-32.png\", true);\r\n        setUpDungeon(50, \"/Tiles_Dungeon/Walls-33.png\", true);\r\n        setUpDungeon(51, \"/Tiles_Dungeon/Walls-34.png\", true);\r\n        setUpDungeon(52, \"/Tiles_Dungeon/Walls-35.png\", true);\r\n        setUpDungeon(53, \"/Tiles_Dungeon/Walls-36.png\", true);\r\n        setUpDungeon(54, \"/Tiles_Dungeon/Walls-37.png\", true);\r\n        setUpDungeon(55, \"/Tiles_Dungeon/Walls-38.png\", true);\r\n        setUpDungeon(56, \"/Tiles_Dungeon/Walls-39.png\", true);\r\n        setUpDungeon(57, \"/Tiles_Dungeon/Walls-4\", true);\r\n        setUpDungeon(58, \"/Tiles_Dungeon/Walls-40.png\", true);\r\n        setUpDungeon(59, \"/Tiles_Dungeon/Walls-41.png\", true);\r\n        setUpDungeon(60, \"/Tiles_Dungeon/Walls-42.png\", true);\r\n        setUpDungeon(61, \"/Tiles_Dungeon/Walls-43.png\", true);\r\n        setUpDungeon(62, \"/Tiles_Dungeon/Walls-44.png\", true);\r\n        setUpDungeon(63, \"/Tiles_Dungeon/Walls-45.png\", true);\r\n        setUpDungeon(64, \"/Tiles_Dungeon/Walls-46.png\", true);\r\n        setUpDungeon(65, \"/Tiles_Dungeon/Walls-47.png\", true);\r\n        setUpDungeon(66, \"/Tiles_Dungeon/Walls-48.png\", true);\r\n        setUpDungeon(67, \"/Tiles_Dungeon/Walls-49.png\", true);\r\n        setUpDungeon(68, \"/Tiles_Dungeon/Walls-3\", true);\r\n        setUpDungeon(69, \"/Tiles_Dungeon/Walls-50.png\", true);\r\n        setUpDungeon(70, \"/Tiles_Dungeon/Walls-51.png\", true);\r\n        setUpDungeon(71, \"/Tiles_Dungeon/Walls-52.png\", true);\r\n        setUpDungeon(72, \"/Tiles_Dungeon/Walls-53.png\", true);\r\n        setUpDungeon(73, \"/Tiles_Dungeon/Walls-54.png\", true);\r\n        setUpDungeon(74, \"/Tiles_Dungeon/Walls-55.png\", true);\r\n        setUpDungeon(75, \"/Tiles_Dungeon/Walls-58.png\", true);\r\n        setUpDungeon(76, \"/Tiles_Dungeon/Walls-59\", true);\r\n        setUpDungeon(77, \"/Tiles_Dungeon/Walls-59.png\", true);\r\n        setUpDungeon(78, \"/Tiles_Dungeon/Walls-6\", true);\r\n        setUpDungeon(79, \"/Tiles_Dungeon/Walls-60\", true);\r\n        setUpDungeon(80, \"/Tiles_Dungeon/Walls-60.png\", true);\r\n        setUpDungeon(81, \"/Tiles_Dungeon/Walls-61\", true);\r\n        setUpDungeon(82, \"/Tiles_Dungeon/Walls-61.png\", true);\r\n        setUpDungeon(83, \"/Tiles_Dungeon/Walls-62\", true);\r\n        setUpDungeon(84, \"/Tiles_Dungeon/Walls-62.png\", true);\r\n        setUpDungeon(85, \"/Tiles_Dungeon/Walls-63.png\", true);\r\n        setUpDungeon(86, \"/Tiles_Dungeon/Walls-64.png\", true);\r\n        setUpDungeon(87, \"/Tiles_Dungeon/Walls-65.png\", true);\r\n        setUpDungeon(88, \"/Tiles_Dungeon/Walls-66.png\", true);\r\n        setUpDungeon(89, \"/Tiles_Dungeon/Walls-65.png\", true);\r\n        setUpDungeon(90, \"/Tiles_Dungeon/Walls-66.png\", true);\r\n        setUpDungeon(91, \"/Tiles_Dungeon/Walls-7\", true);\r\n        setUpDungeon(92, \"/Tiles_Dungeon/Walls-8\", true);\r\n        setUpDungeon(93, \"/Tiles_Dungeon/Walls-9\", true);\r\n    }\r\n\r\n    public void setUp(int index, String imageName, boolean collision){\r\n\r\n         UtilityTool uTool = new UtilityTool();\r\n        try {\r\n            tile[index] = new Tile();\r\n            tile[index].image = ImageIO.read(getClass().getResourceAsStream(imageName + \".png\"));\r\n            tile[index].image = uTool.scaleImage(tile[index].image, gp.tileSize, gp.tileSize);\r\n            tile[index].collision = collision;\r\n        } catch(IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public void setUpSpawn(int index, String imageName, boolean collision){\r\n\r\n        UtilityTool uTool = new UtilityTool();\r\n        try {\r\n            tileSpawn[index] = new Tile();\r\n            tileSpawn[index].image = ImageIO.read(getClass().getResourceAsStream(imageName + \".png\"));\r\n            tileSpawn[index].image = uTool.scaleImage(tileSpawn[index].image, gp.tileSize, gp.tileSize);\r\n            tileSpawn[index].collision = collision;\r\n        } catch(IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public void setUpDungeon(int index, String imageName, boolean collision){\r\n\r\n        UtilityTool uTool = new UtilityTool();\r\n        try {\r\n            tileDungeon[index] = new Tile();\r\n            tileDungeon[index].image = ImageIO.read(getClass().getResourceAsStream(imageName + \".png\"));\r\n            tileDungeon[index].image = uTool.scaleImage(tileDungeon[index].image, gp.tileSize, gp.tileSize);\r\n            tileDungeon[index].collision = collision;\r\n        } catch(IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    // Load map data from text file\r\n    public void loadMap(String filePath, int map) {\r\n\r\n        try {\r\n\r\n            // import and read the map matrix\r\n            InputStream is = getClass().getResourceAsStream(filePath);\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(Objects.requireNonNull(is)));\r\n\r\n            int col = 0;\r\n            int row = 0;\r\n\r\n            // read one row line of the map matrix data\r\n            while (col < gp.maxWorldCol && row < gp.maxWorldRow) {\r\n\r\n                String line = br.readLine();\r\n\r\n                while (col < gp.maxWorldCol) {\r\n\r\n                    // split the line of data matrix into solo digits\r\n                    String[] numbers = line.split(\" \");\r\n\r\n                    // parse String to int\r\n                    int num = Integer.parseInt(numbers[col]);\r\n\r\n                    mapTileNum[map][col][row] = num;\r\n                    col++;\r\n                }\r\n                if (col == gp.maxWorldCol) {\r\n                    col = 0;\r\n                    row++;\r\n                }\r\n            }\r\n            br.close();\r\n\r\n        }\r\n        catch (Exception e) {\r\n\r\n\r\n        }\r\n    }\r\n    // Draw method to render the map\r\n    public void draw(Graphics2D g2) {\r\n        int worldCol = 0;\r\n        int worldRow = 0;\r\n\r\n        while (worldCol < gp.maxWorldCol && worldRow < gp.maxWorldRow) {\r\n            int tileNum = mapTileNum[gp.currentMap][worldCol][worldRow];\r\n\r\n            int worldX = worldCol * gp.tileSize;\r\n            int worldY = worldRow * gp.tileSize;\r\n            int screenX = worldX - gp.player.worldX + gp.player.screenX;\r\n            int screenY = worldY - gp.player.worldY + gp.player.screenY;\r\n\r\n            // Only draw the tiles that are visible on the screen\r\n            if (worldX + gp.tileSize > gp.player.worldX - gp.player.screenX &&\r\n                    worldX - gp.tileSize < gp.player.worldX + gp.player.screenX &&\r\n                    worldY + gp.tileSize > gp.player.worldY - gp.player.screenY &&\r\n                    worldY - gp.tileSize < gp.player.worldY + gp.player.screenY) {\r\n\r\n                switch(gp.currentMap){\r\n\r\n                    case 0 ,1: g2.drawImage(tile[tileNum].image, screenX, screenY, null); break;\r\n                    case 2: g2.drawImage(tileSpawn[tileNum].image, screenX, screenY, null); break;\r\n                    case 3: g2.drawImage(tileDungeon[tileNum].image, screenX, screenY, null); break;\r\n                }\r\n            }\r\n            worldCol++;\r\n\r\n            if (worldCol == gp.maxWorldCol) {\r\n                worldCol = 0;\r\n                worldRow++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/tile/TileManager.java b/src/tile/TileManager.java
---- a/src/tile/TileManager.java	(revision 0607e936304636d45cf35f79e196e06786a1d2e4)
-+++ b/src/tile/TileManager.java	(date 1733038782221)
-@@ -298,7 +298,7 @@
- 
-     public void setUp(int index, String imageName, boolean collision){
- 
--         UtilityTool uTool = new UtilityTool();
-+        UtilityTool uTool = new UtilityTool();
-         try {
-             tile[index] = new Tile();
-             tile[index].image = ImageIO.read(getClass().getResourceAsStream(imageName + ".png"));
-Index: src/Entity/NPC_Merchant.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Entity/NPC_Merchant.java b/src/Entity/NPC_Merchant.java
-new file mode 100644
---- /dev/null	(date 1733039105479)
-+++ b/src/Entity/NPC_Merchant.java	(date 1733039105479)
-@@ -0,0 +1,9 @@
-+package Entity;
-+
-+import DannyGermanSimulator.GamePanel;
-+
-+public class NPC_Merchant extends Entity{
-+    public NPC_Merchant(GamePanel gp) {
-+        super(gp);
-+    }
-+}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM__Changes_1.xml	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
+++ /dev/null	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM_[Changes]1" date="1733038803133" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/1/2024 3:34 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a32925c1-4475-423e-9d0a-63cec802cec7\" name=\"Changes\" comment=\"Added Object Detection/Loot, Stackable Items, Lighting Item, Day and Night Cycle, Advanced Combat, Guard and Parry&#10;&#10;-implemented darkness and lighting effects that are provided by torch or lantern so we can create nighttime situations or dark interiors such as dungeons, caves, ruins, etc.&#10;-added a lantern so we can equip/un-equip it and change the lighting situation.&#10;-implemented the day and night cycle. Also, added a tent so we can sleep until the next morning.&#10;-implemented attack AI.&#10;- implement a guard and parry (just guard) system so we can stagger the attacker and give extra damage!&#10;-press space to guard/parry&#10;&#10;--did not implement map bcuz of memory usage errors&#10;&#10;-need to fix combat for orc, also sprite&#10;-need new orc sprites&#10;-need to add objects and chests into maps&#10;-need to remove ui&#10;-need to replace images used to new ones&#10;-need to fix Mini map and map function&#10;-need to fix ui setting for retry&#10;-need to make plans for level progression&#10;-need to optimize game and fix screen scaling&#10;-need to set more mobs for dungeons and spawn\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_4_2024_8_01_PM_[Changes]/shelved.patch\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_4_2024_8_01_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/Door.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/chest.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/chest_opened.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/lantern.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_down_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_down_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_left_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_left_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_right_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_right_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_up_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_up_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_down_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_down_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_left_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_left_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_right_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_right_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_up_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_up_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/shelved.patch\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/tent.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/Door.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/chest.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/chest_opened.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/lantern.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_down_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_down_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_left_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_left_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_right_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_right_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_up_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_up_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_down_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_down_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_left_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_left_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_right_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_right_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_up_1.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_up_2.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/shelved.patch\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/tent.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_1.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/data/DataStorage.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/data/SaveLoad.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/environment/Lighting.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/config.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/config.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/res/objects/Door.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/res/objects/Door.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/DannyGermanSimulator/AssetSetter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/DannyGermanSimulator/AssetSetter.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/DannyGermanSimulator/EventHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/DannyGermanSimulator/EventHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/DannyGermanSimulator/GamePanel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/DannyGermanSimulator/GamePanel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/DannyGermanSimulator/KeyHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/DannyGermanSimulator/KeyHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/DannyGermanSimulator/UI.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/DannyGermanSimulator/UI.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Entity/Entity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Entity/Entity.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Entity/NPC_Merchant.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Entity/NPC_Merchant.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Entity/Player.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Entity/Player.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/monster/MON_Orc.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/monster/MON_Orc.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/object/OBJ_Chest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/object/OBJ_Chest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Ivann0730&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/Ivann0730/JAVA-Capstone\",\r\n    \"accountId\": \"da8b10d6-8d47-4816-a8df-c8eb9da47b9a\"\r\n  }\r\n}]]></component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nnWzBP863UmRtcohf237tupeGe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/JAVA2/JAVA-Capstone/res/objects\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\objects\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\sound\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\monster\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\sound\\track\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\Spawn\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\sound\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\objects\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\NPC\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\maps\" />\r\n      <recent name=\"D:\\JAVA2\\JAVA-Capstone\\res\\tiles_interactive\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"DannyGermanSimulator.Main\" />\r\n      <module name=\"JavaCapstone\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"DannyGermanSimulator.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a32925c1-4475-423e-9d0a-63cec802cec7\" name=\"Changes\" comment=\"\" />\r\n      <created>1729609583050</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729609583050</updated>\r\n      <workItem from=\"1729609584259\" duration=\"1746000\" />\r\n      <workItem from=\"1729680806979\" duration=\"428000\" />\r\n      <workItem from=\"1729684639502\" duration=\"1653000\" />\r\n      <workItem from=\"1729686317486\" duration=\"14463000\" />\r\n      <workItem from=\"1732976036006\" duration=\"79000\" />\r\n      <workItem from=\"1732986571824\" duration=\"671000\" />\r\n      <workItem from=\"1733022424350\" duration=\"251000\" />\r\n      <workItem from=\"1733022688569\" duration=\"10255000\" />\r\n      <workItem from=\"1733492124270\" duration=\"7507000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"partial\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729688105013</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729688105013</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Start of making the map - Date:October 23, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729702904448</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729702904448</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Start of making the map - Date:October 23, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729753216851</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729753216851</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Collision Implemented - Date:October 24, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729757020446</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729757020446</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Objects Implemented (but not yet interactable) - Date:October 24, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729770452886</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729770452886</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Objects Implemented (but not yet interactable) - Date:October 24, 2024\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729782495355</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729782495356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Objects Implemented (mana and coins)&#10;check console for counter (alt tab when object is picked up)&#10;(note: still needs optimization)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729935946399</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729935946399</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Sounds Implemented &#10;added coin sound effect but cannot be heard well due to bg music. also more items added and added HP and Boots to add speed&#10;(note: still needs optimization)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729946281820</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729946281820</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"UI Implemented&#10;-playtime is now shown&#10;-new text appears when object is picked up&#10;-fixed the collision values for player&#10;//to fix object collision values&#10;(note: still needs optimization)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729951164710</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729951164710</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Improved Rendering Performance&#10;-press T to show draw time&#10;(before optimization draw time was 600000 - 800000 or 0.006 - 0.008 seconds, after optimization it is now 0.001 average)&#10;-cleaned up code a little bit&#10;-added utility class for scaling image for better performance\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730025909842</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730025909842</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Added NPC class&#10;-new radish npc (has simple AI implemented to randomize walk direction)&#10;-hit box values need to be fixed&#10;-cleaned up code a little bit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730461511053</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730461511053</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Added Dialogue&#10;-to talk with npc, collide with npc and press ENTER key&#10;-Added font&#10;-still need to fix hit box values\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730547117525</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730547117525</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Added Title Screen&#10;-classes can be replaced with difficulty choices like ease, medium, or hard&#10;-choosing a class will do nothing atm&#10;-choosing load game will do nothing atm&#10;-still need to fix hit box values\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730559603267</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730559603267</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Added HUD Life for player&#10;-added new key handler for ESCAPE key now used to pause, and when in paused state press ENTER for easy game exit&#10;-still need to fix hit box values\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730994100820</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730994100820</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Added EVENTS&#10;-Press F for Heal near the water &#10;-still need to fix hit box values\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731977828270</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731977828270</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Fixed Rendering&#10;-still need to fix hit box values for npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731983041241</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731983041241</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Fixed Rendering&#10;-still need to fix hit box values for npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732021368768</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732021368768</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Fixed Rendering&#10;-still need to fix hit box values for npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732021394998</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732021394998</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Added Monster Class&#10;-when player is damaged player becomes immune for 1 second and then can be damaged again after&#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732030736720</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732030736720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Added Attack animation and attack damage&#10;-heil sprite for load screen display&#10;-when monster is damaged, becomes immune for 1 second and then can be damaged again after&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732122472906</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732122472906</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Added Monster Health Bar &amp; Death Animation&#10;-added swing sword sound effect, and others&#10;-added passive AI for bat monster&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732285525251</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732285525251</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Added Character Status UI&#10;-Press P to access character UI&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732319938899</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732319938899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Added Scrolling Message, Leveling Up, Damage Calculation&#10;-Press P to access character UI&#10;- when healing using the healing pool, the monsters respawn&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732335582626</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732335582626</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Added Inventory&#10;-Press P to access inventory&#10;-WASD keys to move inventory cursor&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732357507154</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732357507154</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Added Equipables &amp; Usable Items&#10;-Press P to access inventory and enter key to switch or use items&#10;-added new axe weapon, has more damage than sword but less range (using heil sprite for now)&#10;-WASD keys to move inventory cursor&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732374226539</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732374226539</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Added Projectiles&#10;-Press F to shoot projectile&#10;-added new fireball, still need to implement mana&#10;&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732428089291</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732428089291</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"Added Monster Projectiles and Mana&#10;-Press F to shoot projectile&#10;-added new fireball&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732439380498</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732439380498</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Added Item Drops&#10;-change key to interact to E&#10;-Press F to shoot projectile&#10;-added new fireball&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to fix item drops solid area&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732460016948</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732460016948</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Added Breaking Objects &#10;-need axe to cut down tree&#10;-added interactive Tile dry tree and trunk&#10;-Fixed most hit boxes for entities and objects&#10;&#10;-need to optimize game and fix screen scaling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732544946720</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732544946720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Added Particles&#10;-added some particles flying when you cut a tree or hit a monster with your fireball.&#10;&#10;-need to optimize game and fix screen scaling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732550849229</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732550849229</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Added Options Screen and Save Function for Settings (like music and fullscreen)&#10;-press ESC key to open Options Key.&#10;-auto save when change is made in settings&#10;&#10;&#10;-need to optimize game and fix screen scaling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732808634100</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732808634100</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"Added Trade System&#10;-implemented a merchant NPC so we can trade(Buy/Sell) items.&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to implement spawn map and dungeon&#10;-need to set mobs for dungeons and others\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733152747271</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733152747271</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"Added Changed Map keys&#10;-press M for map and N for mini-map&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to implement spawn map and dungeon&#10;-need to set mobs for dungeons and others\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733227237650</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733227237650</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"Added Changed Map keys&#10;-press M for map and N for mini-map&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to implement spawn map and dungeon&#10;-need to set mobs for dungeons and others\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733227430287</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733227430287</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"Added Object Detection/Loot, Stackable Items, Lighting Item, Day and Night Cycle, Advanced Combat, Guard and Parry&#10;&#10;-implemented darkness and lighting effects that are provided by torch or lantern so we can create nighttime situations or dark interiors such as dungeons, caves, ruins, etc.&#10;-added a lantern so we can equip/un-equip it and change the lighting situation.&#10;-implemented the day and night cycle. Also, added a tent so we can sleep until the next morning.&#10;-implemented attack AI.&#10;- implement a guard and parry (just guard) system so we can stagger the attacker and give extra damage!&#10;-press space to guard/parry&#10;&#10;--did not implement map bcuz of memory usage errors&#10;&#10;-need to fix combat for orc, also sprite&#10;-need new orc sprites&#10;-need to add objects and chests into maps&#10;-need to remove ui&#10;-need to replace images used to new ones&#10;-need to fix Mini map and map function&#10;-need to fix ui setting for retry&#10;-need to make plans for level progression&#10;-need to optimize game and fix screen scaling&#10;-need to set more mobs for dungeons and spawn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733560678455</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733560678455</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"36\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Sounds Implemented &#10;added coin sound effect but cannot be heard well due to bg music. also more items added and added HP and Boots to add speed&#10;(note: still needs optimization)\" />\r\n    <MESSAGE value=\"UI Implemented&#10;-playtime is now shown&#10;-new text appears when object is picked up&#10;-fixed the collision values for player&#10;//to fix object collision values&#10;(note: still needs optimization)\" />\r\n    <MESSAGE value=\"Improved Rendering Performance&#10;-press T to show draw time&#10;(before optimization draw time was 600000 - 800000 or 0.006 - 0.008 seconds, after optimization it is now 0.001 average)&#10;-cleaned up code a little bit&#10;-added utility class for scaling image for better performance\" />\r\n    <MESSAGE value=\"Added NPC class&#10;-new radish npc (has simple AI implemented to randomize walk direction)&#10;-hit box values need to be fixed&#10;-cleaned up code a little bit\" />\r\n    <MESSAGE value=\"Added Dialogue&#10;-to talk with npc, collide with npc and press ENTER key&#10;-Added font&#10;-still need to fix hit box values\" />\r\n    <MESSAGE value=\"Added Title Screen&#10;-classes can be replaced with difficulty choices like ease, medium, or hard&#10;-choosing a class will do nothing atm&#10;-choosing load game will do nothing atm&#10;-still need to fix hit box values\" />\r\n    <MESSAGE value=\"Added HUD Life for player&#10;-added new key handler for ESCAPE key now used to pause, and when in paused state press ENTER for easy game exit&#10;-still need to fix hit box values\" />\r\n    <MESSAGE value=\"Added EVENTS&#10;-Press F for Heal near the water &#10;-still need to fix hit box values\" />\r\n    <MESSAGE value=\"Fixed Rendering&#10;-still need to fix hit box values for npc\" />\r\n    <MESSAGE value=\"Added Monster Class&#10;-when player is damaged player becomes immune for 1 second and then can be damaged again after&#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Attack animation and attack damage&#10;-heil sprite for load screen display&#10;-when monster is damaged, becomes immune for 1 second and then can be damaged again after&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Monster Health Bar &amp; Death Animation&#10;-added swing sword sound effect, and others&#10;-added passive AI for bat monster&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Character Status UI&#10;-Press P to access character UI&#10;-need to fix hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Scrolling Message, Leveling Up, Damage Calculation&#10;-Press P to access character UI&#10;- when healing using the healing pool, the monsters respawn&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Inventory&#10;-Press P to access inventory&#10;-WASD keys to move inventory cursor&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Equipables &amp; Usable Items&#10;-Press P to access inventory and enter key to switch or use items&#10;-added new axe weapon, has more damage than sword but less range (using heil sprite for now)&#10;-WASD keys to move inventory cursor&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Projectiles&#10;-Press F to shoot projectile&#10;-added new fireball, still need to implement mana&#10;&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Monster Projectiles and Mana&#10;-Press F to shoot projectile&#10;-added new fireball&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Item Drops&#10;-change key to interact to E&#10;-Press F to shoot projectile&#10;-added new fireball&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to fix item drops solid area&#10;-need to fix fireball solid area&#10;-need to optimize hit box value for sword attack area &#10;-still need to fix hit box values for radish npc\" />\r\n    <MESSAGE value=\"Added Breaking Objects &#10;-need axe to cut down tree&#10;-added interactive Tile dry tree and trunk&#10;-Fixed most hit boxes for entities and objects&#10;&#10;-need to optimize game and fix screen scaling\" />\r\n    <MESSAGE value=\"Added Particles&#10;-added some particles flying when you cut a tree or hit a monster with your fireball.&#10;&#10;-need to optimize game and fix screen scaling\" />\r\n    <MESSAGE value=\"Added Options Screen and Save Function for Settings (like music and fullscreen)&#10;-press ESC key to open Options Key.&#10;-auto save when change is made in settings&#10;&#10;&#10;-need to optimize game and fix screen scaling\" />\r\n    <MESSAGE value=\"Added Trade System&#10;-implemented a merchant NPC so we can trade(Buy/Sell) items.&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to implement spawn map and dungeon&#10;-need to set mobs for dungeons and others\" />\r\n    <MESSAGE value=\"Added Changed Map keys&#10;-press M for map and N for mini-map&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to implement spawn map and dungeon&#10;-need to set mobs for dungeons and others\" />\r\n    <MESSAGE value=\"Added Object Detection/Loot, Stackable Items, Lighting Item, Day and Night Cycle, Advanced Combat, Guard and Parry&#10;&#10;-implemented darkness and lighting effects that are provided by torch or lantern so we can create nighttime situations or dark interiors such as dungeons, caves, ruins, etc.&#10;-added a lantern so we can equip/un-equip it and change the lighting situation.&#10;-implemented the day and night cycle. Also, added a tent so we can sleep until the next morning.&#10;-implemented attack AI.&#10;- implement a guard and parry (just guard) system so we can stagger the attacker and give extra damage!&#10;-press space to guard/parry&#10;&#10;--did not implement map bcuz of memory usage errors&#10;&#10;-need to fix combat for orc, also sprite&#10;-need new orc sprites&#10;-need to add objects and chests into maps&#10;-need to remove ui&#10;-need to replace images used to new ones&#10;-need to fix Mini map and map function&#10;-need to fix ui setting for retry&#10;-need to make plans for level progression&#10;-need to optimize game and fix screen scaling&#10;-need to set more mobs for dungeons and spawn\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added Object Detection/Loot, Stackable Items, Lighting Item, Day and Night Cycle, Advanced Combat, Guard and Parry&#10;&#10;-implemented darkness and lighting effects that are provided by torch or lantern so we can create nighttime situations or dark interiors such as dungeons, caves, ruins, etc.&#10;-added a lantern so we can equip/un-equip it and change the lighting situation.&#10;-implemented the day and night cycle. Also, added a tent so we can sleep until the next morning.&#10;-implemented attack AI.&#10;- implement a guard and parry (just guard) system so we can stagger the attacker and give extra damage!&#10;-press space to guard/parry&#10;&#10;--did not implement map bcuz of memory usage errors&#10;&#10;-need to fix combat for orc, also sprite&#10;-need new orc sprites&#10;-need to add objects and chests into maps&#10;-need to remove ui&#10;-need to replace images used to new ones&#10;-need to fix Mini map and map function&#10;-need to fix ui setting for retry&#10;-need to make plans for level progression&#10;-need to optimize game and fix screen scaling&#10;-need to set more mobs for dungeons and spawn\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalArgumentException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
+++ b/.idea/workspace.xml	(date 1733772188358)
@@ -4,71 +4,19 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a32925c1-4475-423e-9d0a-63cec802cec7" name="Changes" comment="Added Object Detection/Loot, Stackable Items, Lighting Item, Day and Night Cycle, Advanced Combat, Guard and Parry&#10;&#10;-implemented darkness and lighting effects that are provided by torch or lantern so we can create nighttime situations or dark interiors such as dungeons, caves, ruins, etc.&#10;-added a lantern so we can equip/un-equip it and change the lighting situation.&#10;-implemented the day and night cycle. Also, added a tent so we can sleep until the next morning.&#10;-implemented attack AI.&#10;- implement a guard and parry (just guard) system so we can stagger the attacker and give extra damage!&#10;-press space to guard/parry&#10;&#10;--did not implement map bcuz of memory usage errors&#10;&#10;-need to fix combat for orc, also sprite&#10;-need new orc sprites&#10;-need to add objects and chests into maps&#10;-need to remove ui&#10;-need to replace images used to new ones&#10;-need to fix Mini map and map function&#10;-need to fix ui setting for retry&#10;-need to make plans for level progression&#10;-need to optimize game and fix screen scaling&#10;-need to set more mobs for dungeons and spawn">
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_4_2024_8_01_PM_[Changes]/shelved.patch" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_4_2024_8_01_PM__Changes_.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/Door.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/chest.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/chest_opened.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/lantern.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_down_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_down_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_left_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_left_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_right_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_right_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_up_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_attack_up_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_down_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_down_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_left_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_left_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_right_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_right_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_up_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/orc_up_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/shelved.patch" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]/tent.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/Door.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/chest.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/chest_opened.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/lantern.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_down_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_down_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_left_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_left_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_right_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_right_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_up_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_up_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_down_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_down_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_left_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_left_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_right_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_right_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_up_1.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_up_2.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/shelved.patch" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/tent.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_1.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/data/DataStorage.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/data/SaveLoad.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/environment/Lighting.java" afterDir="false" />
+    <list default="true" id="a32925c1-4475-423e-9d0a-63cec802cec7" name="Changes" comment="Added monster">
+      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_10_54_PM__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM_[Changes]1/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_1_2024_3_34_PM__Changes_1.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_4_2024_8_01_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_4_2024_8_01_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_1.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/config.txt" beforeDir="false" afterPath="$PROJECT_DIR$/config.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/res/objects/Door.png" beforeDir="false" afterPath="$PROJECT_DIR$/res/objects/Door.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/AssetSetter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/AssetSetter.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/EventHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/EventHandler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/GamePanel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/KeyHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/KeyHandler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/DannyGermanSimulator/UI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DannyGermanSimulator/UI.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Entity/Entity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/Entity.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Entity/NPC_Merchant.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/NPC_Merchant.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Entity/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/Player.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/monster/MON_Orc.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/monster/MON_Orc.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/object/OBJ_Chest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/object/OBJ_Chest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ReadMe.txt" beforeDir="false" afterPath="$PROJECT_DIR$/ReadMe.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/res/objects/door.png" beforeDir="false" afterPath="$PROJECT_DIR$/res/objects/door.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/monster/MON_Cock.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/monster/MON_Cock.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -83,6 +31,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="master" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
@@ -93,8 +46,18 @@
 }</component>
   <component name="GithubPullRequestsUISettings"><![CDATA[{
   "selectedUrlAndAccountId": {
-    "url": "https://github.com/Ivann0730/JAVA-Capstone",
-    "accountId": "da8b10d6-8d47-4816-a8df-c8eb9da47b9a"
+    "url": "https://github.com/Ivann0730/JAVA-Capstone.git",
+    "accountId": "82218363-1347-4652-947f-094d7dc30d30"
+  },
+  "recentNewPullRequestHead": {
+    "server": {
+      "useHttp": false,
+      "host": "github.com",
+      "port": null,
+      "suffix": null
+    },
+    "owner": "Ivann0730",
+    "repository": "JAVA-Capstone"
   }
 }]]></component>
   <component name="ProblemsViewState">
@@ -114,7 +77,7 @@
     "Application.Main.executor": "Run",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "master",
+    "git-widget-placeholder": "#2 on ImplementMobs",
     "ignore.virus.scanning.warn.message": "true",
     "kotlin-language-version-configured": "true",
     "last_opened_file_path": "D:/JAVA2/JAVA-Capstone/res/objects",
@@ -166,6 +129,14 @@
       </list>
     </recent_temporary>
   </component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.17890.1" />
+        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.17890.1" />
+      </set>
+    </attachedChunks>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -183,6 +154,10 @@
       <workItem from="1733022424350" duration="251000" />
       <workItem from="1733022688569" duration="10255000" />
       <workItem from="1733492124270" duration="7507000" />
+      <workItem from="1733649719341" duration="1615000" />
+      <workItem from="1733654981950" duration="3004000" />
+      <workItem from="1733756513314" duration="4553000" />
+      <workItem from="1733761124119" duration="8849000" />
     </task>
     <task id="LOCAL-00001" summary="partial">
       <option name="closed" value="true" />
@@ -464,7 +439,23 @@
       <option name="project" value="LOCAL" />
       <updated>1733560678455</updated>
     </task>
-    <option name="localTasksCounter" value="36" />
+    <task id="LOCAL-00036" summary="Added ReadMe.txt">
+      <option name="closed" value="true" />
+      <created>1733759572597</created>
+      <option name="number" value="00036" />
+      <option name="presentableId" value="LOCAL-00036" />
+      <option name="project" value="LOCAL" />
+      <updated>1733759572597</updated>
+    </task>
+    <task id="LOCAL-00037" summary="Added monster">
+      <option name="closed" value="true" />
+      <created>1733762557998</created>
+      <option name="number" value="00037" />
+      <option name="presentableId" value="LOCAL-00037" />
+      <option name="project" value="LOCAL" />
+      <updated>1733762557998</updated>
+    </task>
+    <option name="localTasksCounter" value="38" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -482,8 +473,6 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="Sounds Implemented &#10;added coin sound effect but cannot be heard well due to bg music. also more items added and added HP and Boots to add speed&#10;(note: still needs optimization)" />
-    <MESSAGE value="UI Implemented&#10;-playtime is now shown&#10;-new text appears when object is picked up&#10;-fixed the collision values for player&#10;//to fix object collision values&#10;(note: still needs optimization)" />
     <MESSAGE value="Improved Rendering Performance&#10;-press T to show draw time&#10;(before optimization draw time was 600000 - 800000 or 0.006 - 0.008 seconds, after optimization it is now 0.001 average)&#10;-cleaned up code a little bit&#10;-added utility class for scaling image for better performance" />
     <MESSAGE value="Added NPC class&#10;-new radish npc (has simple AI implemented to randomize walk direction)&#10;-hit box values need to be fixed&#10;-cleaned up code a little bit" />
     <MESSAGE value="Added Dialogue&#10;-to talk with npc, collide with npc and press ENTER key&#10;-Added font&#10;-still need to fix hit box values" />
@@ -507,7 +496,9 @@
     <MESSAGE value="Added Trade System&#10;-implemented a merchant NPC so we can trade(Buy/Sell) items.&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to implement spawn map and dungeon&#10;-need to set mobs for dungeons and others" />
     <MESSAGE value="Added Changed Map keys&#10;-press M for map and N for mini-map&#10;&#10;-need to optimize game and fix screen scaling&#10;-need to implement spawn map and dungeon&#10;-need to set mobs for dungeons and others" />
     <MESSAGE value="Added Object Detection/Loot, Stackable Items, Lighting Item, Day and Night Cycle, Advanced Combat, Guard and Parry&#10;&#10;-implemented darkness and lighting effects that are provided by torch or lantern so we can create nighttime situations or dark interiors such as dungeons, caves, ruins, etc.&#10;-added a lantern so we can equip/un-equip it and change the lighting situation.&#10;-implemented the day and night cycle. Also, added a tent so we can sleep until the next morning.&#10;-implemented attack AI.&#10;- implement a guard and parry (just guard) system so we can stagger the attacker and give extra damage!&#10;-press space to guard/parry&#10;&#10;--did not implement map bcuz of memory usage errors&#10;&#10;-need to fix combat for orc, also sprite&#10;-need new orc sprites&#10;-need to add objects and chests into maps&#10;-need to remove ui&#10;-need to replace images used to new ones&#10;-need to fix Mini map and map function&#10;-need to fix ui setting for retry&#10;-need to make plans for level progression&#10;-need to optimize game and fix screen scaling&#10;-need to set more mobs for dungeons and spawn" />
-    <option name="LAST_COMMIT_MESSAGE" value="Added Object Detection/Loot, Stackable Items, Lighting Item, Day and Night Cycle, Advanced Combat, Guard and Parry&#10;&#10;-implemented darkness and lighting effects that are provided by torch or lantern so we can create nighttime situations or dark interiors such as dungeons, caves, ruins, etc.&#10;-added a lantern so we can equip/un-equip it and change the lighting situation.&#10;-implemented the day and night cycle. Also, added a tent so we can sleep until the next morning.&#10;-implemented attack AI.&#10;- implement a guard and parry (just guard) system so we can stagger the attacker and give extra damage!&#10;-press space to guard/parry&#10;&#10;--did not implement map bcuz of memory usage errors&#10;&#10;-need to fix combat for orc, also sprite&#10;-need new orc sprites&#10;-need to add objects and chests into maps&#10;-need to remove ui&#10;-need to replace images used to new ones&#10;-need to fix Mini map and map function&#10;-need to fix ui setting for retry&#10;-need to make plans for level progression&#10;-need to optimize game and fix screen scaling&#10;-need to set more mobs for dungeons and spawn" />
+    <MESSAGE value="Added ReadMe.txt" />
+    <MESSAGE value="Added monster" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added monster" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"BusyWait\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" />\r\n    <inspection_tool class=\"ConstantValue\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"REPORT_CONSTANT_REFERENCE_VALUES\" value=\"false\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"ThrowablePrintStackTrace\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" />\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1733760737921)
@@ -5,6 +5,11 @@
     <inspection_tool class="ConstantValue" enabled="true" level="WARNING" enabled_by_default="true">
       <option name="REPORT_CONSTANT_REFERENCE_VALUES" value="false" />
     </inspection_tool>
+    <inspection_tool class="DuplicatedCode" enabled="true" level="WEAK WARNING" enabled_by_default="true">
+      <Languages>
+        <language minSize="79" name="Java" />
+      </Languages>
+    </inspection_tool>
     <inspection_tool class="ThrowablePrintStackTrace" enabled="false" level="WARNING" enabled_by_default="false" />
   </profile>
 </component>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><changelist name=\"Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1\" date=\"1733522686279\" recycled=\"true\" deleted=\"true\">\r\n  <option name=\"PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/shelved.patch\" />\r\n  <option name=\"DESCRIPTION\" value=\"Uncommitted changes before Update at 12/7/2024 6:04 AM [Changes]\" />\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_down_2.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_down_2.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_attack_down_1.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_down_1.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_attack_right_1.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_right_1.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_right_2.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_right_2.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_attack_left_1.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_left_1.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/objects/chest.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/chest.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_up_1.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_up_1.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_attack_right_2.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_right_2.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_attack_left_2.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_left_2.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_attack_down_2.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_down_2.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_attack_up_2.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_up_2.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_up_2.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_up_2.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/objects/tent.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/tent.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/objects/Door.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/Door.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/objects/lantern.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/lantern.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_right_1.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_right_1.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_left_1.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_left_1.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_down_1.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_down_1.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_attack_up_1.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_up_1.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/monster/orc_left_2.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_left_2.png\" />\r\n  </binary>\r\n  <binary>\r\n    <option name=\"AFTER_PATH\" value=\"res/objects/chest_opened.png\" />\r\n    <option name=\"SHELVED_PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/chest_opened.png\" />\r\n  </binary>\r\n</changelist>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_1.xml
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_1.xml	(revision 0ac479165f3b0f2a683e01df57732a86285dd9a1)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM__Changes_1.xml	(date 1733761133221)
@@ -2,86 +2,107 @@
   <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/shelved.patch" />
   <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/7/2024 6:04 AM [Changes]" />
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_down_2.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_down_2.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_attack_down_1.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_down_1.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_attack_right_1.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_right_1.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_right_2.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_right_2.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_attack_left_1.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_left_1.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/objects/chest.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/chest.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_up_1.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_up_1.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_attack_right_2.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_right_2.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_attack_left_2.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_left_2.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_attack_down_2.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_down_2.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_attack_up_2.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_up_2.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_up_2.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_up_2.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/objects/tent.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/tent.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/objects/Door.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/Door.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/objects/lantern.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/lantern.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_right_1.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_right_1.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_left_1.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_left_1.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_down_1.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_down_1.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_attack_up_1.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_attack_up_1.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/monster/orc_left_2.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/orc_left_2.png" />
   </binary>
   <binary>
+    <option name="BEFORE_PATH" />
     <option name="AFTER_PATH" value="res/objects/chest_opened.png" />
     <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_6_04_AM_[Changes]1/chest_opened.png" />
   </binary>
